---
title: SSH login
aliases:
  - run_r_hpc.html
author: Marie-Hélène Burle
---

:::{.def}

This section will show you how to access our temporary remote cluster through SSH.

:::

## Why not use an RStudio server?

In [our introduction to R](https://mint.westdri.ca/r/top_intro.html), we used an RStudio server running on a remote cluster. In this course, we will log in a similar remote supercomputer using [Secure Shell](https://en.wikipedia.org/wiki/Secure_Shell), then run R scripts from the command line.

Why are we not making use of the interactivity of R which is an interpreted language and why are we not using the added comfort of an IDE? The short answer is: resource efficiency.

Once you have developed your code in an interactive fashion in the IDE of your choice using small hardware resources on a sample of your data, running scripts allows you to only request large resources when you need them (i.e. when your code is running). This prevents heavy resources from sitting idle when not in use, as would happen in an interactive session while you type, think, etc. It will save you money on commercial clusters and waiting time on the Alliance clusters.

This course being about high-performance R, let's learn to use it through scripts.

## Remote connection to the cluster via SSH

*You do not need to install anything on your machine for this course since we will run everything on this remote cluster.*

### Step one: get a username and the password

We will give you a link to an etherpad during the workshop. Add your name next to a free username to claim it.

We will also give you the password for our training cluster.

### Step two: run the ssh command

#### &nbsp;•&nbsp; Linux and macOS users

Linux users: &ensp;&ensp;open the terminal emulator of your choice.\
macOS users: &nbsp;&nbsp;open "Terminal".

Then type:

```{.bash}
ssh userxx@hostname
```

:::{.note}

- Replace `userxx` by your username (e.g. `user09`).
- Replace `hostname` by the hostname we will give you the day of the workshop.

:::

#### &nbsp;•&nbsp; Windows users

We suggest using [the free version of MobaXterm](https://mobaxterm.mobatek.net/download.html). MobaXterm comes with a terminal emulator and a GUI interface for SSH sessions.

Open MobaXterm, click on "Session", then "SSH", and fill in the Remote host name and your username.

:::{.note}

[Here](https://mobaxterm.mobatek.net/demo.html) is a live demo.

:::

### Step three: enter the password

When prompted, enter the password we gave you.

[You will not see any character as you type the password: this is called blind typing and is a Linux safety feature. It can be unsettling at first not to get any feed-back while typing as it really looks like it is not working. Type slowly and make sure not to make typos.]{.emph}

You will be asked whether you are sure that you want to continue connecting. Answer "yes".

You are now logged in and your prompt should look like the following (with your actual username):

```
[userxx@login1 ~]$
```

### Troubleshooting

Problems logging in are almost always due to typos. If you cannot log in, retry slowly, entering your password carefully.
