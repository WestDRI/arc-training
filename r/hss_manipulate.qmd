---
title: Data wrangling
author: Marie-Hélène Burle
---

:::{.def}

Once we know what is in our data, we can start playing with it. Let's manipulate the `us_contagious_diseases` dataset from the [dslabs package](https://cran.r-project.org/web/packages/dslabs/index.html).

:::

## Load packages

One of the tidyverse packages is very useful for data manipulation: [dplyr](https://dplyr.tidyverse.org/). Let's load the `dslabs` package again as well as `dplyr`:

```{r}
library(dslabs)
library(dplyr)
```

## Indexing

You can extract a subset of the data using their position by indexing. Indexing in R starts with `1` (in many languages, the first index is `0`) and it is done with square brackets. Since a data frame has two dimensions, there are two possible indices in the square brackets:

- the row index,
- the column index.

You can index a single element:

```{r}
us_contagious_diseases[1, 1]
us_contagious_diseases[1, 2]
```

Or a full row:

```{r}
us_contagious_diseases[1, ]
us_contagious_diseases[3000, ]
```

:::{.exo}

:::{.yourturn}

Your turn:

:::

How would you index the year column?

:::

## Filtering rows

You can also filter data points based on their values:

```{r}
us_contagious_diseases |>
  filter(state == "California") |>
  count()
```

:::{.exo}

:::{.yourturn}

Your turn:

:::

How many data points are there for the state of Arizona?

:::

```{r}
us_contagious_diseases |>
  filter(state == "California" & year > 2000)
```

```{r}
us_contagious_diseases |>
  filter(state == "California" & year > 2000) |>
  arrange(year)
```

```{r}
us_contagious_diseases |>
  filter(state == "California" & year > 2000) |>
  arrange(count)
```

```{r}
us_contagious_diseases |>
  filter(state == "California" & year > 2000) |>
  arrange(desc(count))
```

## Selecting columns

We saw how to index columns from their position. It is also possible to select them based on their names:

```{r}
head(us_contagious_diseases$year, 50)
```

If you want to select several columns, you can use the `select()` function from `dplyr`:

```{r}
us_contagious_diseases |>
  filter(state == "California" & year > 2000 & disease == "Hepatitis A") |>
  select(year, count, population)
```

## Grouping data

It is often useful to group data by categories to compute some summary statistics.

For instance, we can group by year and calculate the total numbers of infections:

```{r}
us_contagious_diseases |>
  group_by(year) |>
  summarise(total = sum(count))
```

Alternatively, we can group by state and get the totals:

```{r}
us_contagious_diseases |>
  group_by(state) |> 
  summarise(total = sum(count))
```

We can also group by year and state and get the totals:

```{r}
us_contagious_diseases |>
  group_by(year, state) |> 
  summarise(total = sum(count))
```
