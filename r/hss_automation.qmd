---
title: Automation
author: Marie-Hélène Burle
resources:
  - "hss_data/arc1.csv"
  - "hss_data/arc2.csv"
  - "hss_data/arc3.csv"
  - "hss_data/arc4.csv"
  - "hss_data/arc5.csv"
---

:::{.def}

One of the strengths of programming is the ability to automate tasks.

In this section, we will see how a loop can automate the creation of file names.

:::

Let's say that we now want to import data from 5 files arc1.csv, ..., arc5.csv and create 5 data frames with their data.

<!-- We will need the `readr` package for this of course: -->

<!-- ```{r} -->
<!-- library(readr) -->
<!-- ``` -->

We need a character vector with the file names.

We could create it this way:

```{r}
files <- c(
  "https://mint.westdri.ca/r/hss_data/arc1.csv",
  "https://mint.westdri.ca/r/hss_data/arc2.csv",
  "https://mint.westdri.ca/r/hss_data/arc3.csv",
  "https://mint.westdri.ca/r/hss_data/arc4.csv",
  "https://mint.westdri.ca/r/hss_data/arc5.csv"
)
```

It works of course:

```{r}
files
```

But if we had 50 files instead of 5, it would be quite a tedium! And if we had 500 files, it would be unrealistic. A better approach is to write a loop.

In order to store the results of a loop, we need to create an empty object and assign to it the result of the loop at each iteration. It is very important to pre-allocate memory: by creating an empty object of the final size, the necessary memory to hold this object is requested once (then the object gets filled in while the loop runs). Without this, more memory would have to be allocated at each iteration of the loop and this is highly inefficient.

So let's create an empty vector of length 5 and of type character:

```{r}
files <- character(5)
```

Now we can fill in our vector with the proper values with the loop:

```{r}
for (i in 1:5) {
  files[i] <- paste0(
    "https://mint.westdri.ca/r/hss_data/arc",
    i,
    ".csv"
  )
}
```

This gives us the same result, but the big difference is that it is scalable:

```{r}
files
```

:::{.note}

If you had all the files in one directory, an alternative approach would be to create a list of all the names matching a regular expression.

In our case, we would use:

```{.r}
files <- list.files(pattern="^arc\\d+\\.csv$")
```

:::

<!-- https://stackoverflow.com/questions/11433432/how-to-import-multiple-csv-files-at-once -->

<!-- ## Automate file reading -->

<!-- Now we can use this vector to read in all our files: -->

<!-- ```{r} -->
<!-- for (i in files) { -->
<!--   arc[i] <- read_csv( -->
<!--     i, -->
<!--     na = c("N/A", "n/a"), -->
<!--     col_types = cols(Date = col_date("%d/%m/%Y")) -->
<!--   ) -->
<!-- ``` -->

<!-- ```{r} -->
<!-- library(readr) -->
<!-- library(lubridate) -->
<!-- ``` -->

<!-- ```{.r} -->
<!-- arc1 <- read_csv( -->
<!--   "https://mint.westdri.ca/r/hss_data/arc1.csv", -->
<!--   na = c("N/A", "n/a"), -->
<!--   col_types = cols(Date = col_date("%d/%m/%Y")) -->
<!-- ) -->

<!-- arc1 <- arc1 |> -->
<!--   rename( -->
<!--     Artifacts = `Number of artifacts`, -->
<!--     PI = `Name of PI` -->
<!-- ) -->

<!-- write_csv(arc1, "arc1_clean.csv") -->
<!-- ``` -->

<!-- First, we need a character vector with the file names. -->

<!-- We could create it this way: -->

<!-- ```{r} -->
<!-- files <- c( -->
<!--   "https://mint.westdri.ca/r/hss_data/arc1.csv", -->
<!--   "https://mint.westdri.ca/r/hss_data/arc2.csv", -->
<!--   "https://mint.westdri.ca/r/hss_data/arc3.csv", -->
<!--   "https://mint.westdri.ca/r/hss_data/arc4.csv", -->
<!--   "https://mint.westdri.ca/r/hss_data/arc5.csv" -->
<!-- ) -->

<!-- files -->
<!-- ``` -->

<!-- But if we had 200 files instead of 5, it would be quite a tedium! A better approach is to write a loop: -->

<!-- ```{r} -->
<!-- files <- character(5) -->

<!-- for (i in 1:5) { -->
<!--   files[i] <- paste0("https://mint.westdri.ca/r/hss_data/arc", i, ".csv") -->
<!-- } -->

<!-- files -->
<!-- ``` -->

<!-- This gives us the same result, but it is scalable. -->

<!-- Then we need to create the names of the files we will save our data frames to: -->

<!-- ```{r} -->
<!-- files_clean <- character(5) -->

<!-- for (i in 1:5) { -->
<!--   files_clean[i] <- paste0("arc", i, "_clean.csv") -->
<!-- } -->

<!-- files_clean -->
<!-- ``` -->

<!-- ```{r} -->
<!-- tib <- tibble( -->
<!--   a = character(), -->
<!--   b = ymd(), -->
<!--   c = double(), -->
<!--   d = character(), -->
<!--   e = character() -->
<!--   ) -->

<!-- arc <- rep(list(tib), 5) -->

<!-- files_clean <- character(5) -->

<!-- for (i in files) { -->
<!--   arc[i] <- read_csv( -->
<!--     i, -->
<!--     na = c("N/A", "n/a"), -->
<!--     col_types = cols(Date = col_date("%d/%m/%Y")) -->
<!--   ) -->

<!--   arc[i] <- arc[i] |> -->
<!--     rename( -->
<!--       Artifacts = `Number of artifacts`, -->
<!--       PI = `Name of PI` -->
<!--     ) -->

<!-- files_clean[i] <- paste0("arc", i, "_clean.csv") -->

<!-- write_csv(arc[i], files_clean[i]) -->
<!-- } -->
<!-- ``` -->

