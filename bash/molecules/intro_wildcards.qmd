---
title: Wildcards
aliases:
  - wildcards.html
author: Marie-Hélène Burle<br>*Adapted from [a Software Carpentry workshop](https://swcarpentry.github.io/shell-novice/index.html)*
resources: /bash/molecules_data.zip
---

:::{.def}

Wildcards are a convenient way to select items matching patterns.

:::

:::{.callout-note collapse="true"}

## Data for this section

For this section, we will play with files created by [The Carpentries](https://carpentries.org/).

You can download them into a zip file called `molecules_data.zip` with:

```{.bash}
curl --output molecules_data.zip https://mint.westdri.ca/bash/molecules_data.zip
```

You can then unzip that file with:

```{.bash}
unzip molecules_data.zip
```

You should now have a `molecules_data` directory.

`cd` into it:

```{.bash}
cd molecules_data
```

:::

Let's list the files in this directory:

```{.bash}
ls
```

```
cubane.pdb  ethane.pdb  methane.pdb  octane.pdb  pentane.pdb  propane.pdb
```

You could do the same with:

```{.bash}
ls *
```

The star expands to all files/directories matching any pattern. It is a wildcard.

Of course, you can match more interesting patterns.

For instance, to list all files *starting* with the letter `o`, we can run:

```{.bash}
ls o*
```

```
octane.pdb
```

To list all files containing the letter `o` anywhere in their name, you can use:


```{.bash}
ls *o*
```

```
octane.pdb  propane.pdb
```

This saves a lot of typing and is a powerful way to apply a command to a subset of files/directories.

:::{.exo}

:::{.yourturn}

Your turn:

:::

Wildcards are often used to select all files with a certain extension.

Let's create 3 new files:

```{.bash}
touch file1.txt file2.txt file3.md
```

How would you list all files with the `.txt` extension and only those?

:::
