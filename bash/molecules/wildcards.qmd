---
title: Wildcards
author: Marie-Hélène Burle
---

```{r}

```

:::{.def}

Wildcards are a convenient way to select items matching patterns.

:::

:::{.callout-accordion collapse="true"}

## ***Data for this section***

For this section, we will play with files created by [The Carpentries](https://carpentries.org/).

You can download them into a zip file called `bash.zip` with:

```{.bash}
wget http://bit.ly/bashfile -O bash.zip
```

You can then unzip that file with:

```{.bash}
unzip bash.zip
```

Finally, you can delete the zip file:

```{.bash}
rm bash.zip
```

You should now have a `data-shell` directory with a `molecules` subdirectory.

`cd` into it:

```{.bash}
cd data-shell/molecules
```

:::

Let's explore the molecules data:

```{.bash}
ls
```

```
cubane.pdb
ethane.pdb
methane.pdb
octane.pdb
pentane.pdb
propane.pdb
```

```{bash}
ls p*        # This wildcard gets expanded to any file starting with p
```

```{bash}
ls *.pdb     # This wildcard gets expanded to any .pdb file
```

```{bash}
wc -l *.pdb  # Prints the number of lines in each .pdb file
```

Wildcards are really powerful to apply a command to all the elements having a common pattern.

For instance, we can delete all the files we created earlier (`file1.sh`, `file2.sh`, etc.) with a single command:

```{.bash}
rm file*.sh
```

[Be very careful that `rm` is irreversible. Deleted files do not go to the trash: they are gone.]{.emph}
