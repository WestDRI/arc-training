---
title: String manipulation
author:
  - Marie-Hélène Burle
  - Alex Razoumov
---

:::{.def}

This section shows how to subset, search, replace, or concatenate strings simply using the Bash variable extraction syntax.

:::

```{r}

```

## Getting a subset

```{bash}
var="hello"
echo ${var:2}      # Print from character 2
echo ${var:2:1}    # Print 1 character from character 2
```

:::{.note}

Bash indexes from 0.

:::

## Search and replace

```{bash}
var="hello"
echo ${var/l/L}    # Replace the first match of l by L
echo ${var//l/L}   # Replace all matches of l by L
```

## String concatenation

If you want to concatenate the expanded variable with another string, you need to use curly braces or quotes.

:::{.example}

This does not return anything because there is no variable called `varshine`:

:::

```{bash}
var=sun
echo $varshine
```

:::{.example}

These two syntaxes do work:

:::

```{bash}
var=sun
echo ${var}shine
echo "$var"shine
```
