---
title: Resources
aliases:
  - resources.html
author: Marie-Hélène Burle
---

:::{.def}

This section contains useful resources on Git as well as some advice.

:::

### Online documentation

- Official [Git manual](https://git-scm.com/docs)
- Open source [Pro Git book](https://git-scm.com/book/en/v2)

### Courses & workshops

- [Western Canada Research Computing Git workshops](https://westgrid-cli.netlify.app/workshops/)
- [WestGrid Summer School 2020 Git course](https://wgschool.netlify.app/git/)
- [WestGrid Autumn School 2020 Git course](https://autumnschool.netlify.app/git/)
- [Software Carpentry Git lesson](http://swcarpentry.github.io/git-novice/)

### Q & A

- [Stack Overflow [git] tag](https://stackoverflow.com/questions/tagged/git)

### Troubleshooting

#### "Listen" to Git!

Git is extremely verbose: by default, it will return lots of information. Read it!

These messages may feel overwhelming at first, but:

- they will make more and more sense as you gain expertise,
- they often give you clues as to what the problem is,
- even if you don't understand them, you can use them as Google search terms.

#### (Re-read) the doc

As I have no memory, I need to check the man pages all the time. That's ok! It is quick and easy.

For more detailed information and examples, I really like [the Official Git manual](https://git-scm.com/docs).

#### Search online

- Google
- [Stack Overflow [git] tag](https://stackoverflow.com/questions/tagged/git)

#### Don't panic

Be analytical. It is easy to panic and feel lost if something doesn't work as expected. Take a breath and start with the basis:

- make sure you are in the repo (`pwd`) and the files are where you think they are (`ls -a`),
- inspect the repository (`git status`, `git diff`, `git log`). Make sure not to overlook what Git is "telling" you there.
