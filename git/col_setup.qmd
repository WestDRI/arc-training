---
title: GitHub account setup
author: Marie-Hélène Burle
---

:::{.def}

*In this course, we are using [GitHub](https://github.com/) as an example, but other services such as [GitLab](https://gitlab.com/) and [Bitbucket](https://bitbucket.org/) offer similar services.*

Before starting to use GitHub, you need to create and configure an account. We will do this in this section.

:::

## Create a free GitHub account

If you don't already have one, go to [the GitHub website](https://github.com/) and create a free account.

## Connect to GitHub

The 2 main ways to push data to GitHub are:

- using a token,
- using SSH.

:::{.note}

There are alternative methods but you will have to look for information on your own:

- If you use Edge, there is an integration with GitHub since they are both owned by Microsoft. \
- The GitHub Desktop application gives additional options to connect. \
- If you use the GitHub app, it also gives authentication methods.

:::

### Using a token

A token can be generated [directly within GitHub settings](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-fine-grained-personal-access-token), which seems convenient. However, if you use a token, you will have to communicate with GitHub via HTTPS and enter your token whenever you push and pull to your GitHub directories. It is quite tedious.

If you have to use a token, here is the workflow:

- In the upper-right corner of any page on GitHub, click your profile photo, then click [Settings]{.codelike}.
- In the left sidebar, click [Developer settings]{.codelike}.
- In the left sidebar, under [Personal access tokens]{.codelike}, click [Fine-grained tokens]{.codelike}.
- Click [Generate new token]{.codelike}.
- Under [Token name]{.codelike}, enter a name for the token.
- Under [Repository access]{.codelike}, select which repositories you want the token to access.
- Under [Permissions]{.codelike}, select which permissions to grant the token.
- Click [Generate token]{.codelike}.
- [Make sure to copy the token and save it to your computer.]{.emph}

When you push to GitHub, you will be asked for your username and password. [Your username is your GitHub username and the password is your token.]{.emph}

### Using SSH

[To use SSH](https://docs.github.com/en/authentication/connecting-to-github-with-ssh), you first need to [generate an SSH key pair](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#generating-a-new-ssh-key), then [add the public key to your GitHub account](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account#adding-a-new-ssh-key-to-your-account).

#### SSH agent

An SSH key pair is a set of 2 files: the private key and the public key. You keep the private key securely on your machine—think of it as a key to open a lock—and you upload the public key to GitHub (or other places such as the Alliance clusters)—think of that as a lock.

Your private key allows to "open the lock" if it matches the public key.

People can see your public key, but they can't generate the private key from it. Since you are the only one having the matching private key, you are the only one able to open that lock and log in securely ... unless someone steals your private key (if they get access to your computer).

To add a level of safety, you can set a passphrase when you generate an SSH key pair. Now, to open that lock (public key), not only you need to have the matching private key, but you also need to enter the passphrase.

But that means that you will have to enter your passphrase each time you push and pull to GitHub, which is not much more convenient than using tokens!

The trick here is to use an SSH agent to cache your passphrase and not have to type it each time.

##### Linux and macOS

For those using Linux, you can refer to [the Arch Linux wiki section on SSH agent](https://wiki.archlinux.org/title/SSH_keys#SSH_agents).

##### macOS

On macOS, you will be prompted for your passphrase the first time you use your key, but [it will then be saved automatically in your keychain](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/working-with-ssh-key-passphrases?platform=mac#saving-your-passphrase-in-the-keychain).

##### Windows

On Windows, you first [add your SSH key to the SSH agent](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent#adding-your-ssh-key-to-the-ssh-agent), then you can [set your SSH agent to launch automatically when you open Git Bash](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/working-with-ssh-key-passphrases#auto-launching-ssh-agent-on-git-for-windows).

:::{.info}

If you are having issue setting up SSH for GitHub, you can [use a token](#using-a-token) today and look into this later.

:::
