---
title: The next generation of Python notebooks
author: Marie-Hélène Burle
---

:::{.def}

[Project Jupyter](https://jupyter.org/) was extremely innovative when, back in 2011, they built an open source Notebook on top of the [IPython](https://ipython.org/) shell (itself an improvement over the Python shell). Notebooks proved an extremely popular tool for literate programming and are widely used today.

They do however come with two major issues:

- They are a nightmare for version control.

  *The JSON-like format of the `.ipynb` files used by Jupyter makes versioning a challenge without the use of proprietary tools or hacky back and forth conversions with, for instance, [jupytext](https://github.com/mwouts/jupytext).*

- It is easy to forget to rerun cells in order and publish a non-reproducible notebook.

  *[A study of 10 million notebooks published on GitHub found that 36% of them had been run in a non-linear fashion.](https://blog.jetbrains.com/datalore/2020/12/17/we-downloaded-10-000-000-jupyter-notebooks-from-github-this-is-what-we-learned/#consistency-of-notebooks)*

[marimo](https://marimo.io/) is a new generation of open source notebook for Python that addresses these problems by using a dataflow graph under the hood ensuring that cells remain up to date and using `.py` as its file format. `marimo` notebooks also provide excellent interactivity with direct synchronization with the Python kernel. Consequently, these new notebooks have seen a surge in popularity since their launch in 2023.

In this webinar, I will demo the installation and usage of `marimo` notebooks.

:::

[Slides](wb_marimo_slides.qmd){.btn .btn-outline-primary} [(Click and wait: this reveal.js presentation may take a little time to load.)]{.inlinenote}
<br><br>

<!-- {{< video https://www.youtube.com/embed/>}} -->
