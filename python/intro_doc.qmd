---
title: Help and documentation
author: Marie-Hélène Burle
---

:::{.def}

This section shows you how to access help and documentation from within Python.

:::

## Module

You can get help on a module thanks to the `help` function, but only after you have loaded that module into your session:

```{.python}
import os
help(os)
```

```
Help on module os:

NAME
    os - OS routines for NT or Posix depending on what system we're on.

MODULE REFERENCE
    https://docs.python.org/3.13/library/os.html

    The following documentation is automatically generated from the Python
    source files.  It may be incomplete, incorrect or include features that
    are considered implementation detail and may vary between Python
    implementations.  When in doubt, consult the module reference at the
    location listed above.

...
```

## Functions

You can also access the internal Python documentation on a function with `help`:

```{python}
help(max)
```

:::{.note}

In Jupyter, you can also use `?max` or `max?`.

:::

Alternatively, you can print the `__doc__` method of the function:

```{python}
print(max.__doc__)
```

## Methods of object types

Some methods belong to specific objects types (e.g. lists have a method called `append`).

In those cases, `help(<method>)` won't work.

:::{.example}

Example:

:::

```{python}
help(append)
```

What you need to run instead is `help(<object>.<method>)`.

:::{.example}

Example:

:::

```{python}
help(list.append)
```

## Help while using IPython or Jupyter

When using IPython (which means also when using Jupyter Lab or Jupyter notebooks since they run IPython), you can access help by using `?`.

:::{.example}

Example:

:::

```{.python}
?sum
```

```
Signature: sum(iterable, /, start=0)
Docstring:
Return the sum of a 'start' value (default: 0) plus an iterable of numbers

When the iterable is empty, return the start value.
This function is intended specifically for use with numeric values and may
reject non-numeric types.
Type:      builtin_function_or_method
```

:::{.note}

Note that, for modules, the help you get this way only contains the description. If you want to get the full documentation (including classes, functions, and data), you need to use the `help` function instead.

:::
