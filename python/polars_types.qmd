---
title: Data types
author: Marie-Hélène Burle
---

:::{.def}

Data types supported by Polars are, for the most part, quite classic.

:::

## List of data types

```{dot}
//| echo: false
//| fig-height: 2000px

strict graph {

bgcolor="transparent"
node [fontname="Inconsolata, sans-serif", shape=plaintext]
rankdir="LR"
edge [color=gray55]

numeric
temporal
nested

sint [label="signed integer"]
uint [label="unsigned integer"]
float

Boolean [style=filled, fillcolor=gray50]
Decimal [style=filled, fillcolor=gray50]

Date [style=filled, fillcolor=gray50]
Time [style=filled, fillcolor=gray50]
Datetime [style=filled, fillcolor=gray50]
Duration [style=filled, fillcolor=gray50]

List [style=filled, fillcolor=gray50]
Struct [style=filled, fillcolor=gray50]
Array [style=filled, fillcolor=gray50]

String [style=filled, fillcolor=gray50]
Binary [style=filled, fillcolor=gray50]
Object [style=filled, fillcolor=gray50]
Categorical [style=filled, fillcolor=gray50]
Enum [style=filled, fillcolor=gray50]
Null [style=filled, fillcolor=gray50]

Int8 [style=filled, fillcolor=gray50]
Int16 [style=filled, fillcolor=gray50]
Int32 [style=filled, fillcolor=gray50]
Int64 [style=filled, fillcolor=gray50]
UInt8 [style=filled, fillcolor=gray50]
UInt16 [style=filled, fillcolor=gray50]
UInt32 [style=filled, fillcolor=gray50]
UInt64 [style=filled, fillcolor=gray50]
Float32 [style=filled, fillcolor=gray50]
Float64 [style=filled, fillcolor=gray50]

numeric -- {sint uint float Decimal}
sint -- {Int8 Int16 Int32 Int64}
uint -- {UInt8 UInt16 UInt32 UInt64}
float -- {Float32 Float64}

temporal -- {Date Time Datetime Duration}

nested -- {List Struct Array}

numeric -- temporal -- nested [style=invis]

{rank=same; numeric temporal nested}

{rank=same; sint uint float}

Null -- Boolean -- Int8 -- Int16 -- Int32 -- Int64 -- UInt8 -- UInt16 -- UInt32 -- UInt64 -- Float32 --Float64 -- Decimal -- Date -- Time -- Datetime -- Duration -- String -- Binary -- Object -- Categorical -- Enum -- List -- Struct -- Array

{rank=same; Null Boolean Int8 Int16 Int32 Int64 UInt8 UInt16 UInt32 UInt64 Float32 Float64 Decimal Date Time Datetime Duration String Binary Object Categorical Enum List Struct Array}

}
```

## Exotic Polars types

`Struct`s are series combining multiple columns.

`Enum` is used for categorical variables. It is stricter, but also more efficient than the more flexible and slower `Categorical` type. When categories are all known before runtime, use `Enum`. If you need to infer the categories at runtime, use `Categorical`.

`Object` allows to wrap any Python object.
