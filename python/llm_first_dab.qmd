---
title: First dab at playing with an LLM
author: Marie-Hélène Burle
---

:::{.def}

In this section, we will download a text from a URL and get some info on it.

:::

## Open a chat

Open an LLM chat interface. If you are familiar with a particular LLM, feel free to use that one. If you have never used an LLM before, you can pick one in [the non-exhaustive list I gave in the previous section](llm_why.html#which-llm-to-use).

You will probably have to create an account. Also note that for most companies, the free models are older and less powerful than those in the pay versions.

## Open a notebook

Open a new notebook in JupyterLab.

When the LLM gives us some code, we will copy paste it in the notebook to run it.

## Download a text file from a URL

The snippet of text we will play with is in a text file I created containing the very beginning of the novel [Going Postal](https://en.wikipedia.org/wiki/Going_Postal) by [Terry Pratchett](https://en.wikipedia.org/wiki/Terry_Pratchett). I made it available at the URL <https://mint.westdri.ca/python/data/pratchett.txt>.

Let's ask our LLM how to do this. Here is the prompt I use (feel free to write your own prompt):

:::{.llm}

How can I download the text from this url: https://mint.westdri.ca/python/data/pratchett.txt in Python?

:::

On my end, I got some nice explanations and the following code:

```{python}
import requests

url = "https://mint.westdri.ca/python/data/pratchett.txt"
response = requests.get(url)
text = response.text  # This contains the text content as a string

print(text)  # Prints the downloaded text
```

:::{.note}

Note that the comments in the code are not mine but from the LLM, which is nice.

:::

It looks like the code works.

## Count a few things

Now, let's count the number of words in the text.

I asked the follow-up question:

:::{.llm}

Write Python code to count the number of words in this text.

:::

Here again, I got some explanations and the following code:

```{python}
# Split the text into words using whitespace
words = text.split()
word_count = len(words)

print(f"Number of words in the text: {word_count}")
```

:::{.llm}

Write Python code to find the number of times the word "the" occurs in the text.

:::

Here, the LLM warned me that the following answer counts all instances of "the" (ignoring case) and that if this was not what I wanted, I just had to say so in a follow-up chat entry. This is what I wanted, so I am keeping the code as is:

```{python}
import re

# Use regular expressions to find all whole-word, case-insensitive matches of "the"
the_count = len(re.findall(r'\bthe\b', text, flags=re.IGNORECASE))

print(f'The word "the" occurs {the_count} times in the text.')
```

:::{.exo}

:::{.yourturn}

Your turn:

:::

- Ask your LLM to explain the regular expression in the code.

- We all know that LLMs hallucinate and make plenty of mistakes. You should never trust the code (or any LLM answer for that matter) uncritically. How could you double-check that this code is correct?

:::


