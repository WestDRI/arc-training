---
title: "A tool to rule them all:"
subtitle: Packages, versions, projects, and virtual env management with `uv`
author: Marie-Hélène Burle
---

:::{.def}

Despite being [the most popular programming language](https://www.tiobe.com/tiobe-index/), Python has never had a good package and version manager. Some languages come with an internal manager (e.g. R, Julia) while others come with well-built command line managers (e.g. Cargo for Rust). Python on the other hand has seen the development of an ever-growing and never-satisfactory suite of tools to manage its packages, versions, projects, and virtual environments: `pip`, `pipx`, `pipenv`, `poetry`, `pyenv`, `venv`, `virtualenv` to name [just a few](https://chadsmith.dev/python-packaging/).

In February 2024, [Astral](https://astral.sh/) might have finally put an end to the jumble when they launched [uv](https://github.com/astral-sh/uv), a fast and well-documented tool written in Rust which elegantly handles the gamut of tasks associated with Python versions, packages, and projects.

In this webinar, I will show you how to use `uv` to manage Python projects, packages, virtual environments, versions, and more.

:::

*Coming up on May 6.*
[Slides](wb_uv_slides.qmd){.btn .btn-outline-primary} [(Click and wait: this reveal.js presentation may take a little time to load.)]{.inlinenote}
<!-- <br><br> -->

<!-- {{< video https://www.youtube.com/embed/ >}} -->
