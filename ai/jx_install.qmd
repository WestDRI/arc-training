---
title: Installing JAX
author: Marie-Hélène Burle
---

:::{.def}

In this section, we will access a virtual training cluster through SSH and make JAX accessible.

We will also cover how to install JAX in the Alliance production clusters.

:::

## On your computer

Please refer to [the official documentation](https://jax.readthedocs.io/en/latest/installation.html) for instructions.

Because JAX is designed for large array computations and machine learning, you will most likely want to use it on supercomputers. Moreover, while JAX works great on CPUs, it is at heart a library built for accelerators (GPUs and TPUs) and currently GPUs are only fully supported for Linux (experimental for MacOS and Windows WSL2).

In this course, we will thus use a virtual Alliance cluster.

## On an Alliance cluster

:::{.note}

The virtual clusters we create for teaching mimic the Alliance clusters pretty well, but there are a few minor differences. We also already created a Python virtual environment with JAX installed to save time. The instructions for today thus differ a little from what you would normally do. Both are explained in separate tabs where they differ.

:::

### Logging in through SSH

#### Open a terminal emulator

Windows users: &emsp;Install the free version of [MobaXTerm](https://mobaxterm.mobatek.net/download.html) and launch it. \
MacOS users: &emsp;&emsp;Launch Terminal. \
Linux users: &emsp;&emsp;&ensp;&nbsp;Open the terminal emulator of your choice.

#### Access the cluster through secure shell

##### Windows users

Follow the first 18% of [this demo](https://mobaxterm.mobatek.net/demo.html).

For "Remote host", use the hostname we gave you. \
Select the box "Specify username" and provide your username.

:::{.note}

Note that the password is entered through blind typing, meaning that you will not see anything happening as you type it. This is a Linux feature. While it is a little disturbing at first, do know that it is working. Make sure to type it slowly to avoid typos, then press the "enter" key on your keyboard.

:::

##### MacOS and Linux users

In the terminal, run:

```{.bash}
ssh <username>@<hostname>
```

:::{.note}

Replace the username and hostname by their values.<br>
For instance:

```{.bash}
ssh user21@somecluster.c3.ca
```

:::

You will be asked a question, answer "Yes".

When prompted, type the password.

:::{.note}

Note that the password is entered through blind typing, meaning that you will not see anything happening as you type it. This is a Linux feature. While it is a little disturbing at first, do know that it is working. Make sure to type it slowly to avoid typos, then press the "enter" key on your keyboard.

:::

#### Troubleshooting

Problems logging in are almost always due to typos. If you cannot log in, retry slowly, entering your password carefully.

### Load StdEnv/2023

::: {.panel-tabset}

#### Today

In our virtual cluster, we need to load `StdEnv/2023` manually:

```{.bash}
module load StdEnv/2023
```

#### Production cluster

`StdEnv/2023` is automatically loaded in production clusters.

:::

You can always look at the list of loaded modules with:

```{.bash}
module list
```

### Load Python module

You can see what Python modules are available with:

```{.bash}
module spider python
```

We will load the latest module:

```{.bash}
module load python/3.11.5
```

### Install JAX

::: {.panel-tabset}

#### Today

I already created a virtual Python environment under `/project` and installed JAX in it to save time and space. All you have to do is activate it:

```{.bash}
source /project/60055/env/bin/activate
```

#### Production cluster

Create a Python virtual environment:

```{.bash}
python -m venv ~/env
```

Activate it:

```{.bash}
source ~/env/bin/activate
```

Update pip from wheel:

```{.bash}
python -m pip install --upgrade pip --no-index
```

:::{.note}

Whenever a [Python wheel](https://pythonwheels.com/) for a package is available on the Alliance clusters, you should use it instead of downloading the package from [PyPI](https://pypi.org/). To do this, simply add the `--no-index` flag to the install command.

You can see whether a wheel is available with `avail_wheels <package>` or look at [the list of available wheels](https://docs.alliancecan.ca/wiki/Available_Python_wheels).

Advantages of wheels:

- compiled for the clusters hardware,
- ensures no missing or conflicting dependencies,
- much faster installation.

:::

Install JAX from wheel:

```{.bash}
python -m pip install jax --no-index
```

:::{.note}

Don't forget the `--no-index` flag here: the wheel will save you from having to deal with the CUDA and CUDNN dependencies, making your life a lot easier.

:::

:::
