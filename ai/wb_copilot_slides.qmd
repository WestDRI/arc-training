---
title: AI-powered programming with
frontpic: img/copilot.png
frontpicwidth: 70%
noshadow: noshadow
author: Marie-Hélène Burle
date: 2024-01-23
date-format: long
execute:
  error: true
  echo: true
format:
  revealjs:
    # embed-resources: true
    theme: [default, ../revealjs.scss]
    logo: /img/logo_sfudrac.png
    highlight-style: ayu
    code-line-numbers: false
    template-partials:
      - ../title-slide.html
    pointer:
      color: "#b5111b"
      pointerSize: 32
    link-external-newwindow: true
    footer: <a href="wb_copilot.html"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="rgb(153, 153, 153)" class="bi bi-arrow-90deg-up" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z"/></svg>&nbsp;Back to webinar page</a>
    auto-stretch: false
revealjs-plugins:
  - pointer
---

# Code generators

## The age of generative AI {.center}



## What about FOSS? {.center}

[tabby](https://github.com/TabbyML/tabby)

# GitHub Copilot

## What is [GitHub Copilot](https://github.com/features/copilot/)? {.center}

:::{.fragment}

**&nbsp;→ Cloud-hosted AI programming assistant**

:::

:::{.fragment}

Developed by [GitHub](https://github.com) (Microsoft)

Running [Codex](https://openai.com/blog/openai-codex), a model by [OpenAI](https://openai.com/) derived from the [LLM](https://en.wikipedia.org/wiki/Large_language_model) GPT-3 and trained on open source code

:::

## Access {.center}

Individual or organization GitHub accounts

Requires subscription

Students, teachers, and maintainers of popular open source projects can apply for free access

## Safety {.center}

Filters are in place for offensive words, but...

Generated code comes with no guaranty of safety or quality

[A lawsuit is open against GitHub Copilot](https://githubcopilotlitigation.com/) for licenses violation

## Supported languages {.center}

Any language used in public repos

Quality of suggestions is higher for languages with lots of data

## How to use it? {.center}

:::{.fragment}

Start typing code and get autocomplete suggestions

:::

:::{.fragment}

Write comments describing what the code should do and get code generation based on context

:::

:::{.fragment}

It is easy to:

&emsp;&emsp;→ accept suggestions word by word \
&emsp;&emsp;→ line by line \
&emsp;&emsp;→ for entire functions \
&emsp;&emsp;→ cycle through different suggestions

:::

## Interface {.center}

Extensions to text editors:

&emsp;&ensp;→ Visual Studio Code/Visual Studio \
&emsp;&ensp;→ Vim/Neovim/Emacs \
&emsp;&ensp;→ JetBrains IDEs \
&emsp;&ensp;→ Azure Data Studio

# Setup

## Get a subscription {.center}

Got to your GitHub account page \
&emsp;&ensp;→ Settings \
&emsp;&ensp;→ Copilot \
&emsp;&ensp;→ Enable

Provide free access or payment method

Set settings

## VS Code {.center}

:::{.fragment}

[Install the GitHub Copilot extension](https://marketplace.visualstudio.com/items?itemName=GitHub.copilot)

:::

:::{.fragment}

Next suggestion: &emsp;&emsp;&emsp;&emsp;&emsp;&nbsp;`Alt+]` \
Previous suggestion: &emsp;&emsp;&emsp;&nbsp;&nbsp;`Alt+[`

Reject suggestion: &emsp;&emsp;&emsp;&emsp;&ensp;&nbsp;`Esc` \
Accept suggestion: &emsp;&emsp;&emsp;&emsp;&ensp;`Tab` \
Accept next suggested word: `Ctrl+→` &nbsp;(`Command+→` &nbsp;for macOS) \
Set your own key binding for `editor.action.inlineSuggest.acceptNextLine` to accept next suggested line

Open new tab with options: &ensp;`Ctrl+Enter`

You can also hover over suggestions

:::

## Vim/Neovim {.center}

Install [Node.js](https://nodejs.org/en/download/)

Clone <https://github.com/github/copilot.vim>

Configure:

```{.bash}
:Copilot setup
```

Enable:

```{.bash}
:Copilot enable
```

Get help:

```{.bash}
:help copilot
```

## Emacs {.center}

Install [Node.js](https://nodejs.org/en/download/)

Assuming [straight](https://github.com/radian-software/straight.el) is installed:

```{.lisp}
(straight-use-package 'editorconfig)  ; Copilot dependency

(use-package copilot
	:straight (:host github
					 :repo "copilot-emacs/copilot.el"
					 :files ("dist" "*.el"))
	:hook (prog-mode . copilot-mode)
	:bind (("C-8" . copilot-complete)
		   :map copilot-completion-map
		   ("C-j" . copilot-accept-completion)
		   ("C-f" . copilot-accept-completion-by-word)
		   ("C-t" . copilot-accept-completion-by-line)
		   ("C-n" . copilot-next-completion)
		   ("C-p" . copilot-previous-completion)))
```

Login to your GitHub account (only needs to be done once): `M-x copilot-login`

# Copilot in the CLI

## What is Copilot in the CLI? {.center}

*In beta*

An extension to [GitHub CLI](https://cli.github.com/) (GitHub operations from the CLI)

&emsp;→ Generate commands from natural language \
&emsp;→ Generate natural language explanations from commands

Trained on data up to 2021

Lower performance for natural languages ≠ English

## Setup {.center}

:::{.fragment}

[Install GitHub CLI](https://github.com/cli/cli#installation)

Connect to your GitHub account:

```{.bash}
gh auth login
```

:::

:::{.fragment}

<br>
Install Copilot in the CLI:

```{.bash}
gh extension install github/gh-copilot
```

:::{.note}

Update with: `gh extension upgrade gh-copilot`

:::

:::

## Usage {.center}

Get code explanations:

```{.bash}
gh copilot explain
```

<br>
Get code from natural language:

```{.bash}
gh copilot suggest
```

## Resources {.center}

[GitHub support portal](https://support.github.com/)

[Stack Overflow [github-copilot] tag](https://stackoverflow.com/questions/tagged/github-copilot)
