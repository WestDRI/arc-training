---
title: Installation and setup
author: Marie-Hélène Burle
---

:::{.def}

This section covers the installation of [Flax](https://github.com/google/flax), [CLU](https://github.com/google/CommonLoopUtils?tab=readme-ov-file) (training loop helpers), [Optax](https://github.com/google-deepmind/optax) (optimizers and loss functions), [Orbax](https://github.com/google/orbax) (checkpointing), and dataset libraries on your computer and the Alliance clusters.

For this course, we will use a training cluster.

:::

## On your computer

Stable versions:

```{.bash}
python -m pip install flax  # NN library \
	clu				        # training loop helpers \
	optax                   # optimizers & loss functions \
	orbax-checkpoint        # checkpointing \
	# only install the library you want to use to load datasets
	datasets torchvision tensorflow-datasets
```

Latest versions:

```{.bash}
python -m pip install git+https://github.com/google/flax.git \
    git+https://github.com/google/CommonLoopUtils \
    git+https://github.com/google-deepmind/optax.git \
    'git+https://github.com/google/orbax/#subdirectory=checkpoint' \
    # only install the library you want to use to load datasets
    datasets torchvision tfds-nightly
```

The CPU version of JAX will get installed as a Flax dependency. [Install another JAX version](https://jax.readthedocs.io/en/latest/installation.html) if you need.

## On an Alliance cluster

### Logging in through SSH

#### Open a terminal emulator

Windows users: &emsp;Install the free version of [MobaXTerm](https://mobaxterm.mobatek.net/download.html) and launch it. \
macOS users: &emsp;&emsp;Launch Terminal. \
Linux users: &emsp;&emsp;&ensp;&nbsp;Open the terminal emulator of your choice.

#### Access the cluster through secure shell

##### Windows users

Follow the first 18% of [this demo](https://mobaxterm.mobatek.net/demo.html).

For "Remote host", use the hostname we gave you. \
Select the box "Specify username" and provide your username.

:::{.note}

Note that the password is entered through blind typing, meaning that you will not see anything happening as you type it. This is a Linux feature. While it is a little disturbing at first, do know that it is working. Make sure to type it slowly to avoid typos, then press the "enter" key on your keyboard.

:::

##### macOS and Linux users

In the terminal, run:

```{.bash}
ssh <username>@<hostname>
```

:::{.note}

Replace the username and hostname by their values.<br>
For instance:

```{.bash}
ssh user21@somecluster.c3.ca
```

:::

You will be asked a question, answer "Yes".

When prompted, type the password.

:::{.note}

Note that the password is entered through blind typing, meaning that you will not see anything happening as you type it. This is a Linux feature. While it is a little disturbing at first, do know that it is working. Make sure to type it slowly to avoid typos, then press the "enter" key on your keyboard.

:::

#### Troubleshooting

Problems logging in are almost always due to typos. If you cannot log in, retry slowly, entering your password carefully.

### Install Flax

:::{.note}

We already created a Python virtual environment and installed Flax to save time. The instructions for today thus differ from what you would normally do, but I include the normal instructions in a separate tab for your future reference.

:::

::: {.panel-tabset}

#### Today

I already created a virtual Python environment under `/project` and installed Flax in it to save time and space. All you have to do is activate it:

```{.bash}
source /project/60055/env/bin/activate
```

#### Production cluster

Look for available Python modules:

```{.bash}
module spider python
```

Load the version of your choice:

```{.bash}
module load python/3.11.5
```

Create a Python virtual environment:

```{.bash}
python -m venv ~/env
```

Activate it:

```{.bash}
source ~/env/bin/activate
```

Update pip from wheel:

```{.bash}
python -m pip install --upgrade pip --no-index
```

:::{.note}

Whenever a [Python wheel](https://pythonwheels.com/) for a package is available on the Alliance clusters, you should use it instead of downloading the package from [PyPI](https://pypi.org/). To do this, simply add the `--no-index` flag to the install command.

You can see whether a wheel is available with `avail_wheels <package>` or look at [the list of available wheels](https://docs.alliancecan.ca/wiki/Available_Python_wheels).

Advantages of wheels:

- compiled for the clusters hardware,
- ensures no missing or conflicting dependencies,
- much faster installation.

:::

Install libraries from wheel:

```{.bash}
python -m pip install --no-index # install from wheels \
	flax                         # NN library \
	clu				             # training loop helpers \
	optax                        # optimizers & loss functions \
	orbax-checkpoint             # checkpointing \
	# only install the library you want to use to load datasets
	datasets torchvision tensorflow-datasets
```

:::{.note}

Don't forget the `--no-index` flag here: the wheel will save you from having to deal with the CUDA and CUDNN dependencies, making your life a lot easier.

:::

:::{.note}

Don't mindlessly install all the datasets libraries: it is pointless to clutter your virtual environment with things you don't need and—because they rely on similar dependencies—it can lead to dependency conflicts.

:::

:::
