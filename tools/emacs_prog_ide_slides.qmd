---
title: Emacs as a programming IDE
frontpic: "img/emacs_python.png"
frontpicwidth: 50%
# frontlogo: /img/sfudrac.png
author: Marie-Hélène Burle
date: 2023-11-14
date-format: long
execute:
  error: true
  echo: true
format:
  revealjs:
    # embed-resources: true
    theme: [default, ../revealjs.scss]
    logo: /img/sfudrac_logo.png
    highlight-style: monokai
    code-line-numbers: false
    code-overflow: wrap
    template-partials:
      - ../title-slide.html
    pointer:
      color: "#b5111b"
      pointerSize: 32
    link-external-newwindow: true
    footer: <a href="emacs_prog_ide.html"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="rgb(153, 153, 153)" class="bi bi-arrow-90deg-up" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z"/></svg>&nbsp;Back to webinar page</a>
    auto-stretch: false
revealjs-plugins:
  - pointer
---

# Why I still use (and love) Emacs

---

Yes, there are much simpler text editors, but they pale in comparison (apart from Vim)

![https://cube-drone.com](img/emacs1.jpg)

---

And yes, there are now excellent IDEs for Python, Julia, and R without Emacs learning curve

<center>![](img/learning_curve.jpg)</center>

---

So here are a few of my reasons:

- Fully customizable
- Key-bindings for everything
- Undoing/redoing with [undo-tree](https://github.com/tarsiiformes/undo-tree)
- Opening files
- Bookmarking
- Searching and navigation within files with [helm](https://github.com/emacs-helm/helm)
- Search and replace with regexp
- Creation of code snippets with [yasnippet](https://github.com/joaotavora/yasnippet)
- Can be used for Emails, Slack, Telegram with [mu4e](https://github.com/djcb/mu), [emacs-slack](https://github.com/yuya373/emacs-slack), [telega](https://github.com/zevlg/telega.el)

<!-- # Example: undo/redo -->

<!-- --- -->

<!-- ```{dot} -->
<!-- //| echo: false -->

<!-- digraph { -->

<!-- bgcolor="transparent"   -->
<!-- node [label="", shape=circle] -->
<!-- edge [arrowhead=vee] -->
  
<!-- a -> b -> c -->

<!-- } -->
<!-- ``` -->

# Emacs with Python

---

Emacs comes with a Python mode that provides syntax highlighting. For a full IDE experience, there are multiple options, the most popular of which being the [elpy](https://github.com/jorgenschaefer/elpy) package

![Code from [matplotlib](https://matplotlib.org/stable/gallery/lines_bars_and_markers/spectrum_demo.html#sphx-glr-gallery-lines-bars-and-markers-spectrum-demo-py)](img/emacs_python.png){width="78%"}

# Emacs with R

---

R is—as Emacs—[GNU](https://en.wikipedia.org/wiki/GNU) software and has been integrated with Emacs via the [ESS (Emacs Speaks Statistics)](https://github.com/emacs-ess/ESS) package for a very long time

<center>![](img/emacs_ess.png){width="78%"}</center>

# Emacs with Julia

---

The [julia-mode](https://github.com/JuliaEditorSupport/julia-emacs) package provides syntax highlighting and the [julia-repl](https://github.com/tpapp/julia-repl) package implements a fully functional Julia REPL, optionally with the [emacs-libvterm](https://github.com/akermu/emacs-libvterm) package

![Code from [Beautiful Makie](https://beautiful.makie.org/dev/examples/generated/2d/streamplot/poincare_vander/)](img/emacs_julia.png){width="78%"}

---

ESS also provides an IDE for Julia, but it does not allow for the funky Julia-specific REPL

Another sophisticated option is to use [julia-mode](https://github.com/JuliaEditorSupport/julia-emacs) with the [julia-snail](https://github.com/gcv/julia-snail) package

# Time for a demo

