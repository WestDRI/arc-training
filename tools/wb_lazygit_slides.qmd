---
title: "A great Git UI: lazygit"
frontpic: img/lazygit.png
frontpicwidth: 65%
frontpicmargintop: 20px
frontpicmarginbottom: 20px
author: Marie-Hélène Burle
date: 2024-10-29
date-format: long
execute:
  error: true
  echo: true
format:
  revealjs:
    embed-resources: true
    theme: [default, ../revealjs.scss]
    logo: /img/favicon_sfudrac.png
    highlight-style: ayu
    code-line-numbers: false
    template-partials:
      - ../title-slide.html
    pointer:
      color: "#b5111b"
      pointerSize: 32
    link-external-newwindow: true
    footer: <a href="wb_lazygit.html"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="rgb(153, 153, 153)" class="bi bi-arrow-90deg-up" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z"/></svg>&nbsp;Back to webinar page</a>
    auto-stretch: false
revealjs-plugins:
  - pointer
---

## Git interfaces {.center}

There are 3 main ways to use Git:

- Through a Git GUI
- From the command line
- Integrated within IDE

## Git interfaces {.center}

They all have downsides:

- Through a Git GUI &emsp;&emsp;&emsp;&ensp;&nbsp;➔ &ensp;*Slow and buggy*
- From the command line &ensp;&ensp;➔ &ensp;*Austere and unintuitive*
- Integrated within IDE &emsp;&emsp;&ensp;➔ &ensp;*Limited*

## On the beauty of TUIs {.center}

[Terminal user interfaces (TUIs)](https://en.wikipedia.org/wiki/Text-based_user_interface) were precursors to [graphical user interfaces (GUIs)](https://en.wikipedia.org/wiki/Graphical_user_interface), but they did not disappear

People continue to build TUIs because they uniquely provide the speed of the command line and the easy of use of GUIs

[GitHub is full of sleek, modern, open source TUIs for all sorts of applications](https://github.com/rothgar/awesome-tuis)

Several of them provide an interface to Git

My personal TUIs of choice are [ranger](https://github.com/ranger/ranger) as file manager and [lazygit](https://github.com/jesseduffield/lazygit) for Git

## lazygit {.center}

With over 52k stars on GitHub, [lazygit](https://github.com/jesseduffield/lazygit), created and maintained by [Jesse Duffield](https://github.com/jesseduffield) is probably the most polished Git TUI

I followed it as it grew and developed over the past 5 years. It was great from the start, but by now, it is a truly beautiful mature tool

It is cross-platform. You can find [installation instructions](https://github.com/jesseduffield/lazygit?tab=readme-ov-file#installation) in the README

## lazygit {.center}

Get command options:

```{.bash}
lazygit -h
```

Print default configurations with:

```{.bash}
lazygit -c
```

:::{.note}

lazygit is fully customizable

:::

## Resources {.center}

- [Repo](https://github.com/jesseduffield/lazygit)
- [Default kbds](https://github.com/jesseduffield/lazygit/blob/master/docs/keybindings/Keybindings_en.md)
- [Configuration options](https://github.com/jesseduffield/lazygit/blob/v0.44.1/docs/Config.md)

## Time for a demo! {.center}

I will spend the rest of this webinar showing you how to use Git through lazygit
