{
  "hash": "c515baf8de93e26c641466e895b51a5d",
  "result": {
    "markdown": "---\ntitle: JAX vs NumPy\nauthor: Marie-Hélène Burle\n---\n\n[NumPy](https://numpy.org/) is a popular Python scientific API at the core of a lot of libraries. It is fast, written in Python and C, and provides the `ndarray` data type.\n\nJAX uses a similar API with additional constraints.\n\nBeing familiar with NumPy is thus an advantage to get started with JAX. [The NumPy quickstart](https://numpy.org/doc/stable/user/quickstart.html) is a good resource to get started with NumPy.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport numpy as np  # for comparison\n\nimport jax\nimport jax.numpy as jnp\n```\n\n::: {.cell-output .cell-output-error}\n```\nModuleNotFoundError: No module named 'jax.numpy'; 'jax' is not a package\n```\n:::\n:::\n\n\ndifferent Python types\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nx = np.arange(9).reshape((3, 3))\nprint(x)\ntype(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[0 1 2]\n [3 4 5]\n [6 7 8]]\n```\n:::\n\n::: {.cell-output .cell-output-display execution_count=7}\n```\nnumpy.ndarray\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ny = jnp.arange(9).reshape((3, 3))\nprint(y)\ntype(y)\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'jnp' is not defined\n```\n:::\n:::\n\n\nJAX arrays are immutable\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\nx[0, 0] = 9\nprint(x)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[9 1 2]\n [3 4 5]\n [6 7 8]]\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\ny[0, 0] = 9\nprint(y)\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'y' is not defined\n```\n:::\n:::\n\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ny = y.at[0, 0].set(10)\nprint(y)\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'y' is not defined\n```\n:::\n:::\n\n\n",
    "supporting": [
      "jx_numpy_files"
    ],
    "filters": [],
    "includes": {}
  }
}