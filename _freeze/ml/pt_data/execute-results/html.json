{
  "hash": "27590ecac549949d2debf9c93a8d3caf",
  "result": {
    "markdown": "---\ntitle: Loading data\nauthor: Marie-Hélène Burle\n---\n\n:::{.def}\n\n\n\n:::\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nimport torch\nimport torchvision\nimport torchvision.transforms as transforms\n```\n:::\n\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ntransform = transforms.Compose(\n    [transforms.ToTensor(),\n     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n\nbatch_size = 4\n\ntrainset = torchvision.datasets.CIFAR10(root='./data', train=True,\n                                        download=True, transform=transform)\ntrainloader = torch.utils.data.DataLoader(trainset, batch_size=batch_size,\n                                          shuffle=True, num_workers=2)\n\ntestset = torchvision.datasets.CIFAR10(root='./data', train=False,\n                                       download=True, transform=transform)\ntestloader = torch.utils.data.DataLoader(testset, batch_size=batch_size,\n                                         shuffle=False, num_workers=2)\n\nclasses = ('plane', 'car', 'bird', 'cat',\n           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDownloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz\nExtracting ./data/cifar-10-python.tar.gz to ./data\nFiles already downloaded and verified\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\r  0%|          | 0/170498071 [00:00<?, ?it/s]\r  0%|          | 65536/170498071 [00:00<05:46, 491827.40it/s]\r  0%|          | 229376/170498071 [00:00<03:01, 940231.98it/s]\r  0%|          | 720896/170498071 [00:00<01:08, 2489207.41it/s]\r  1%|          | 1540096/170498071 [00:00<00:37, 4456272.63it/s]\r  2%|▏         | 2686976/170498071 [00:00<00:24, 6788933.98it/s]\r  2%|▏         | 3899392/170498071 [00:00<00:19, 8438876.08it/s]\r  3%|▎         | 5242880/170498071 [00:00<00:16, 9846200.47it/s]\r  4%|▎         | 6258688/170498071 [00:00<00:19, 8531338.74it/s]\r  4%|▍         | 7176192/170498071 [00:01<00:20, 7847303.95it/s]\r  5%|▍         | 8028160/170498071 [00:01<00:21, 7474861.45it/s]\r  5%|▌         | 8945664/170498071 [00:01<00:23, 6986552.30it/s]\r  6%|▌         | 10125312/170498071 [00:01<00:19, 8145854.68it/s]\r  7%|▋         | 11403264/170498071 [00:01<00:19, 8085393.70it/s]\r  7%|▋         | 12681216/170498071 [00:01<00:17, 9136506.69it/s]\r  8%|▊         | 13664256/170498071 [00:01<00:18, 8266228.57it/s]\r  9%|▊         | 14876672/170498071 [00:02<00:19, 8115136.94it/s]\r  9%|▉         | 16023552/170498071 [00:02<00:17, 8889527.98it/s]\r 10%|█         | 17235968/170498071 [00:02<00:15, 9663233.51it/s]\r 11%|█         | 18415616/170498071 [00:02<00:14, 10192680.60it/s]\r 12%|█▏        | 19693568/170498071 [00:02<00:13, 10788258.47it/s]\r 12%|█▏        | 20905984/170498071 [00:02<00:13, 11137044.67it/s]\r 13%|█▎        | 22052864/170498071 [00:02<00:15, 9557520.41it/s] \r 14%|█▎        | 23068672/170498071 [00:02<00:16, 8727196.54it/s]\r 14%|█▍        | 24281088/170498071 [00:02<00:15, 9443335.97it/s]\r 15%|█▍        | 25559040/170498071 [00:03<00:14, 10268372.56it/s]\r 16%|█▌        | 26804224/170498071 [00:03<00:13, 10723338.45it/s]\r 16%|█▋        | 27983872/170498071 [00:03<00:12, 10965358.82it/s]\r 17%|█▋        | 29130752/170498071 [00:03<00:12, 10999441.28it/s]\r 18%|█▊        | 30277632/170498071 [00:03<00:12, 11092944.06it/s]\r 18%|█▊        | 31424512/170498071 [00:03<00:14, 9440614.90it/s] \r 19%|█▉        | 32440320/170498071 [00:03<00:16, 8604088.25it/s]\r 20%|█▉        | 33685504/170498071 [00:03<00:14, 9532970.77it/s]\r 20%|██        | 34897920/170498071 [00:03<00:13, 10135662.97it/s]\r 21%|██        | 36077568/170498071 [00:04<00:12, 10582520.65it/s]\r 22%|██▏       | 37355520/170498071 [00:04<00:11, 11169621.76it/s]\r 23%|██▎       | 38502400/170498071 [00:04<00:13, 9773618.49it/s] \r 23%|██▎       | 39682048/170498071 [00:04<00:14, 8776599.27it/s]\r 24%|██▍       | 40861696/170498071 [00:04<00:13, 9463453.58it/s]\r 25%|██▍       | 41877504/170498071 [00:04<00:14, 8655659.33it/s]\r 25%|██▌       | 43057152/170498071 [00:04<00:13, 9383740.20it/s]\r 26%|██▌       | 44466176/170498071 [00:05<00:14, 8918961.08it/s]\r 27%|██▋       | 45580288/170498071 [00:05<00:13, 9435527.18it/s]\r 27%|██▋       | 46694400/170498071 [00:05<00:12, 9666658.54it/s]\r 28%|██▊       | 47710208/170498071 [00:05<00:14, 8690365.13it/s]\r 29%|██▊       | 48627712/170498071 [00:05<00:14, 8168523.84it/s]\r 29%|██▉       | 49840128/170498071 [00:05<00:13, 9100727.17it/s]\r 30%|██▉       | 50790400/170498071 [00:05<00:13, 9110841.14it/s]\r 31%|███       | 52035584/170498071 [00:05<00:11, 9964838.45it/s]\r 31%|███       | 53149696/170498071 [00:05<00:11, 10248001.60it/s]\r 32%|███▏      | 54362112/170498071 [00:06<00:10, 10700449.80it/s]\r 33%|███▎      | 55672832/170498071 [00:06<00:10, 11243036.81it/s]\r 33%|███▎      | 56819712/170498071 [00:06<00:10, 11161257.33it/s]\r 34%|███▍      | 57966592/170498071 [00:06<00:10, 11116663.20it/s]\r 35%|███▍      | 59179008/170498071 [00:06<00:09, 11322832.90it/s]\r 35%|███▌      | 60325888/170498071 [00:06<00:11, 9942209.91it/s] \r 36%|███▌      | 61669376/170498071 [00:06<00:10, 10763417.54it/s]\r 37%|███▋      | 62816256/170498071 [00:06<00:11, 9497849.00it/s] \r 38%|███▊      | 64094208/170498071 [00:06<00:10, 10264819.30it/s]\r 38%|███▊      | 65175552/170498071 [00:07<00:11, 9240127.87it/s] \r 39%|███▉      | 66453504/170498071 [00:07<00:10, 10058185.89it/s]\r 40%|███▉      | 67633152/170498071 [00:07<00:11, 9072239.63it/s] \r 40%|████      | 68812800/170498071 [00:07<00:10, 9707277.11it/s]\r 41%|████      | 69861376/170498071 [00:07<00:10, 9705162.98it/s]\r 42%|████▏     | 71041024/170498071 [00:07<00:09, 10230674.10it/s]\r 42%|████▏     | 72253440/170498071 [00:07<00:09, 10719508.02it/s]\r 43%|████▎     | 73367552/170498071 [00:07<00:10, 9165090.08it/s] \r 44%|████▎     | 74579968/170498071 [00:08<00:09, 9914670.67it/s]\r 44%|████▍     | 75628544/170498071 [00:08<00:10, 9393229.65it/s]\r 45%|████▌     | 76840960/170498071 [00:08<00:09, 10102760.55it/s]\r 46%|████▌     | 78151680/170498071 [00:08<00:08, 10776594.99it/s]\r 46%|████▋     | 79265792/170498071 [00:08<00:09, 9130592.02it/s] \r 47%|████▋     | 80445440/170498071 [00:08<00:09, 9771793.60it/s]\r 48%|████▊     | 81690624/170498071 [00:08<00:09, 9036318.07it/s]\r 49%|████▊     | 82870272/170498071 [00:08<00:09, 9686936.54it/s]\r 49%|████▉     | 83918848/170498071 [00:09<00:09, 9524420.01it/s]\r 50%|████▉     | 85032960/170498071 [00:09<00:08, 9915047.72it/s]\r 51%|█████     | 86245376/170498071 [00:09<00:08, 10405683.29it/s]\r 51%|█████     | 87326720/170498071 [00:09<00:10, 8265636.02it/s] \r 52%|█████▏    | 88539136/170498071 [00:09<00:09, 8953860.21it/s]\r 53%|█████▎    | 89751552/170498071 [00:09<00:08, 9704131.64it/s]\r 53%|█████▎    | 91029504/170498071 [00:09<00:07, 10463877.79it/s]\r 54%|█████▍    | 92209152/170498071 [00:09<00:07, 10703416.42it/s]\r 55%|█████▍    | 93683712/170498071 [00:09<00:07, 9862609.56it/s] \r 56%|█████▌    | 94961664/170498071 [00:10<00:07, 10491658.61it/s]\r 56%|█████▋    | 96272384/170498071 [00:10<00:06, 10997980.66it/s]\r 57%|█████▋    | 97419264/170498071 [00:10<00:07, 10342494.00it/s]\r 58%|█████▊    | 98697216/170498071 [00:10<00:06, 10767972.20it/s]\r 59%|█████▊    | 99811328/170498071 [00:10<00:07, 9199253.34it/s] \r 59%|█████▉    | 100925440/170498071 [00:10<00:07, 9645422.69it/s]\r 60%|█████▉    | 102137856/170498071 [00:10<00:06, 10217765.32it/s]\r 61%|██████    | 103251968/170498071 [00:10<00:06, 10436919.87it/s]\r 61%|██████▏   | 104628224/170498071 [00:11<00:05, 11241775.49it/s]\r 62%|██████▏   | 105807872/170498071 [00:11<00:06, 9989479.73it/s] \r 63%|██████▎   | 107053056/170498071 [00:11<00:05, 10593145.95it/s]\r 64%|██████▎   | 108363776/170498071 [00:11<00:05, 11254452.83it/s]\r 64%|██████▍   | 109543424/170498071 [00:11<00:06, 9843570.45it/s] \r 65%|██████▍   | 110592000/170498071 [00:11<00:06, 8765047.14it/s]\r 66%|██████▌   | 111869952/170498071 [00:11<00:06, 9367360.92it/s]\r 66%|██████▋   | 113147904/170498071 [00:11<00:05, 10176890.98it/s]\r 67%|██████▋   | 114393088/170498071 [00:12<00:05, 10675017.04it/s]\r 68%|██████▊   | 115638272/170498071 [00:12<00:04, 11091521.45it/s]\r 69%|██████▊   | 116817920/170498071 [00:12<00:05, 9888741.53it/s] \r 69%|██████▉   | 118063104/170498071 [00:12<00:04, 10530585.33it/s]\r 70%|██████▉   | 119177216/170498071 [00:12<00:05, 9416961.93it/s] \r 71%|███████   | 120422400/170498071 [00:12<00:05, 10010110.58it/s]\r 71%|███████▏  | 121602048/170498071 [00:12<00:04, 10251330.49it/s]\r 72%|███████▏  | 122912768/170498071 [00:12<00:04, 10914642.76it/s]\r 73%|███████▎  | 124059648/170498071 [00:12<00:04, 9478166.18it/s] \r 73%|███████▎  | 125075456/170498071 [00:13<00:05, 8655163.92it/s]\r 74%|███████▍  | 126287872/170498071 [00:13<00:04, 9454623.65it/s]\r 75%|███████▍  | 127565824/170498071 [00:13<00:04, 10275821.03it/s]\r 75%|███████▌  | 128679936/170498071 [00:13<00:04, 9359271.99it/s] \r 76%|███████▌  | 129892352/170498071 [00:13<00:04, 10005134.14it/s]\r 77%|███████▋  | 130940928/170498071 [00:13<00:04, 8661423.25it/s] \r 78%|███████▊  | 132186112/170498071 [00:13<00:04, 9556489.33it/s]\r 78%|███████▊  | 133398528/170498071 [00:13<00:03, 10179632.29it/s]\r 79%|███████▉  | 134479872/170498071 [00:14<00:03, 9053953.22it/s] \r 80%|███████▉  | 135626752/170498071 [00:14<00:03, 9620322.16it/s]\r 80%|████████  | 136904704/170498071 [00:14<00:03, 10393682.05it/s]\r 81%|████████  | 138018816/170498071 [00:14<00:03, 9078843.53it/s] \r 82%|████████▏ | 139231232/170498071 [00:14<00:03, 9809915.73it/s]\r 82%|████████▏ | 140279808/170498071 [00:14<00:03, 8856672.50it/s]\r 83%|████████▎ | 141524992/170498071 [00:14<00:02, 9688614.65it/s]\r 84%|████████▎ | 142770176/170498071 [00:14<00:02, 10406938.77it/s]\r 85%|████████▍ | 144080896/170498071 [00:15<00:02, 11027237.69it/s]\r 85%|████████▌ | 145358848/170498071 [00:15<00:02, 11464534.95it/s]\r 86%|████████▌ | 146538496/170498071 [00:15<00:02, 11417382.19it/s]\r 87%|████████▋ | 147718144/170498071 [00:15<00:01, 11467558.89it/s]\r 87%|████████▋ | 148897792/170498071 [00:15<00:02, 9689819.11it/s] \r 88%|████████▊ | 150077440/170498071 [00:15<00:02, 9427562.29it/s]\r 89%|████████▉ | 151322624/170498071 [00:15<00:01, 10055870.00it/s]\r 89%|████████▉ | 152371200/170498071 [00:15<00:01, 9235629.51it/s] \r 90%|█████████ | 153452544/170498071 [00:16<00:02, 8437022.91it/s]\r 91%|█████████ | 154337280/170498071 [00:16<00:01, 8307480.25it/s]\r 91%|█████████ | 155418624/170498071 [00:16<00:01, 7834149.03it/s]\r 92%|█████████▏| 156532736/170498071 [00:16<00:01, 8511268.94it/s]\r 93%|█████████▎| 157810688/170498071 [00:16<00:01, 9571853.06it/s]\r 93%|█████████▎| 158826496/170498071 [00:16<00:01, 9432659.33it/s]\r 94%|█████████▍| 159940608/170498071 [00:16<00:01, 9859691.35it/s]\r 94%|█████████▍| 160956416/170498071 [00:16<00:01, 8890826.83it/s]\r 95%|█████████▌| 162168832/170498071 [00:16<00:00, 9715547.00it/s]\r 96%|█████████▌| 163446784/170498071 [00:17<00:00, 10442010.43it/s]\r 96%|█████████▋| 164528128/170498071 [00:17<00:00, 9931063.29it/s] \r 97%|█████████▋| 165806080/170498071 [00:17<00:00, 10699374.78it/s]\r 98%|█████████▊| 166920192/170498071 [00:17<00:00, 10368457.48it/s]\r 99%|█████████▊| 168067072/170498071 [00:17<00:00, 10638501.55it/s]\r 99%|█████████▉| 169312256/170498071 [00:17<00:00, 11148137.01it/s]\r100%|█████████▉| 170459136/170498071 [00:17<00:00, 9529530.07it/s] \r100%|██████████| 170498071/170498071 [00:17<00:00, 9591546.00it/s]\n```\n:::\n:::\n\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# functions to show an image\n\n\ndef imshow(img):\n    img = img / 2 + 0.5     # unnormalize\n    npimg = img.numpy()\n    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n    plt.show()\n\n\n# get some random training images\ndataiter = iter(trainloader)\nimages, labels = next(dataiter)\n\n# show images\nimshow(torchvision.utils.make_grid(images))\n# print labels\nprint(' '.join(f'{classes[labels[j]]:5s}' for j in range(batch_size)))\n```\n\n::: {.cell-output .cell-output-display}\n![](pt_data_files/figure-html/cell-4-output-1.png){width=566 height=181}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\ntruck cat   dog   truck\n```\n:::\n:::\n\n\n## Creating a DataLoader\n\nA `DataLoader` is an iterable feeding data to a model. When we train a model, we run it for each element of the DataLoader in a for loop:\n\n```{.python}\nfor i in data_loader:\n    <some model>\n```\n\n",
    "supporting": [
      "pt_data_files"
    ],
    "filters": [],
    "includes": {}
  }
}