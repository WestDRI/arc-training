{
  "hash": "c9564e5e9df348cc5f7fc48cd26529bd",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Defining model architecture\nbibliography: fl.bib\ncsl: diabetologia.csl\nauthor:\n  - Marie-Hélène Burle\n---\n\n:::{.def}\n\nIn this section, we define a model with [Flax](https://github.com/google/flax)'s new API called NNX.\n\n:::\n\n## Context\n\n```{dot}\n//| echo: false\n//| fig-width: 700px\n\ndigraph {\n\nbgcolor=\"transparent\"\nnode [fontname=\"Inconsolata, sans-serif\", color=gray55]\nedge [color=gray55]\n\nload [label=\"Load data\", shape=plaintext, group=g1, fontcolor=gray55]\nproc [label=\"Process data\", shape=plaintext, group=g1, fontcolor=gray55]\nnn [label=\"Define architecture\", shape=plaintext, group=g1]\npretr [label=\"Pre-trained model\", shape=plaintext, group=g1, fontcolor=gray55]\nopt [label=\"Hyperparameters\", shape=plaintext, group=g1, fontcolor=gray55]\ncp [label=\"Checkpoint\", shape=plaintext, group=g1, fontcolor=gray55]\n\npt [label=torchdata, fontcolor=gray55, color=gray55]\ntfds [label=tfds, group=g2, fontcolor=gray55, color=gray55]\ndt [label=datasets, fontcolor=gray55, color=gray55]\n\ngr [label=grain, fontcolor=gray55, color=gray55]\ntv [label=torchvision, fontcolor=gray55, color=gray55]\n\ntr [label=transformers, fontcolor=gray55, color=gray55]\n\nfl [label=flax, group=g2, fontcolor=\"#00695C\", color=\"#00695C\"]\n\noa [label=optax, group=g2, fontcolor=gray55, color=gray55]\n\nob [label=orbax, group=g2, fontcolor=gray55, color=gray55]\n\n{rank=same; gr load tv}\ngr -> load -> tv [style=invis]\n\n{rank=same; fl proc pretr}\nfl -> proc -> pretr [style=invis]\n\n{pt tfds dt} -> load [color=gray55]\n{gr tv} -> proc [color=gray55]\nfl -> nn [color=\"#00695C\"]\npretr -> nn [dir=none]\ntr -> pretr [color=gray55]\noa -> opt [color=gray55]\nob -> cp [color=gray55]\n\nload -> proc -> nn -> opt -> cp [dir=none]\n\n}\n```\n\n:::{.callout-note collapse=\"true\"}\n\n## Minimal necessary code from previous sections\n\n::: {#461f66dd .cell execution_count=1}\n``` {.python .cell-code}\nfrom datasets import load_dataset\nimport numpy as np\nfrom torchvision.transforms import v2 as T\nimport grain.python as grain\n\ntrain_size = 5 * 750\nval_size = 5 * 250\n\ntrain_dataset = load_dataset(\"food101\",\n                             split=f\"train[:{train_size}]\")\n\nval_dataset = load_dataset(\"food101\",\n                           split=f\"validation[:{val_size}]\")\n\nlabels_mapping = {}\nindex = 0\nfor i in range(0, len(val_dataset), 250):\n    label = val_dataset[i][\"label\"]\n    if label not in labels_mapping:\n        labels_mapping[label] = index\n        index += 1\n\ninv_labels_mapping = {v: k for k, v in labels_mapping.items()}\n\nimg_size = 224\n\ndef to_np_array(pil_image):\n  return np.asarray(pil_image.convert(\"RGB\"))\n\ndef normalize(image):\n    # Image preprocessing matches the one of pretrained ViT\n    mean = np.array([0.5, 0.5, 0.5], dtype=np.float32)\n    std = np.array([0.5, 0.5, 0.5], dtype=np.float32)\n    image = image.astype(np.float32) / 255.0\n    return (image - mean) / std\n\ntv_train_transforms = T.Compose([\n    T.RandomResizedCrop((img_size, img_size), scale=(0.7, 1.0)),\n    T.RandomHorizontalFlip(),\n    T.ColorJitter(0.2, 0.2, 0.2),\n    T.Lambda(to_np_array),\n    T.Lambda(normalize),\n])\n\ntv_test_transforms = T.Compose([\n    T.Resize((img_size, img_size)),\n    T.Lambda(to_np_array),\n    T.Lambda(normalize),\n])\n\ndef get_transform(fn):\n    def wrapper(batch):\n        batch[\"image\"] = [\n            fn(pil_image) for pil_image in batch[\"image\"]\n        ]\n        # map label index between 0 - 19\n        batch[\"label\"] = [\n            labels_mapping[label] for label in batch[\"label\"]\n        ]\n        return batch\n    return wrapper\n\ntrain_transforms = get_transform(tv_train_transforms)\nval_transforms = get_transform(tv_test_transforms)\n\ntrain_dataset = train_dataset.with_transform(train_transforms)\nval_dataset = val_dataset.with_transform(val_transforms)\n\nseed = 12\ntrain_batch_size = 32\nval_batch_size = 2 * train_batch_size\n\ntrain_sampler = grain.IndexSampler(\n    len(train_dataset),\n    shuffle=True,\n    seed=seed,\n    shard_options=grain.NoSharding(),\n    num_epochs=1,\n)\n\nval_sampler = grain.IndexSampler(\n    len(val_dataset),\n    shuffle=False,\n    seed=seed,\n    shard_options=grain.NoSharding(),\n    num_epochs=1,\n)\n\ntrain_loader = grain.DataLoader(\n    data_source=train_dataset,\n    sampler=train_sampler,\n    worker_count=4,\n    worker_buffer_size=2,\n    operations=[\n        grain.Batch(train_batch_size, drop_remainder=True),\n    ]\n)\n\nval_loader = grain.DataLoader(\n    data_source=val_dataset,\n    sampler=val_sampler,\n    worker_count=4,\n    worker_buffer_size=2,\n    operations=[\n        grain.Batch(val_batch_size),\n    ]\n)\n```\n:::\n\n\n:::\n\n## Load packages\n\nPackage and module necessary for this section:\n\n::: {#53dc547a .cell execution_count=2}\n``` {.python .cell-code}\n# to define the model architecture\nfrom flax import nnx\n\n# to get callables from functions with fewer arguments\nfrom functools import partial\n```\n:::\n\n\n## Flax API\n\nFlax went through several APIs.\n\nThe initial `nn` API—now retired—got replaced in 2020 by the [Linen API](https://flax-linen.readthedocs.io/en/latest/), still available with the Flax package. In 2024, [they launched the NNX API](https://flax.readthedocs.io/en/latest/why.html).\n\nEach iteration has moved further from JAX and closer to Python, with a syntax increasingly similar to PyTorch.\n\nThe old Linen API is a stateless model framework similar to the Julia package [Lux.jl](https://github.com/LuxDL/Lux.jl). It follows a strict functional programming approach in which the parameters are separate from the model and are passed as inputs to the forward pass along with the data. This is much closer to the JAX sublanguage, more optimized, but restrictive and unpopular in the deep learning community and among Python users.\n\nBy contrast, the new NNX API is a stateful model framework similar to [PyTorch](https://github.com/pytorch/pytorch) and the older Julia package [Flux.jl](https://github.com/FluxML/Flux.jl): model parameters and optimizer state are stored within the model instance. Flax handles a lot of JAX's constraints under the hood, making the code more familiar to Python/PyTorch users, simpler, and more forgiving.\n\nWhile the Linen API still exists, new users are advised to learn the new NNX API.\n\n## Simple CNN\n\nWe will use [LeNet](https://en.wikipedia.org/wiki/LeNet)-5 [@lecun1998gradient] model, initially used on the [MNIST dataset](https://en.wikipedia.org/wiki/MNIST_database) by LeCun et al. [@lecun2010mnist]. We modify it to take three-channel images (RGB for colour images) instead of a single channel (black and white images as was the case in the MNIST) and have five categories as final output.\n\nThe architecture of this model is explained in details in [this kaggle post](https://www.kaggle.com/code/blurredmachine/lenet-architecture-a-complete-guide).\n\n::: {#27020e1a .cell execution_count=3}\n``` {.python .cell-code}\nclass CNN(nnx.Module):\n  \"\"\"An adapted LeNet-5 model.\"\"\"\n\n  def __init__(self, *, rngs: nnx.Rngs):\n    self.conv1 = nnx.Conv(3, 6, kernel_size=(5, 5), rngs=rngs)\n    self.max_pool = partial(nnx.max_pool, window_shape=(2, 2), strides=(2, 2))\n    self.conv2 = nnx.Conv(6, 16, kernel_size=(5, 5), rngs=rngs)\n    self.linear1 = nnx.Linear(3136, 120, rngs=rngs)\n    self.linear2 = nnx.Linear(120, 84, rngs=rngs)\n    self.linear3 = nnx.Linear(84, 5, rngs=rngs)\n\n  def __call__(self, x):\n    x = self.max_pool(nnx.relu(self.conv1(x)))\n    x = self.max_pool(nnx.relu(self.conv2(x)))\n    x = x.reshape(x.shape[0], -1)  # flatten\n    x = nnx.relu(self.linear1(x))\n    x = nnx.relu(self.linear2(x))\n    x = self.linear3(x)\n    return x\n\n# Instantiate the model.\nmodel = CNN(rngs=nnx.Rngs(0))\n\n# Visualize it.\nnnx.display(model)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script> (()=>{ if (customElements.get('treescope-container') === undefined) { class TreescopeContainer extends HTMLElement { constructor() { super(); this.attachShadow({mode: \"open\"}); this.defns = {}; this.state = {}; } } customElements.define(\"treescope-container\", TreescopeContainer); } if (customElements.get('treescope-run-here') === undefined) { class RunHere extends HTMLElement { constructor() { super() } connectedCallback() { const run = child => { const fn = new Function(child.textContent); child.textContent = \"\"; fn.call(this); this.remove(); }; const child = this.querySelector(\"script\"); if (child) { run(child); } else { new MutationObserver(()=>{ run(this.querySelector(\"script\")); }).observe(this, {childList: true}); } } } customElements.define(\"treescope-run-here\", RunHere); } })(); </script> <treescope-container class=\"treescope_out_72a0682e8ccd4f9f934341f2b8920c97\" style=\"display:block\"></treescope-container> <treescope-run-here><script type=\"application/octet-stream\"> const root = ( Array.from(document.getElementsByClassName( \"treescope_out_72a0682e8ccd4f9f934341f2b8920c97\")) .filter((elt) => !elt.dataset.setup) )[0]; root.dataset.setup = 1; const msg = document.createElement(\"span\"); msg.style = \"color: #cccccc; font-family: monospace;\"; msg.textContent = \"(Loading...)\"; root.state.loadingMsg = msg; root.shadowRoot.appendChild(msg); root.state.chain = new Promise((resolve, reject) => { const observer = new IntersectionObserver((entries) => { for (const entry of entries) { if (entry.isIntersecting) { resolve(); observer.disconnect(); return; } } }, {rootMargin: \"1000px\"}); window.setTimeout(() => { observer.observe(root); }, 0); }); root.state.deferring = false; const _insertNode = (node) => { for (let oldScript of node.querySelectorAll(\"script\")) { let newScript = document.createElement(\"script\"); newScript.type = oldScript.type; newScript.textContent = oldScript.textContent; oldScript.parentNode.replaceChild(newScript, oldScript); } if (root.state.loadingMsg) { root.state.loadingMsg.remove(); root.state.loadingMsg = null; } root.shadowRoot.appendChild(node); }; root.defns.insertContent = ((contentNode, compressed) => { if (compressed) { root.state.deferring = true; } if (root.state.deferring) { root.state.chain = (async () => { await root.state.chain; if (compressed) { const encoded = contentNode.textContent; const blob = new Blob([ Uint8Array.from(atob(encoded), (m) => m.codePointAt(0)) ]); const reader = blob.stream().pipeThrough( new DecompressionStream(\"deflate\") ).pipeThrough( new TextDecoderStream(\"utf-8\") ).getReader(); const parts = []; while (true) { const step = await reader.read(); if (step.done) { break; } parts.push(step.value); } const tpl = document.createElement('template'); tpl.innerHTML = parts.join(\"\"); _insertNode(tpl.content); } else { _insertNode(contentNode.content); } })(); } else { _insertNode(contentNode.content); } }); </script></treescope-run-here><div style=\"display:none\"> <script type=\"application/octet-stream\" ></script> <treescope-run-here><script type=\"application/octet-stream\"> const root = ( Array.from(document.getElementsByClassName( \"treescope_out_72a0682e8ccd4f9f934341f2b8920c97\")) .filter((elt) => !elt.dataset['step0']) )[0]; root.dataset['step0'] = 1; root.defns.insertContent( this.parentNode.querySelector('script[type=\"application/octet-stream\"]'), true ); this.parentNode.remove(); </script></treescope-run-here> </div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div style=\"display:none\"> <script type=\"application/octet-stream\" ></script> <treescope-run-here><script type=\"application/octet-stream\"> const root = ( Array.from(document.getElementsByClassName( \"treescope_out_72a0682e8ccd4f9f934341f2b8920c97\")) .filter((elt) => !elt.dataset['step1']) )[0]; root.dataset['step1'] = 1; root.defns.insertContent( this.parentNode.querySelector('script[type=\"application/octet-stream\"]'), true ); this.parentNode.remove(); </script></treescope-run-here> </div>\n```\n:::\n:::\n\n\n::: {#22c48609 .cell execution_count=4}\n``` {.python .cell-code}\nimport jax.numpy as jnp  # JAX NumPy\n\ny = model(jnp.ones((4, 224, 224, 3)))\ny\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">TypeError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[4]</span><span class=\"ansi-green-fg\">, line 3</span>\n<span class=\"ansi-bright-green-fg\">      1</span> <span style=\"color:rgb(255,95,135)\">import</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">jax</span><span class=\"ansi-bright-white-fg\">.</span><span class=\"ansi-bright-white-fg\">numpy</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">as</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">jnp</span><span class=\"ansi-bright-white-fg\">  </span><span style=\"color:rgb(138,138,138)\"># JAX NumPy</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">3</span> <span class=\"ansi-bright-white-fg\">y</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">model</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">jnp</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">ones</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span style=\"color:rgb(175,135,255)\" class=\"ansi-yellow-bg\">4</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span style=\"color:rgb(175,135,255)\" class=\"ansi-yellow-bg\">224</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span style=\"color:rgb(175,135,255)\" class=\"ansi-yellow-bg\">224</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span style=\"color:rgb(175,135,255)\" class=\"ansi-yellow-bg\">3</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span>\n<span class=\"ansi-bright-green-fg\">      4</span> <span class=\"ansi-bright-white-fg\">y</span>\n\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[3]</span><span class=\"ansi-green-fg\">, line 16</span>, in <span class=\"ansi-cyan-fg\">CNN.__call__</span><span class=\"ansi-bright-blue-fg\">(self, x)</span>\n<span class=\"ansi-bright-green-fg\">     14</span> <span class=\"ansi-bright-white-fg\">x</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">max_pool</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">nnx</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">relu</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">conv2</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">x</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">     15</span> <span class=\"ansi-bright-white-fg\">x</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">x</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">reshape</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">x</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">shape</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">0</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">-</span><span style=\"color:rgb(175,135,255)\">1</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">  </span><span style=\"color:rgb(138,138,138)\"># flatten</span>\n<span class=\"ansi-bright-green-fg\">---&gt; </span><span class=\"ansi-bright-green-fg\">16</span> <span class=\"ansi-bright-white-fg\">x</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">nnx</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">relu</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">self</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">linear1</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">x</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">     17</span> <span class=\"ansi-bright-white-fg\">x</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">nnx</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">relu</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">linear2</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">x</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">     18</span> <span class=\"ansi-bright-white-fg\">x</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">linear3</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">x</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-cyan-fg\">File </span><span class=\"ansi-green-fg\">~/parvus/prog/mint/ai/jxai/.venv/lib/python3.12/site-packages/flax/nnx/nn/linear.py:382</span>, in <span class=\"ansi-cyan-fg\">Linear.__call__</span><span class=\"ansi-bright-blue-fg\">(self, inputs)</span>\n<span class=\"ansi-bright-green-fg\">    377</span> <span class=\"ansi-bright-white-fg\">bias</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">bias</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">value</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">if</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">bias</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">is</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">not</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">None</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">else</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">None</span>\n<span class=\"ansi-bright-green-fg\">    379</span> <span class=\"ansi-bright-white-fg\">inputs</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">kernel</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">bias</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">promote_dtype</span><span class=\"ansi-bright-white-fg\">(</span>\n<span class=\"ansi-bright-green-fg\">    380</span> <span class=\"ansi-bright-white-fg\">  </span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">inputs</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">kernel</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">bias</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">dtype</span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">dtype</span>\n<span class=\"ansi-bright-green-fg\">    381</span> <span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">--&gt; </span><span class=\"ansi-bright-green-fg\">382</span> <span class=\"ansi-bright-white-fg\">y</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">self</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">dot_general</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span>\n<span class=\"ansi-bright-green-fg\">    383</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">  </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">inputs</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span>\n<span class=\"ansi-bright-green-fg\">    384</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">  </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">kernel</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span>\n<span class=\"ansi-bright-green-fg\">    385</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">  </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">inputs</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">ndim</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">-</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span style=\"color:rgb(175,135,255)\" class=\"ansi-yellow-bg\">1</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span style=\"color:rgb(175,135,255)\" class=\"ansi-yellow-bg\">0</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span>\n<span class=\"ansi-bright-green-fg\">    386</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">  </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">precision</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">self</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">precision</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span>\n<span class=\"ansi-bright-green-fg\">    387</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span>\n<span class=\"ansi-bright-green-fg\">    388</span> <span style=\"color:rgb(95,215,255)\">assert</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">use_bias</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">==</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">bias</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">is</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">not</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">None</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">    389</span> <span style=\"color:rgb(95,215,255)\">if</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">bias</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">is</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">not</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">None</span><span class=\"ansi-bright-white-fg\">:</span>\n\n<span class=\"ansi-bright-cyan-fg\">File </span><span class=\"ansi-green-fg\">~/parvus/prog/mint/ai/jxai/.venv/lib/python3.12/site-packages/jax/_src/lax/lax.py:2414</span>, in <span class=\"ansi-cyan-fg\">dot_general</span><span class=\"ansi-bright-blue-fg\">(lhs, rhs, dimension_numbers, precision, preferred_element_type, out_sharding)</span>\n<span class=\"ansi-bright-green-fg\">   2409</span> <span class=\"ansi-bright-white-fg\">bdims</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">api_util</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">_ensure_index_tuple</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">lhs_batch</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">   2410</span> <span class=\"ansi-bright-white-fg\">         </span><span class=\"ansi-bright-white-fg\">api_util</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">_ensure_index_tuple</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">rhs_batch</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">   2411</span> <span class=\"ansi-bright-white-fg\">preferred_element_type</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">(</span>\n<span class=\"ansi-bright-green-fg\">   2412</span> <span class=\"ansi-bright-white-fg\">    </span><span style=\"color:rgb(95,215,255)\">None</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">if</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">preferred_element_type</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">is</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">None</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">else</span>\n<span class=\"ansi-bright-green-fg\">   2413</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">dtypes</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">canonicalize_dtype</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">np</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">dtype</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">preferred_element_type</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">-&gt; </span><span class=\"ansi-bright-green-fg\">2414</span> <span style=\"color:rgb(95,215,255)\">return</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">dot_general_p</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">bind</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">lhs</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">rhs</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span>\n<span class=\"ansi-bright-green-fg\">   2415</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">                          </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">dimension_numbers</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">cdims</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">bdims</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span>\n<span class=\"ansi-bright-green-fg\">   2416</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">                          </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">precision</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">canonicalize_precision</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">precision</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span>\n<span class=\"ansi-bright-green-fg\">   2417</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">                          </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">preferred_element_type</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">preferred_element_type</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span>\n<span class=\"ansi-bright-green-fg\">   2418</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">                          </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">out_sharding</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">=</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">out_sharding</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span>\n\n<span class=\"ansi-bright-cyan-fg\">File </span><span class=\"ansi-green-fg\">~/parvus/prog/mint/ai/jxai/.venv/lib/python3.12/site-packages/jax/_src/core.py:502</span>, in <span class=\"ansi-cyan-fg\">Primitive.bind</span><span class=\"ansi-bright-blue-fg\">(self, *args, **params)</span>\n<span class=\"ansi-bright-green-fg\">    500</span> <span style=\"color:rgb(95,215,255)\">def</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,215,0)\">bind</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">self</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">*</span><span class=\"ansi-bright-white-fg\">args</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">*</span><span style=\"color:rgb(255,95,135)\">*</span><span class=\"ansi-bright-white-fg\">params</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">    501</span> <span class=\"ansi-bright-white-fg\">  </span><span class=\"ansi-bright-white-fg\">args</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">args</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">if</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">self</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">skip_canonicalization</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">else</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">map</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">canonicalize_value</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">args</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">--&gt; </span><span class=\"ansi-bright-green-fg\">502</span> <span class=\"ansi-bright-white-fg\">  </span><span style=\"color:rgb(95,215,255)\">return</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">self</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">_true_bind</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">args</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">params</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span>\n\n<span class=\"ansi-bright-cyan-fg\">File </span><span class=\"ansi-green-fg\">~/parvus/prog/mint/ai/jxai/.venv/lib/python3.12/site-packages/jax/_src/core.py:520</span>, in <span class=\"ansi-cyan-fg\">Primitive._true_bind</span><span class=\"ansi-bright-blue-fg\">(self, *args, **params)</span>\n<span class=\"ansi-bright-green-fg\">    518</span> <span class=\"ansi-bright-white-fg\">trace_ctx</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">set_trace</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">eval_trace</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">    519</span> <span style=\"color:rgb(95,215,255)\">try</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">--&gt; </span><span class=\"ansi-bright-green-fg\">520</span> <span class=\"ansi-bright-white-fg\">  </span><span style=\"color:rgb(95,215,255)\">return</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">self</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">bind_with_trace</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">prev_trace</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">args</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">params</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span>\n<span class=\"ansi-bright-green-fg\">    521</span> <span style=\"color:rgb(95,215,255)\">finally</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">    522</span> <span class=\"ansi-bright-white-fg\">  </span><span class=\"ansi-bright-white-fg\">trace_ctx</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">set_trace</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">prev_trace</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-cyan-fg\">File </span><span class=\"ansi-green-fg\">~/parvus/prog/mint/ai/jxai/.venv/lib/python3.12/site-packages/jax/_src/core.py:525</span>, in <span class=\"ansi-cyan-fg\">Primitive.bind_with_trace</span><span class=\"ansi-bright-blue-fg\">(self, trace, args, params)</span>\n<span class=\"ansi-bright-green-fg\">    524</span> <span style=\"color:rgb(95,215,255)\">def</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,215,0)\">bind_with_trace</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">self</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">trace</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">args</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">params</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">--&gt; </span><span class=\"ansi-bright-green-fg\">525</span> <span class=\"ansi-bright-white-fg\">  </span><span style=\"color:rgb(95,215,255)\">return</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">trace</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">process_primitive</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">self</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">args</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">params</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span>\n\n<span class=\"ansi-bright-cyan-fg\">File </span><span class=\"ansi-green-fg\">~/parvus/prog/mint/ai/jxai/.venv/lib/python3.12/site-packages/jax/_src/core.py:1029</span>, in <span class=\"ansi-cyan-fg\">EvalTrace.process_primitive</span><span class=\"ansi-bright-blue-fg\">(self, primitive, args, params)</span>\n<span class=\"ansi-bright-green-fg\">   1027</span> <span class=\"ansi-bright-white-fg\">      </span><span style=\"color:rgb(95,215,255)\">return</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">primitive</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">bind_with_trace</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">arg</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">_trace</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">args</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">params</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">   1028</span> <span class=\"ansi-bright-white-fg\">check_eval_args</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">args</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">-&gt; </span><span class=\"ansi-bright-green-fg\">1029</span> <span style=\"color:rgb(95,215,255)\">return</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">primitive</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">.</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">impl</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">args</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">,</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\"> </span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">*</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">params</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span>\n\n<span class=\"ansi-bright-cyan-fg\">File </span><span class=\"ansi-green-fg\">~/parvus/prog/mint/ai/jxai/.venv/lib/python3.12/site-packages/jax/_src/dispatch.py:88</span>, in <span class=\"ansi-cyan-fg\">apply_primitive</span><span class=\"ansi-bright-blue-fg\">(prim, *args, **params)</span>\n<span class=\"ansi-bright-green-fg\">     86</span> <span class=\"ansi-bright-white-fg\">prev</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">lib</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">jax_jit</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">swap_thread_local_state_disable_jit</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(95,215,255)\">False</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">     87</span> <span style=\"color:rgb(95,215,255)\">try</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">---&gt; </span><span class=\"ansi-bright-green-fg\">88</span> <span class=\"ansi-bright-white-fg\">  </span><span class=\"ansi-bright-white-fg\">outs</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">fun</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">(</span><span style=\"color:rgb(255,95,135)\" class=\"ansi-yellow-bg\">*</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">args</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">)</span>\n<span class=\"ansi-bright-green-fg\">     89</span> <span style=\"color:rgb(95,215,255)\">finally</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">     90</span> <span class=\"ansi-bright-white-fg\">  </span><span class=\"ansi-bright-white-fg\">lib</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">jax_jit</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">swap_thread_local_state_disable_jit</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">prev</span><span class=\"ansi-bright-white-fg\">)</span>\n\n    <span class=\"ansi-bright-red-fg\">[... skipping hidden 23 frame]</span>\n\n<span class=\"ansi-bright-cyan-fg\">File </span><span class=\"ansi-green-fg\">~/parvus/prog/mint/ai/jxai/.venv/lib/python3.12/site-packages/jax/_src/lax/lax.py:4977</span>, in <span class=\"ansi-cyan-fg\">_dot_general_shape_rule</span><span class=\"ansi-bright-blue-fg\">(lhs, rhs, dimension_numbers, precision, preferred_element_type, out_sharding)</span>\n<span class=\"ansi-bright-green-fg\">   4974</span> <span style=\"color:rgb(95,215,255)\">if</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">not</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">core</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">definitely_equal_shape</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">lhs_contracting_shape</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">rhs_contracting_shape</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">   4975</span> <span class=\"ansi-bright-white-fg\">  </span><span class=\"ansi-bright-white-fg\">msg</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">dot_general requires contracting dimensions to have the same </span><span style=\"color:rgb(215,215,135)\">\"</span>\n<span class=\"ansi-bright-green-fg\">   4976</span> <span class=\"ansi-bright-white-fg\">         </span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">shape, got </span><span style=\"color:rgb(215,215,135)\">{}</span><span style=\"color:rgb(215,215,135)\"> and </span><span style=\"color:rgb(215,215,135)\">{}</span><span style=\"color:rgb(215,215,135)\">.</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">-&gt; </span><span class=\"ansi-bright-green-fg\">4977</span> <span class=\"ansi-bright-white-fg\">  </span><span style=\"color:rgb(95,215,255)\">raise</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,215,0)\">TypeError</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">msg</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">format</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">lhs_contracting_shape</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">rhs_contracting_shape</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">   4979</span> <span style=\"color:rgb(95,215,255)\">return</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">_dot_general_shape_computation</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">lhs</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">shape</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">rhs</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">shape</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">dimension_numbers</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">TypeError</span>: dot_general requires contracting dimensions to have the same shape, got (50176,) and (3136,).</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#72b2d0d1 .cell execution_count=5}\n``` {.python .cell-code}\nimport optax\n\nlearning_rate = 0.005\nmomentum = 0.9\n\noptimizer = nnx.Optimizer(model, optax.adamw(learning_rate, momentum))\nmetrics = nnx.MultiMetric(\n  accuracy=nnx.metrics.Accuracy(),\n  loss=nnx.metrics.Average('loss'),\n)\n\nnnx.display(optimizer)\n```\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<script> (()=>{ if (customElements.get('treescope-container') === undefined) { class TreescopeContainer extends HTMLElement { constructor() { super(); this.attachShadow({mode: \"open\"}); this.defns = {}; this.state = {}; } } customElements.define(\"treescope-container\", TreescopeContainer); } if (customElements.get('treescope-run-here') === undefined) { class RunHere extends HTMLElement { constructor() { super() } connectedCallback() { const run = child => { const fn = new Function(child.textContent); child.textContent = \"\"; fn.call(this); this.remove(); }; const child = this.querySelector(\"script\"); if (child) { run(child); } else { new MutationObserver(()=>{ run(this.querySelector(\"script\")); }).observe(this, {childList: true}); } } } customElements.define(\"treescope-run-here\", RunHere); } })(); </script> <treescope-container class=\"treescope_out_c1aa4ff730ed4f5ca5622352409293de\" style=\"display:block\"></treescope-container> <treescope-run-here><script type=\"application/octet-stream\"> const root = ( Array.from(document.getElementsByClassName( \"treescope_out_c1aa4ff730ed4f5ca5622352409293de\")) .filter((elt) => !elt.dataset.setup) )[0]; root.dataset.setup = 1; const msg = document.createElement(\"span\"); msg.style = \"color: #cccccc; font-family: monospace;\"; msg.textContent = \"(Loading...)\"; root.state.loadingMsg = msg; root.shadowRoot.appendChild(msg); root.state.chain = new Promise((resolve, reject) => { const observer = new IntersectionObserver((entries) => { for (const entry of entries) { if (entry.isIntersecting) { resolve(); observer.disconnect(); return; } } }, {rootMargin: \"1000px\"}); window.setTimeout(() => { observer.observe(root); }, 0); }); root.state.deferring = false; const _insertNode = (node) => { for (let oldScript of node.querySelectorAll(\"script\")) { let newScript = document.createElement(\"script\"); newScript.type = oldScript.type; newScript.textContent = oldScript.textContent; oldScript.parentNode.replaceChild(newScript, oldScript); } if (root.state.loadingMsg) { root.state.loadingMsg.remove(); root.state.loadingMsg = null; } root.shadowRoot.appendChild(node); }; root.defns.insertContent = ((contentNode, compressed) => { if (compressed) { root.state.deferring = true; } if (root.state.deferring) { root.state.chain = (async () => { await root.state.chain; if (compressed) { const encoded = contentNode.textContent; const blob = new Blob([ Uint8Array.from(atob(encoded), (m) => m.codePointAt(0)) ]); const reader = blob.stream().pipeThrough( new DecompressionStream(\"deflate\") ).pipeThrough( new TextDecoderStream(\"utf-8\") ).getReader(); const parts = []; while (true) { const step = await reader.read(); if (step.done) { break; } parts.push(step.value); } const tpl = document.createElement('template'); tpl.innerHTML = parts.join(\"\"); _insertNode(tpl.content); } else { _insertNode(contentNode.content); } })(); } else { _insertNode(contentNode.content); } }); </script></treescope-run-here><div style=\"display:none\"> <script type=\"application/octet-stream\" >eNrtfQt327ay7l/hdtfdlm9sGW+SSZN17dR5tE3SxGnTdp8uHxAEJSYSqVCUH9kr//0ClCxLsixTsiSSEpyHbQoAgZkBMPNhZvBjN71qyWf1NJGyK+KOPEviOLX+a3XibpiGcfTYSmSLp+G5fGIFcZQeBLwdtq4eW+04irsdLtTzi2aYyoPsl8dWJ1FPWmE3PciaPkivOuppFEfqscfFl0YS9yL/QMStOHncr/rEGvzmtVQB1V7op83HVhCmqliUyih9YrXD6GDwHALwf1Rb8eVBN/wWRg1VL058mRyoR0+sDvd99fCgJYP0sYVEU/cmkgdNGTaa6gmsU/2+KOWhGtyw/cEPB+dhN/TCVpiqIfJeGg/LHoRRmoRRNxT6tbL/6WBc33887NPxxyEdD5JepN6ZqGddkYSd1NKEeLrLO51WKLgm7WEsUqnJlEje3n1Wq+09faYor97XTS1fBlHXemqlzbBbb8j0g2LL29iXtb16M+6m9exzNTSZWmcdGekhHwndqq70n3+mffKKR35Lqo+jXqv1pP+GuurmaRxH6mntIk6+7FmjfYg/qUf6o7HHaSj0w45Mgjhp80jIehRf1PYyQVAvqN36xDroV/rRwmhPtRMGVm2i1/WWjBpp03r61AK6yMyuJzLtJZGiuyVbXXnTsWYv0j2bbLrbDINU9y8roH/4rv7c8YaaEr/Ijy/qifzak930KArbGbteJLwta32a7Ok2ntx6UafXbfbJ+GTKGK9f8bQ/jBmjzN8H3Ys+I9O40Wj1p+9ZNsWUtHZ0W/qJbKX7ljxXAj7gpO5d9nv9i7zSRN9JdnSHBoXrosW73V/VLB60W9sZtnnWVmK4c/3y73uKnkr8Mxl/9uPhtAngh+dW1uDTnfF1ZsdKuadGKi+f7oAdNXWT9HaROFJdVMSI1EezJsN0CtR0neux76jJ2F/vvDhN47ZeGB5HcVqrB3HL556qHalmHzd5t/asxT3Zejb+yVn/HVmdx6IpxRfp7+1Z/1eT7nrhSePOYwvUIZXt20uPfvbtIBuy+v3J1GX2ez1bDs+45yXyPJPubHX8gTmIA3BTQMTtthrWSAmefWnWTBTh/S4343OZ7E0pP1787KIpozN52VECKf2lUeiutyr+qknjj5QA6isIbkpEvbYnk9ECrgMpuynQ1WtzY/QdGFJIhwWkf6ZZcVNgsNXc3pHOeVI7OPBasfjSf7T35Hp/yTgLO5dWN26F/qySffG6r/B3Lbgy0Z3rqO7IpiLk2Ci5rf8MNt5Mch9bYcrVBqIrj9H9ji1bCcI09qjSfthVL7263ponC1rPrIy9jx97Ui3mI5T7QWRf02W3v+seQL3tDrZrJbDDd4VRNiEyMsx4Zyamt9/s8+RLV/KGWiCi27WXJKbDPuiq0ytdlx/rYaY+PLZ2/wdRT+wW2b3xSnd2kq2hk5qP+sW9pKsZ2ImVEiWTKe8Nu8t7bTYVshcdZMt+9y4ZX85bb4aXysv09lvqYfcsCJNuehZH/UXo9tSaNZXqiOrZNJVV1oO73+f4ZBf1qNo8aSi1t9+NbEJ/f+Db1FLcufJ6ammMpi5ANx9PE9oda2eilCKkMjqmF/4fCYm/M2Gz7L7hSipC3rJOr9pe3Opa73qpHq9vPe/XVN87V2piHFxI74uyP/orb1upFM3M0uBRqqqHvCv9odXygwT6z5PbYt6vnVkLoO7qvX98lP35MWUU05e7m5r1C949E2ofUIQd1udBOrZ7XK/Ts945UWf8laOkH2xgPk/5AY8UYzN9dG/0sX6JVrITHl1Lc9asBbuWVBRTas9B3EvnG8qwB4oxofT/Nd6T7JXWv8J2J05SHt1q20viL0qT0U9uFqP7qTtSbYSe12z+Xm+K5llm7p7p2TGi+/UnC6j3Z+xIuURrgCMFk75GOCypNUI1VP9MKBPKT2Q0GPy4kap6OV5waarZcDIOtuaxyS94S9SUJa3MOKXQZJp/vZtyXX/Y35X1ZKBR9XviK71KiYlWq0bY8bXHW5EyjM46iQzCS9XI2MRzsomnrECuNa0LnkSKA2fXW8U1d4OAC4inFOwoM+oW47L1cECkwaODATNvVMrHmfrPk4NGwv1Qsa1mQUx92di3YjVJGtICqntMNPf7k0bZP3oJyh5ZAzLf6suttXo5G4F1a8k/GArnJK/vks3JckPVu89DNbvHi6xdekGdiOZenr6uR5z7pkHWq6kGwphJmY1D8aTVVNyqQTWc0SqDdruqlNzT0MCABjdVD/LXvX7vtRmT1Rw2ef30YPB4jdS8McQyCh7oedXrDgYIZVuN7u6BTdGh5tZg7hPx/47Zin3+6tUqh604u/D3umpxJXjFDZMfAllkiIFGLKZpdlrRVsSbWqZvEo6UUn29q6F+C4okLd5RGtj9Vuz8DL77DTcdrY/BI3eUWUY/pr1ijBTXBc7iZAT0m0aWu4svR6D2rYkzhPo4YGjl7PAklYesOFP1zqIxcHOxamsdb87ujzF1NiPzvDUXifLQMs/L7hvUMs5GNFxt/esoSfhVPUjids2PRU8jlXWt6XXr57zVk2r12Kt347asZfqfBrr193rf+tMgd077b2dXaUN7w2OFblPKVJ89yAvr+enpqR7NqX6mTxKyD+uJzAC806tI1P73/w1sTiGvNdH57c9RxC/SZymtwbOLwcJMNBDcTcRjq5e0atoYeqw/P7yIgwA98ZS5xci+D9yXbxpHx0fZ1+v3R0dx9tPxhwv1/6sXR0cnR7O+jttHR40v8S/+65Pj5xd/HR19/Ov5z0dvXh8/P3rRuHz96tdm2j1+E8oGfvHTn+jX1+yv89NOL/ztDf0If/7z9Yc/3px/evMt/e3qxYvnjz41vnwMj38CzfCn972fT/yXn8Er7zA4f+13vv7Cml8/heH73pvoZfNV8Ht69Ds7fpuQoxevoy8nTPze60WPPtCvovvl4jx40Tr8etk4iZ2G9/PFSwe+OjqMjj7QX5PkZ/jhUeMb+OCDo58D2HhrP794+Rk1QHzV+2Db7RPILl796b5rNDry45crIl9736jwkncvU37UeP/67cVPvHvVfd97/frPTycvLo5+e995/Zf/++Hho4b90f4TpyD45bevR+dUtfnr0Vv76M3FUbvx7cPpo97fp/Lkz0sUMPHtLfnw6or2jo9++Xb8ufOig8NX75+fgL97v5FTOwqOfz159eJN+yh85JyfoGYEm/Yj74+LPz9fvErOf3r5+/Poc3By0kgfvRN/t1o2dZ//fHHsNF3y5s3LU/zy76NG+zX9fPzeTT++lK/ck+Pj1y/xTw3y4fAvceUdvVQ8/eOXw6P3L/mRfPO8dfTq28m7xt9pgx3/1nj37vVPx1/C91S+OP7z+fELEYJOM4k7kZKNzt8nP8Fv8Mtp8DxIm1e/RK98/qL7KgBv2y9P3rJj/+jrH390eNo9/bvt+zx0UfDNJb+Hn7+yTjth7+K/np+Gycv2+c8v8emnU/ziBInj98HHR69acecledG9oLzxlTnh3/L0bavzKTp+9Vr6bxLZ+/T15fM2/PQi+XJ6ekkR+/Spe3GkerRnZeeIaW03E+tdrQf9r/pvOPu5H3eUQXgzJbPTz3q9PqPEfn/O/qPamn2e1MyO4zIUoA9QqLaVeETCqvVxgvHDUjUFP8Z6+qpiAxxBP+uq5UE3oYERjSbwCx6mVsTPwwZP46SuWu54MU/8+kUSpvKjvExrN21pNbHf1s2JnNLbajsjqIk+i1Nv+Ri2ZdxLa9eHtbfqJbIdn8tbVb/vWwgAkKnHavFVpkgtw/+mv3cEGtm56ZxGPq9XMH18uWP9YL3gYUstbGls6cL/ylY2ZUJEylhXq3GoaCa5r5GdR6O0G5wr3nOiqFGi6yPF8SOESet459mP/X39xzDq9AY7zU62k3vx5c7URgabvvqwv+GrTmSVx987vtPuPPt3K9XdViVmlxv7cAK62HkWtPhlPYou1dar7Guln9eV/Ibt8JtM6tet97+9u35e+/FwMMRbr71WtybeOnbYt/NMMes3nnBlA2DH3XcBVCZinVlvjpWWo96SbbtK9bdqxBo8+oOrXczTm5Ntu/sOQFYN1+Gwxmmq9rmRGh/jlLfU7/uQufs2oOp53dalx0c02sfdazNgd/yxfnTWOm+NP965hZ/tzPp855kSvs7Tu8XoIVJTWmnJuDJVWHZvsM9dK46e68Xh6e6cq2N20r63aw2B2ac7dU3mHSvTY57ujGC2ShXKPtNI+ySmrD7LVgK10zTVzwMSPLtbVOYU9YFUFiZ6ma46kL3Qf7ozPAP2A+lC4bk2czDxYcBd6Hm+zQMufcylmGh32tnxQK6mD+azkpVsLlvTBj00zrOC10V6YZRiVNv7d+NGXO/nwP6cXFqp/PWNg1lS2C+xuCzm+HYHpWeJ6l0rxKhzyM4zpevcXeimrVvs25u9Ot0qv3+7/NC2VdOqTAxfzYJzt/BPTnBtG7cGE3zYkxE077EVf2mJZg3UbYdq2A1gy6F1l0KKHeBQF9vUOrRgXelk05BMjcLtPFvN5jVb5RlzpRngkdb4YdjOOra9cWY8f/u2Nnyyxs0t4/NdwpZ9WMT2docmt7Tt7tZh0DgCvjOj9K2iynI6h3POFMRY3cGFTpJyT46hThhF9f7544QqqAy18+ImTD1j+sxp0y9S4OQhlOmJ41i/lHTifJFJJFtn3SbvyFWbMbWiZKQ+OsocAjNWfinSs2JLYIow9h1dd57Raqldd3HhP+CfeRmnqqxDSdsC2sP5aQ+Lpj3eENqj+WmPiqY9q5JlfycZ8fyUx/9U0/YnlmxJXaG7OAqwEdNtfcrB3RMtj8K2SYjz+eAIoBV6E/ZFpkQXrTXmF4ki7AxCwfINjIcA0TNlYQylRth1CKA+IcIhLhMec7yAQuG71AWSkyJQ6qAVcw1T031L/cX7FpsGWN/FtTEHlqljhpQH1A0EZ5IQ7LgO8mwWQM9HKKCetFcPNEw74SsfaZevP8xcnda4nMw+RLir/HKWlsnlQ60ff4RdtTCH37IWrWboq5lthZF144elu7SQ4G88ac2hTfnVunXs3ouqcl7Iu0aRW4MoaELnEQRdrggljlk1VBpPgvwKXIAcYAsuXRm4BDLgIkzsIPADBAPsyUIVOLa/XMWNO4Ax5nPbhgFBPnV8ziDEAEkBMbTBFihuM0m6iQqbXg7y6xQ3pY2yVjKyGkWtzIraenbnRZW0MDoLJE97iZzQ1TbmuGFkhHnYMFJ8/dyIe2kudrDqsmN0iHn4MVq+KDj6TEfIb777gBrkPAcEqrhxHij6VEcxYU7fgX6NkrgOVPYIVVMRzk13WNEDVGQOUNe7PC66X+n0fv5s3QFWlxOD0eXhwqDo+jkwyBYxjQP93Itqdvxwiewnp0dvTvo/VZchg8HmYcigaBEWjtKuzvywlb1rQ2fG+CDz2TmjNQrTrDecLxOjnGP/KI4zA2vrTOfm6qix9qJ0Q7kzZaR5ODSl2vq51OvKs9snbGN5gneefUx6srrsuR5iHp5cl10/I9q8+2UmE97GUYWZoIeXhwG63PqJ72dQy+ZSPxtfHvJnBYvQdhPePpvChXXEkE3Pwr4zk4M/TGXzrUN/fZCoNrjOVX38lHBGNNjMw74lgFbXtri22LMPrL71cNPVQR/7j0dN8HKZDEOJyWc2DIuvEjqppO1VNCHnWCYSKcLuHWr+hizVwzHm4sZ14cIMrzAKp6r1o8tM0Iuy+1aszPUpEvJMhwzr7Cn601asfunqdaauG7N4aoFLm0LM/QBTh4ORJai6ppse2hxmmy6+MgeJn9TmpHPgKUpnQdMYMisOrMNm3JaHbcUjeaim+Xmve9hJ4sZhO4zSQx4efr5U/9XPZXR+2Aq9w85V2owjXIfosKvvo+ooaeEN2T1UO8nhWTcRh1F0qMehE7h/k0m33rlahi/gFJGrlpZwd2LOnTzqRFQfI+o4LdWjuFsS7WI47bNODec1AYALmzJQVtViKGR53S3WO1spKXSybojas24mL7ri6Q6cNWQkEz4A86S/vYuf9qEeJ+U0+pRt/ZvWx9HlUHBHoNIuh9N6n2fSTKu3vkVyNRqNkr9DPa641dNd3/RFshysX9xajNtxKqsPKy2+Zo7mJsrIMKkvjtGobOvmWOcm7EJPlHbBHOt2Pit+pEJF9UgtaUqH1P8OB5I2z+JYOQeuophcRe/8u9O23VwLa03c3bUzt09/1XfblaZoW/xU8vKsE8fjmTTu8LSdkJZsGVdVuxoz1nZlbWxxv275Zl0PCEAMgWxd3x/cyDxIuVZD+xba27eu/dL6v+8tLPij282gd0q4Kx4nck3R2YJ0XWpl+8yQy6O8t2LvsxQj4K7jO8r0kSBf+OH9NjIyaS23L60lun/NRAWmtUT7BDKr5tZtk9iywMgUNGfuKmQSW5ZAH0LzJ7ZEJrHlSmgP56c9LEtyxarTHs1P+8ITW8KKZrZE82e2RCazZcUDs4rSDkxmy5InREK5c2OhAjNbKhsDAG1jsArmtuQBd5Hvu5DZNvFtwKlnY88hAmIBAoaKz23J9i247OSWngCedJlDGSEec7gXQI8L7AnqKyLArUlueR9tNy9ZEpozBSMy2S3LTlqTNKn8qt06dnCT3bLkyly+CEBUWHZLjRSzCqa3RJ7aLmwYBL7rEddzPNdnmAgX+8TxqecXqcPBZee39BnBQACEMfeIw2w1BOE4PmGQCcAo2wLdDW5Zgks0VyZGZBJclpesRlcrs662ng16xQkuK3zsMFeCS1SNBJewwvyYL8MlMhku13dSkCuFGzIZLst0upM3wyUyGS6XTnc4N91NhstqT7W1LY8mw+U0TuTOcIlMhsu1MCR3hktkMlyu2MqZL8MlMhku17l3zMMYk+FybdxZKMMlMhku18Se/BkukclwuSom5MtwiUyGy5VQP2ccLjIZLk2GyypkuETzJWZEJsNliQlpMlyOETh/hktkMlxWxnTLl0wNmQyXJsOlyXBZvKtF7vlqMlxW159mnUw2GS5NhssqZrhEC6Y5RCbDZfUXyXKw3mS4NBkuq5PhEs2b/BCZDJcVdOAqiskmw+WGZrhcbba2RffQfm47OG/6QKh+cwmzbRsTk0Nw0RyCv2YPC8wiOOD+bMkcFCowkyC22T4hwKrBOrXelDqXoAlmXofA5opsHy9bhPhqucVoBXK7nthmECAsIGWCuwHxicNt2wlsX9o0gIgFssjYZgyxTqCCwJIjnIXwMGIEAOkQYVMXINvm3KVCCswl3YII5zyU3aw45/GFIk9Q7rQaJt65pOQ1cc/lNIqK2MtNnprSq3b3e/KOliwkV41W6YgDqpetxg4kDqiPKZOESNd3oS9s1wNM2sJ3fVBothoElpyuhjnIdjxbQu4BIhHjPgeUY0zVX+LZeBvS1cwm6mbqcXlTq9wub3S4EpLW6G/l1t/WtWGvOHeNtnurzIbcCWymVChxChsEqsyU/FlsptUw0YIrYUq+eMHJ0iZobfmcyHG4PlbUBK6ZwLXyBq5di2ruiKspFUzwWgmJaQLYJkicL4TtVnETxFZ2FD5HxMSUCiaQzQSymUC2orCXOeasCWarMsi2XkYvbLXG6XVoyMZZTCPhaSPDLNsqNtK1sSg0xDgq8Vo20u2ckMBNhbWtZwhTtLLIMy1eG7+SFcNmE2NmYsyqEWN2YzXnDkCaWsXEmZU8zqx4RptYsw2MNVtPTM/D4s2QiTfb4ngzlEc2UYHxZhDsQ0asGlFSt9R7pU28WSWdktEcPupF3oau5BY4IJNbXMH70Ilk3CFMuA7jBDDBpYQcuMIXQQAII0V7J1sOWa6DsicD6AEHI4cGxMeIi4Bh32GUUQ8g6G6Jg/Jsum6ijzKaOxjK3IVeCfIaX+UyG0Xr3cdNrFnp1bq8XqDF3YvuKDMEY1a9UDMfYU8C4trYUf8jfVe440pIbZcjlwi3SGXOIUuONPMA5I4LHRHYHqGEOUTgAEFoA1sySeEWKHKzabqZStx80VDmcvSSk9Yob+VW3ta1W6840KzSIU1o3jizilyV7pAq82TeMDNkwsxWz5R5wsyQCTNbISdyn6yb+9FMmFlFwszQvJFR5o60shPThJlNkHieMDNzV1qFAPjckQzmvjQTZmbCzEqBvMwxZ02YWZUhtvUy2oSZmTCz9YIB88UfIRNmVk3MpxA2mzAzE2ZWpTAzNH/0kbnOrIphZkUy2oSZbWyY2apDeR4WZoZNmNkWh5nhPLKJCwwzI4jqq6FMiJnxRU7wHK7puMAQM9K/zsyuYHiZBC71fJcKD2MCfME5B66HXSR9CphPCvZItuhyfZLtwGeM+IwQ4RCh73BjEEkAAoCpKkO2wyd5JlU30SsZzx37hE1oWRXIa7yTy2wIrXf/NqFlpVfn8np+4sJCy5TxgSp4hxlFng2ZjQhV/yQJPCSoR6UkWDqBsJ0i1Ti65LgyEhAOPMx44HJCiVQ/EiCEdGyHC0TZFuhwdH/rFLj5Yp+wCSsrN2mN4lZuxW1dO/WKw8qqHMGE540qw9WIKqNVZsm8QWXYBJWtninzBJVhE1S2Qk7kPkfHJqjMBJVVI6gMzxsHhU1QWcmJaYLKJkg8T1AZNkFl1YHec8ctYBNUZoLKTFBZGXCXOeasCSqrMsC2XkaboDITVLZeMGC+aCNsgsqqifkUwmYTVGaCyqoUVIbnjzXCJqisgkFlRTLaBJXlCyqrnlCtOGzHCM7mRSPOFJlVKF6TO3p6uSL9ysqKST+fe+1sZSjupEob0hp73eNdOaEJvUy4H6pBfUx41A3ipJ0R6uQyTfhR0uiu15c2vbyLpenlUpSDFbu2zgXaiyYPo2lI/VkQDbU+xAHwKRQVBOvTy/os9Gfw8dp0PoaXqfNlk+owvZ403UP9ck8NKGrkguInJafXUTSQD5Odfhu3pMf2eF6bYb9EstMfzQzp6RdYn/ywouVnvUoLUiNX24virrJnFnYkrdiKtYrtJ/8ioITirJveWgeWj9qsd1cfDusu6g4LVGGPv5s1Vtg9C8Kkm57FUaaml1ADHK44E2rgqU5ucXx15PP2qeZEQRLyH/DPvUKiylRBToTiTrpJUXdKdPr7k+JE2NaHmBMy9K6TZuE+xclOPSN6Hgnqlyzktl6rRsoSfjcWdeY4vusj17VtmxNXAo+5DmKe7wfYU88LSZSgtCqManv3QCNl1WJvC9zsIKS7ym8X6rWh0UfFrFP5lc92b5M2q4x+t+PD+7rNf4vboNq9XFxv9yqnCvfndVdxKWoodmYO7yKOzmH/x0HvHlsrFrJCefuf3WzEu3cosf/+2ovTJ3dW6n+8CXzXvlxrYft8VlIBCvEfg1QVtVKI5X92s7CwxcTzuvLyxHROzZlZNUSql7lC0gC5mAa+4wPCXMA9GwgCBfCk+saDIjNXsCVnruAUe8KhQArBCcTAYZ4tfJcxhl1CbLwFmSvY/ZkrlquxFpO74r5VYpalk3Oh6TexxOVmozJcVIUBcxsi3biXCDWzjffiPXmuShj4OrXrWWfLFwF7r/SPCOLDptFIQ6tdzSbPLG3AVuLoOMrdjXN1rKJcGJzPqor4FGl75d+E7zXx+7G068V2jHE/W8AG+UUXFbHr6oUZ+IRmWcadCmYZdwLGbCm463JCoON4kLmOL4RNpWAek8Wmp7TUX7xvseUa+4iTwHc8wiEKCJbEFcCljs8AcSlxA2cr0lTmIO02GP3Xa8eDrM7xRozhX30mGOPfGP8VM/6H8v9wM29aUwYAqDAAUG7Z2AYQYEMEqFgLrdiwArWitBeOKPi+GWBQEf4hSwR/dIfQ1vn1oEX4hoxfj/HrWbVYLo4toxL49UBm1VgFHXsc5vqQS+ZKJAi2A09S3yculi4T0nNpkZgfXLZnDwaeh3yPUEQBIQ5zsKS28CimiAeeDbYA7IPb7NqDHu5Zgoxrz2YxwKB7Bt2rDrqHluXCgYxrzyYheyWXC+PaY1VFfIo0v4xrz0bb94sDx6gUrj1onwBg1dw6q6BzjweYBwhlgjsuCQLBbYQJR5Ign3PEnOKde9i+BZft3UPUmGXguwwh4mPEha2vFvCQgJhjJrbGu+c+2m6D4f9QzxJk3Hs2kQkGADAAQMUAgOW4cCDj3rOBIEC5ZcO491RGgIq10ox7T9GSUISbyBIBoH6y/e1K3DMY87y8G1YzTj7GyWfVorkYznyrenGOPghYNeKAKrr6gIA5tnSBywiCNneFL+2AcZsHlDmwUFcfBJbt6+MIylyHcOhiwgLhcCfAjhQOhg53obsNvj6zibrBmN+t5WIRuOmORgzmV30mGMzPYH7VwPxuy//CuM7MpgzmVz3IpiKyYZx/rOqIULFmmXEA2nDbfzFweUoDhdn/2Gb7GGU5fqj1pnoggE8dwmxAoATEdwVnjNoehA7VnyC3SBAAQ6z9VBBYLhLgMMpc4lMkfUGkAx3s+Ry6gHNgE+qxLUAC8lB2O+CAh/if3NmMgQQ2gxEGFjCwQOVggYc7fNzTmIEGKg0NlF0+jEtQhYSoaLvNuAUVLw3FOJcs3TUIbaFrEFqMeyb/j3ENWoNoPgSDLkMOIIdYNYxZ9TyDAsenvo+o4zqEAAA8B3MXBeqLEV/4XpGgoEOW7BgkXYFYEHgMc0GAwx3sBgQLhFw3CCCztwAOnE3TjQcC0TJcUkwioA1kggEADQBYJQAQLc/3wyQE2jDwr/SyYfyCrOqIULE2mfEL2nDD/yH4cjmSA0GwDxwdGgTquILpgRhmtufbnEgJiXB8FxPJhB0gSj1GIC86OMhyyHJhAAocJDmSngCIMOC4SLgetYW+88zjQGxJfNBsum4HFPBwVxSTGmhjGWEgAQMJVA4SWJbPh0kRtJmwQNnlw/gEVUiIirbZjE9Q8dJQjFfJ0n2C8Bb6BOHFuIeNT5DxCVq9aD4Ef8Yl8AmiVg1VMFeQZzuIQSYhFz4BDDpUUM+mkDIgbMxQsdnCl4sEcgQoFsTzIObE8ZDjchdiG0KKHeIDeyuShG8zCIiX4YqCjT/Q5jHBgH8G/KsS+IeX5/OBjT/QZgF/pZcN4w9kVUeEirXHjD/Qhhv9D8GWcSn8gUg/R5BdQV8g23MltKnvCkiJAIEDbewTxJ0g8G3hOgWHA1l0ufa/kBhQH/kSIUQcHQOFhbL/AYOCc0ad7QgImknV7YAAHu5+go0f0KYywkABBgqoHBSwLD8PbPyANhIOKLt8GD+gCglR0bbaBvgBVVwWivEjKZLv9IF83w78cLpc7E4W210DHhj1nm4QuJcR77Zafaof1wr0LovysTx6AMtL5D2m7z7cnosGo8Ftj3NlghupZLwGjdfgasVy/jOqKZULOzhgVg2R6nkMCsEDzqVPKSZESMAJCxBkJBBAKrvdLvLQgC3ZYxDZEDkC4IABj7gccuoz6gI3kIAIX/AtODFgW+gxOGWVmBehvrMJc0xQbQaY4wFzPFD+44Fp0r8Q9HtPQ+ZYoFooXkXkwngIWlURnyJtL+MduNHG/fznTVOrF+cZSDPPQKeKWcIgwgwGNsEeJq4tHE+bwC6hwmOI2X6xYYGW+ov3LbbkfOEIS8mZRwEhxHGpg3xka79AGgjfD8hWhAfmIO02GP2LOqbNaMQY/tVngjH+jfFfMeP/YZ5f9zZlAIAKAwDllg3jE1gZASrWQjN5wYqWhCL8Q5YI/ugOoa3z60GL8M3cEGj8elYulotjy2W4HRAyq8Yq6NhDAwl4wAJKiUMIpg6SHgICSJdADD1a6M0Ay/bsIQgDQmwhALLVcF01BIa5GnvAXdeHeBtuBdhm1x70cM8SczHghjHAoHsG3asOuoeW5cJhLgTcKGSv5HJhXHusqohPkeaXce3ZaPt+ceC4HJcAon0CgFVz66yCzj0COMLnwvNdZdoD6Hm+cBlmDg0IpRiy4p172L4Fl+zd43iQQYF0unNEqBtwAgi2GQLc4Z4L4dZ499xH220w/B/qWWKuAdxIJhgAwAAAFQMAluPCYa7/20QQoNyyYdx7KiNAxVppxr2naEkowk1k6Vf+bVfinsGY5+XdsJpx8jFOPqsWzcVw5lvVi3P00Zn/iVPBW/84xNTlNqHIJgQI4gnKsSDIEVQ6Pin01j9F1SX7+jCCpQ85EJS6BDDqOi5xqL7rEHOMYbANvj6zibrBmN+t5WIRuOmORgzmV30mGMzPYH7VwPxuy//CuM7MpgzmVz3IpiKyYZx/rOqIULFmmXEA2nDbfzFweUoDhdn/2Gb7uH/7H7XeVO/2PxRIhwTMdWypTH/iMUww85ETBJgEUBQJAmCItZ8KAstFAiiHEtoetrEaMgTU5dylRHIXUulLsg35fPNQdjvggIf4n9zZjIEENoMRBhYwsEDlYIGHO3zc05iBBioNDZRdPoxLUIWEqGi7zbgFFS8NxTiXLN01CG2haxBajHsm/49xDVqDaD4Egy5DDiCHWDWMWfU8gwIPcmoL6GLASQClYwPBYODbUnjItUGRoKBDluwYJGzuYE4I4RwSx+EegAHBzA6g62JfulsAB86m6cYDgWgZLikmEdAGMsEAgAYArBIAiJbn+2ESAm0Y+Fd62TB+QVZ1RKhYm8z4BW244f8QfLkcyYEg2AeODg0CdVzB9ECAAehC6WMKBLFZwKXn+VRZ/77nIkFF0cFBlkOWCwOAIJAMBdj1HESQixzX45T7EBFqQ+qJLYkPmk3X7YACHu6KYlIDbSwjDCRgIIHKQQLL8vkwKYI2ExYou3wYn6AKCVHRNpvxCSpeGorxKlm6TxDeQp8gvBj3sPEJMj5BqxfNh+DPuAQ+QdSqoQrmChI+5QQL10EuIZAQT2LiC+khQonDOCk2W/iS4wODgAvokYA7LgkodbmHPACgzbHrMR9vRZLwbQYB8TJcUbDxB9o8Jhjwz4B/VQL/8PJ8PrDxB9os4K/0smH8gazqiFCx9pjxB9pwo/8h2DIuhT8Q6ecIsivoC8Q8IH2ApesyRqQjOfUcJ8ASQMEdILyCw4EsuuRbwQWm1PYC6OjLwTlwsWM7CCIMA4fbnrcdAUEzqbodEMDD3U+w8QPaVEYYKMBAAZWDApbl54GNH9BGwgFllw/jB1QhISraVtsAP6CKy0IxfiRF8p0+kO/bsFhMl4rdyWK7lRQArJQTxSxFRtldfMeoLDich7e764Z550NKVVeVsn/WTUTd4105YaGctDvp1akeSW2vcvyBOfgDN4c/FVscUQ7uoH+quizKltQVtm5RvJen65huF0lqMCeDOa1M2pV83SXn6qNdgweVeANaFe+2HasZlvTD82f/H2yNJC0=</script> <treescope-run-here><script type=\"application/octet-stream\"> const root = ( Array.from(document.getElementsByClassName( \"treescope_out_c1aa4ff730ed4f5ca5622352409293de\")) .filter((elt) => !elt.dataset['step0']) )[0]; root.dataset['step0'] = 1; root.defns.insertContent( this.parentNode.querySelector('script[type=\"application/octet-stream\"]'), true ); this.parentNode.remove(); </script></treescope-run-here> </div>\n```\n:::\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div style=\"display:none\"> <script type=\"application/octet-stream\" ></script> <treescope-run-here><script type=\"application/octet-stream\"> const root = ( Array.from(document.getElementsByClassName( \"treescope_out_c1aa4ff730ed4f5ca5622352409293de\")) .filter((elt) => !elt.dataset['step1']) )[0]; root.dataset['step1'] = 1; root.defns.insertContent( this.parentNode.querySelector('script[type=\"application/octet-stream\"]'), true ); this.parentNode.remove(); </script></treescope-run-here> </div>\n```\n:::\n:::\n\n\n",
    "supporting": [
      "fl_cnn_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}