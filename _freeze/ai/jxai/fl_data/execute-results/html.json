{
  "hash": "a78e8c6a6edb8e5474ca55d66da18599",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Loading data\naliases:\n  - fl_dataset\n  - /ai/jx/fl_data\nbibliography: fl.bib\ncsl: diabetologia.csl\nauthor:\n  - Marie-Hélène Burle\n  - Code adapted from JAX's [Implement ViT from scratch](https://docs.jaxstack.ai/en/latest/JAX_Vision_transformer.html)\n---\n\n:::{.def}\n\nIn this section, we download the [Food-101 dataset](https://data.vision.ee.ethz.ch/cvl/datasets_extra/food-101/) [@bossard14] that we will later use to train and fine-tune models.\n\n:::\n\n## Context\n\nStep one of a classic deep learning workflow: getting the data. There are several options. In this example, we use [Datasets](https://github.com/huggingface/datasets) from [Hugging Face](https://github.com/huggingface).\n\n```{dot}\n//| echo: false\n//| fig-width: 700px\n\ndigraph {\n\nbgcolor=\"transparent\"\nnode [fontname=\"Inconsolata, sans-serif\", color=gray55, fontsize=\"18pt\"]\nedge [color=gray55]\n\nload [label=\"Load data\", shape=plaintext, group=g1]\nproc [label=\"Process data\", shape=plaintext, group=g1, fontcolor=gray55]\nnn [label=\"Define architecture\", shape=plaintext, group=g1, fontcolor=gray55]\npretr [label=\"Pre-trained model\", shape=plaintext, group=g1, fontcolor=gray55]\nopt [label=\"Hyperparameters\", shape=plaintext, group=g1, fontcolor=gray55]\ntrain [label=\"Train\", shape=plaintext, group=g1, fontcolor=gray55]\ncp [label=\"Checkpoint\", shape=plaintext, group=g1, fontcolor=gray55]\n\npt [label=torchdata, fontcolor=gray55, color=gray55]\ntfds [label=tfds, group=g2, fontcolor=gray55, color=gray55]\ndt [label=datasets, fontcolor=darkorange4, color=darkorange4]\n\ngr [label=grain, fontcolor=gray55, color=gray55]\ntv [label=torchvision, fontcolor=gray55, color=gray55]\n\ntr [label=transformers, fontcolor=gray55, color=gray55]\n\nfl1 [label=flax, group=g2, fontcolor=gray55, color=gray55]\nfl2 [label=flax, group=g2, fontcolor=gray55, color=gray55]\n\noa [label=optax, group=g2, fontcolor=gray55, color=gray55]\n\njx [label=jax, group=g2, fontcolor=gray55, color=gray55]\n\nob [label=orbax, group=g2, fontcolor=gray55, color=gray55]\n\n{rank=same; gr load tv tr}\ngr -> load -> tv -> tr [style=invis]\n\n{rank=same; fl1 proc pretr}\nfl1 -> proc -> pretr [style=invis]\n\n{rank=same; jx fl2 opt}\nfl1 -> proc -> pretr [style=invis]\n\n{pt tfds} -> load [color=gray55]\ndt -> load [color=darkorange4]\n{gr tv} -> proc [color=gray55]\nfl1 -> nn [color=gray55]\npretr -> nn [dir=none]\ntr -> pretr [color=gray55]\noa -> opt [color=gray55]\njx -> fl2 -> train [color=gray55]\nob -> cp [color=gray55]\n\nload -> proc -> nn -> opt -> train -> cp [dir=none]\n\n}\n```\n\n## Load packages\n\nPackages necessary for this section:\n\n::: {#20e05f1a .cell execution_count=1}\n``` {.python .cell-code}\n# to get information about a dataset before downloading it\nfrom datasets import load_dataset_builder\n\n# to load dataset from Hugging Face Hub\nfrom datasets import load_dataset\n\n# to display a few samples\nimport matplotlib.pyplot as plt\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[1]</span><span class=\"ansi-green-fg\">, line 2</span>\n<span class=\"ansi-bright-green-fg\">      1</span> <span style=\"color:rgb(138,138,138)\"># to get information about a dataset before downloading it</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">2</span> <span style=\"color:rgb(255,95,135)\">from</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">datasets</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">import</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">load_dataset_builder</span>\n<span class=\"ansi-bright-green-fg\">      4</span> <span style=\"color:rgb(138,138,138)\"># to load dataset from Hugging Face Hub</span>\n<span class=\"ansi-bright-green-fg\">      5</span> <span style=\"color:rgb(255,95,135)\">from</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">datasets</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">import</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">load_dataset</span>\n\n<span class=\"ansi-bright-red-fg\">ModuleNotFoundError</span>: No module named 'datasets'</pre>\n```\n:::\n\n:::\n:::\n\n\n## Choosing a library\n\nData can be downloaded and processed manually, but many datasets are available via [Hugging Face datasets](https://github.com/huggingface/datasets), [torchvision](https://github.com/pytorch/vision), and [TensorFlow datasets](https://github.com/tensorflow/datasets). Remember that JAX does not implement domain-specific utilities and is not a deep learning library. Flax is a deep learning library, but, because there are already so many good options to load and process data, they did not implement a method of their own.\n\nChoose the library you are the most familiar with, or the one for which you found code somewhere, or the one that seems the easiest to you, or provides the exact functionality that you want for your project.\n\nThe [Food-101](https://data.vision.ee.ethz.ch/cvl/datasets_extra/food-101/) dataset for instance can be accessed with `torchvision.datasets.Food101` since it is [one of TorchVision datasets](https://pytorch.org/vision/main/generated/torchvision.datasets.Food101.html) or with `tfds.image_classification.Food101` since it is also [one of TFDS datasets](https://www.tensorflow.org/datasets/catalog/food101).\n\n[It is also](https://huggingface.co/datasets/ethz/food101) in the [Hugging Face Hub](https://huggingface.co/datasets) and that's the method that we will use here.\n\n## Hugging Face datasets\n\nThe [Datasets](https://github.com/huggingface/datasets) library from [Hugging Face](https://github.com/huggingface) is a lightweight, framework-agnostic, and easy to use API to download datasets from the [Hugging Face Hub](https://huggingface.co/datasets). It uses [Apache Arrow](https://arrow.apache.org/)'s efficient caching system, allowing large datasets to be used on machines with small memory [@lhoest-etal-2021-datasets].\n\n### Search dataset\n\nGo to the [Hugging Face Hub](https://huggingface.co/datasets) and search through thousands of open source datasets provided by the community.\n\n### Inspect dataset\n\nYou can get information on a dataset before downloading it.\n\nLoad the dataset builder for the dataset you are interested in:\n\n::: {#15e8ac64 .cell execution_count=2}\n``` {.python .cell-code}\nds_builder = load_dataset_builder(\"food101\")\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[2]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">ds_builder</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">load_dataset_builder</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">food101</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'load_dataset_builder' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nGet a description of the dataset (if it exists—here it doesn't):\n\n::: {#c3b366be .cell execution_count=3}\n``` {.python .cell-code}\nds_builder.info.description\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[3]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">ds_builder</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">info</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">description</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'ds_builder' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nGet information on the features:\n\n::: {#ec9e141c .cell execution_count=4}\n``` {.python .cell-code}\nds_builder.info.features\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[4]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">ds_builder</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">info</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">features</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'ds_builder' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n### Download dataset\n\nWe will only use the first 5 classes of food (instead of 101) to test our code. To prevent us from all downloading the data (by default in `~/.cache/huggingface`), we will use a joint cache directory at `/project/60055/data`.\n\n```{.python}\ntrain_size = 5 * 750\nval_size = 5 * 250\n\ntrain_dataset = load_dataset(\"food101\",\n                             split=f\"train[:{train_size}]\",\n                             cache_dir=\"/project/60055/data\")\n\nval_dataset = load_dataset(\"food101\",\n                           split=f\"validation[:{val_size}]\",\n                           cache_dir=\"/project/60055/data\")\n```\n\n::: {#603aa8df .cell execution_count=5}\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[5]</span><span class=\"ansi-green-fg\">, line 4</span>\n<span class=\"ansi-bright-green-fg\">      1</span> <span class=\"ansi-bright-white-fg\">train_size</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,135,255)\">5</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">*</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,135,255)\">750</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span class=\"ansi-bright-white-fg\">val_size</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,135,255)\">5</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">*</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,135,255)\">250</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">4</span> <span class=\"ansi-bright-white-fg\">train_dataset</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">load_dataset</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">food101</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">      5</span> <span class=\"ansi-bright-white-fg\">                             </span><span class=\"ansi-bright-white-fg\">split</span><span style=\"color:rgb(255,95,135)\">=</span><span style=\"color:rgb(215,215,135)\">f</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">train[:</span><span style=\"color:rgb(215,215,135)\">{</span><span class=\"ansi-bright-white-fg\">train_size</span><span style=\"color:rgb(215,215,135)\">}</span><span style=\"color:rgb(215,215,135)\">]</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">      7</span> <span class=\"ansi-bright-white-fg\">val_dataset</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">load_dataset</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">food101</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">      8</span> <span class=\"ansi-bright-white-fg\">                           </span><span class=\"ansi-bright-white-fg\">split</span><span style=\"color:rgb(255,95,135)\">=</span><span style=\"color:rgb(215,215,135)\">f</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">validation[:</span><span style=\"color:rgb(215,215,135)\">{</span><span class=\"ansi-bright-white-fg\">val_size</span><span style=\"color:rgb(215,215,135)\">}</span><span style=\"color:rgb(215,215,135)\">]</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'load_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Explore data\n\nLet's inspect our data:\n\n::: {#1f20e073 .cell execution_count=6}\n``` {.python .cell-code}\nprint(\"Training set size:\", len(train_dataset))\nprint(\"Validation set size:\", len(val_dataset))\nprint(\"Training set shape:\", train_dataset.shape)\nprint(\"Validation set shape:\", val_dataset.shape)\nprint(\"First item of training set:\", train_dataset[0])\nprint(\"Firt image of training set:\", train_dataset[0][\"image\"])\nprint(\"First label of training set:\", train_dataset[0][\"label\"])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[6]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">Training set size:</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">len</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">train_dataset</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">Validation set size:</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">len</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">val_dataset</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">      3</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">Training set shape:</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">train_dataset</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">shape</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'train_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nHere is the beginning of the list of foods:\n\n::: {#6efe4667 .cell execution_count=7}\n``` {.python .cell-code}\nprint(train_dataset.features[\"label\"].names[:5])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[7]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">train_dataset</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">features</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">label</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">]</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">names</span><span class=\"ansi-bright-white-fg\">[</span><span class=\"ansi-bright-white-fg\">:</span><span style=\"color:rgb(175,135,255)\">5</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'train_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nAnd here is the food of the first item in the training set (label `6`):\n\n::: {#f90d7822 .cell execution_count=8}\n``` {.python .cell-code}\nprint(\"First food of training set:\", train_dataset.features[\"label\"].names[6])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[8]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">First food of training set:</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">train_dataset</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">features</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">label</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">]</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">names</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">6</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'train_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nTo make this simpler, we can create a mapping of the labels matching their order:\n\n::: {#9e777b38 .cell execution_count=9}\n``` {.python .cell-code}\nlabels_mapping = {}\nindex = 0\nfor i in range(0, len(val_dataset), 250):\n    label = val_dataset[i][\"label\"]\n    if label not in labels_mapping:\n        labels_mapping[label] = index\n        index += 1\n\ninv_labels_mapping = {v: k for k, v in labels_mapping.items()}\n\nprint(inv_labels_mapping)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[9]</span><span class=\"ansi-green-fg\">, line 3</span>\n<span class=\"ansi-bright-green-fg\">      1</span> <span class=\"ansi-bright-white-fg\">labels_mapping</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">{</span><span class=\"ansi-bright-white-fg\">}</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span class=\"ansi-bright-white-fg\">index</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,135,255)\">0</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">3</span> <span style=\"color:rgb(95,215,255)\">for</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">i</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">in</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">range</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(175,135,255)\">0</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">len</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">val_dataset</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,135,255)\">250</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">      4</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">label</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">val_dataset</span><span class=\"ansi-bright-white-fg\">[</span><span class=\"ansi-bright-white-fg\">i</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">label</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">]</span>\n<span class=\"ansi-bright-green-fg\">      5</span> <span class=\"ansi-bright-white-fg\">    </span><span style=\"color:rgb(95,215,255)\">if</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">label</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">not</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">in</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">labels_mapping</span><span class=\"ansi-bright-white-fg\">:</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'val_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nAnd a mapping of the names:\n\n::: {#1200d7f6 .cell execution_count=10}\n``` {.python .cell-code}\nnames_map={k: train_dataset.features[\"label\"].names[v] for k, v in inv_labels_mapping.items()}\nprint(names_map)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[10]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">names_map</span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\">{</span><span class=\"ansi-bright-white-fg\">k</span><span class=\"ansi-bright-white-fg\">:</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">train_dataset</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">features</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">label</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">]</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">names</span><span class=\"ansi-bright-white-fg\">[</span><span class=\"ansi-bright-white-fg\">v</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(95,215,255)\">for</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">k</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">v</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">in</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">inv_labels_mapping</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">items</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">)</span><span class=\"ansi-bright-white-fg\">}</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">names_map</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'inv_labels_mapping' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nNow, to get the food of the first item, we just have to do:\n\n::: {#f137968d .cell execution_count=11}\n``` {.python .cell-code}\nprint(names_map[0])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[11]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">names_map</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">0</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'names_map' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nHere is a function to display some samples (their images, label, and food type):\n\n::: {#560e3127 .cell execution_count=12}\n``` {.python .cell-code}\ndef display_datapoints(*datapoints, tag=\"\", names_map=None):\n    num_samples = len(datapoints)\n\n    fig, axs = plt.subplots(1, num_samples, figsize=(20, 10))\n    for i, datapoint in enumerate(datapoints):\n        if isinstance(datapoint, dict):\n            img, label = datapoint[\"image\"], datapoint[\"label\"]\n        else:\n            img, label = datapoint\n\n        if hasattr(img, \"dtype\") and img.dtype in (np.float32, ):\n            img = ((img - img.min()) / (img.max() - img.min()) * 255.0).astype(np.uint8)\n\n        label_str = f\" ({names_map[label]})\" if names_map is not None else \"\"\n        axs[i].set_title(f\"{tag} Label: {label}{label_str}\")\n        axs[i].imshow(img)\n```\n:::\n\n\nLet's display the first 3 items (images and labels) of both the training and validation sets:\n\n::: {#87d715b1 .cell execution_count=13}\n``` {.python .cell-code}\ndisplay_datapoints(\n    train_dataset[0],\n    train_dataset[1],\n    train_dataset[2],\n    tag=\"(Training)\",\n    names_map=train_dataset.features[\"label\"].names,\n)\n\ndisplay_datapoints(\n    val_dataset[0],\n    val_dataset[1],\n    val_dataset[2],\n    tag=\"(Validation)\",\n    names_map=val_dataset.features[\"label\"].names,\n)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[13]</span><span class=\"ansi-green-fg\">, line 2</span>\n<span class=\"ansi-bright-green-fg\">      1</span> <span class=\"ansi-bright-white-fg\">display_datapoints</span><span class=\"ansi-bright-white-fg\">(</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">2</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">train_dataset</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">0</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">      3</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">train_dataset</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">1</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">      4</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">train_dataset</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">2</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">      5</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">tag</span><span style=\"color:rgb(255,95,135)\">=</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">(Training)</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">      6</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">names_map</span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\">train_dataset</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">features</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">label</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">]</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">names</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">      7</span> <span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">      9</span> <span class=\"ansi-bright-white-fg\">display_datapoints</span><span class=\"ansi-bright-white-fg\">(</span>\n<span class=\"ansi-bright-green-fg\">     10</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">val_dataset</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">0</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">     11</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">val_dataset</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">1</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">   (...)</span><span class=\"ansi-bright-green-fg\">     14</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">names_map</span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\">val_dataset</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">features</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">label</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">]</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">names</span><span class=\"ansi-bright-white-fg\">,</span>\n<span class=\"ansi-bright-green-fg\">     15</span> <span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'train_dataset' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "fl_data_files"
    ],
    "filters": [],
    "includes": {}
  }
}