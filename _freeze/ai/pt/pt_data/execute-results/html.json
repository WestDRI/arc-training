{
  "hash": "27590ecac549949d2debf9c93a8d3caf",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Loading data\nauthor: Marie-Hélène Burle\n---\n\n\n:::{.def}\n\n\n\n:::\n\n::: {#0480adcf .cell execution_count=1}\n``` {.python .cell-code}\nimport torch\nimport torchvision\nimport torchvision.transforms as transforms\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg ansi-bold\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg ansi-bold\">ModuleNotFoundError</span>                       Traceback (most recent call last)\nCell <span class=\"ansi-green-fg ansi-bold\">In[1], line 1</span>\n<span class=\"ansi-green-fg ansi-bold\">----&gt; 1</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torch</span>\n<span class=\"ansi-green-fg\">      2</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torchvision</span>\n<span class=\"ansi-green-fg\">      3</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">import</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">torchvision</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">.</span><span style=\"font-weight:bold;color:rgb(0,0,255)\">transforms</span> <span style=\"font-weight:bold;color:rgb(0,135,0)\">as</span> <span style=\"font-weight:bold;color:rgb(0,0,255)\">transforms</span>\n\n<span class=\"ansi-red-fg ansi-bold\">ModuleNotFoundError</span>: No module named 'torch'</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#6dc0728e .cell execution_count=2}\n``` {.python .cell-code}\ntransform = transforms.Compose(\n    [transforms.ToTensor(),\n     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n\nbatch_size = 4\n\ntrainset = torchvision.datasets.CIFAR10(root='./data', train=True,\n                                        download=True, transform=transform)\ntrainloader = torch.utils.data.DataLoader(trainset, batch_size=batch_size,\n                                          shuffle=True, num_workers=2)\n\ntestset = torchvision.datasets.CIFAR10(root='./data', train=False,\n                                       download=True, transform=transform)\ntestloader = torch.utils.data.DataLoader(testset, batch_size=batch_size,\n                                         shuffle=False, num_workers=2)\n\nclasses = ('plane', 'car', 'bird', 'cat',\n           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg ansi-bold\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg ansi-bold\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg ansi-bold\">In[2], line 1</span>\n<span class=\"ansi-green-fg ansi-bold\">----&gt; 1</span> transform <span style=\"color:rgb(98,98,98)\">=</span> <span class=\"ansi-red-bg\">transforms</span><span style=\"color:rgb(98,98,98)\">.</span>Compose(\n<span class=\"ansi-green-fg\">      2</span>     [transforms<span style=\"color:rgb(98,98,98)\">.</span>ToTensor(),\n<span class=\"ansi-green-fg\">      3</span>      transforms<span style=\"color:rgb(98,98,98)\">.</span>Normalize((<span style=\"color:rgb(98,98,98)\">0.5</span>, <span style=\"color:rgb(98,98,98)\">0.5</span>, <span style=\"color:rgb(98,98,98)\">0.5</span>), (<span style=\"color:rgb(98,98,98)\">0.5</span>, <span style=\"color:rgb(98,98,98)\">0.5</span>, <span style=\"color:rgb(98,98,98)\">0.5</span>))])\n<span class=\"ansi-green-fg\">      5</span> batch_size <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(98,98,98)\">4</span>\n<span class=\"ansi-green-fg\">      7</span> trainset <span style=\"color:rgb(98,98,98)\">=</span> torchvision<span style=\"color:rgb(98,98,98)\">.</span>datasets<span style=\"color:rgb(98,98,98)\">.</span>CIFAR10(root<span style=\"color:rgb(98,98,98)\">=</span><span style=\"color:rgb(175,0,0)\">'</span><span style=\"color:rgb(175,0,0)\">./data</span><span style=\"color:rgb(175,0,0)\">'</span>, train<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>,\n<span class=\"ansi-green-fg\">      8</span>                                         download<span style=\"color:rgb(98,98,98)\">=</span><span style=\"font-weight:bold;color:rgb(0,135,0)\">True</span>, transform<span style=\"color:rgb(98,98,98)\">=</span>transform)\n\n<span class=\"ansi-red-fg ansi-bold\">NameError</span>: name 'transforms' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#95c63717 .cell execution_count=3}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# functions to show an image\n\n\ndef imshow(img):\n    img = img / 2 + 0.5     # unnormalize\n    npimg = img.numpy()\n    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n    plt.show()\n\n\n# get some random training images\ndataiter = iter(trainloader)\nimages, labels = next(dataiter)\n\n# show images\nimshow(torchvision.utils.make_grid(images))\n# print labels\nprint(' '.join(f'{classes[labels[j]]:5s}' for j in range(batch_size)))\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-red-fg ansi-bold\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-red-fg ansi-bold\">NameError</span>                                 Traceback (most recent call last)\nCell <span class=\"ansi-green-fg ansi-bold\">In[3], line 15</span>\n<span class=\"ansi-green-fg\">     11</span>     plt<span style=\"color:rgb(98,98,98)\">.</span>show()\n<span class=\"ansi-green-fg\">     14</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># get some random training images</span>\n<span class=\"ansi-green-fg ansi-bold\">---&gt; 15</span> dataiter <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">iter</span>(<span class=\"ansi-red-bg\">trainloader</span>)\n<span class=\"ansi-green-fg\">     16</span> images, labels <span style=\"color:rgb(98,98,98)\">=</span> <span style=\"color:rgb(0,135,0)\">next</span>(dataiter)\n<span class=\"ansi-green-fg\">     18</span> <span style=\"font-style:italic;color:rgb(95,135,135)\"># show images</span>\n\n<span class=\"ansi-red-fg ansi-bold\">NameError</span>: name 'trainloader' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Creating a DataLoader\n\nA `DataLoader` is an iterable feeding data to a model. When we train a model, we run it for each element of the DataLoader in a for loop:\n\n```{.python}\nfor i in data_loader:\n    <some model>\n```\n\n",
    "supporting": [
      "pt_data_files"
    ],
    "filters": [],
    "includes": {}
  }
}