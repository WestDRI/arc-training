{
  "hash": "413599e65eec5c0a5ba2fbb14c320b3d",
  "result": {
    "markdown": "---\ntitle: \"Bash: the basics\"\nauthor: Marie-Hélène Burle\n---\n\n::: {.cell hash='basics_cache/html/unnamed-chunk-1_bb0e1ec90b3a8dd6539a0e55a5773bfd'}\n\n:::\n\n\n:::{.def}\n\nWhat does it feel like to work in a shell? Here is a first basic orientation.\n\n:::\n\n## The prompt\n\nIn command-line interfaces, a command prompt is a sequence of characters indicating that the interpreter is ready to accept input. It can also provide some information (e.g. time, error types, username and hostname, etc.)\n\nThe Bash prompt is customizable. By default, it often gives the username and the hostname, and it typically ends with `$`.\n\n## Commands\n\nBash comes with a number of commands: directives to the shell to perform particular tasks.\n\n:::{.example}\n\nExamples of commands:\n\n:::\n\n- Print working directory: `pwd`\n- Change directory: `cd`\n- Print: `echo`\n- Print content of a file: `cat`\n- List files and directories in working directory: `ls`\n- Copy: `cp`\n- Move or rename: `mv`\n- Create a new directory: `mkdir`\n- Create a new file: `touch`\n\n### Command options\n\nCommands come with a number of flags (options).\n\n:::{.example}\n\nExamples of flags for the `ls` command:\n\n:::\n\n- List *all* files and directories (not ignoring hidden files): `ls -a`\n- List files and directories in a long format: `ls -l`\n- List files and directories in a human readable format (using units such as K, M, G): `ls -h`\n\nFlags can be combined. The order doesn't matter and the followings are all the same:\n\n- `ls -alh`\n- `ls -a -l -h`\n- `ls -ahl`\n- `ls -l -ha`\n- ...\n\n### Help on commands\n\nThe command `man` provides an interface to the system reference manuals.\n\nTo access the manual page of a command, you thus can type:\n\n```{.bash}\nman <command>\n```\n\n:::{.hnote}\n\nMan pages open in a pager (usually [less](https://en.wikipedia.org/wiki/Less_(Unix))). Here are some usual key bindings to navigate the pager:\n\n- You can scroll down with the space bar and back up with the `b` (for \"back\") key.\n- Go to the top of the document with the `g` (for \"go\") key. `G` will send you to the end of the document and `7g` will send you to line `7` (of course, this works with any number).\n- To search for a term, press `/` followed by the term, then enter. You can then find subsequent/previous results with the `n` (for \"next\") and `N` keys.\n- Quit the pager with the `q` (for \"quit\") key.\n\n:::\n\n:::{.exo}\n\n:::{.yourturn}\n\nYour turn:\n\n:::\n\n- Open the man page for the `ls` command.\n- Navigate down a few pages, then navigate back up.\n- Search for the first 5 occurrences of the word \"directory\".\n- Finally, leave the pager.\n\n:::\n\nHelp pages can be accessed with:\n\n```{.bash}\n<command> --help\n```\n\n:::{.exo}\n\n:::{.yourturn}\n\nYour turn:\n\n:::\n\nAccess the help of the `ls` command.\n\n:::\n\nTo know the nature of a command (e.g. shell built-in function, an [alias](aliases.qmd) that you created, or the path of an utility) run:\n\n```{.bash}\ncommand -V <command>\n```\n\n:::{.exo}\n\n:::{.yourturn}\n\nYour turn:\n\n:::\n\nWhat is the nature of the `pwd` command?\n\n:::\n\n## Keybindings\n\nClear the terminal (command `clear`) with `C-l` (this means: press the `Ctrl` and `L` keys at the same time).\n\nNavigate command history with `C-p` and `C-n` (or up and down arrows).\n\nYou can auto-complete commands by pressing the `tab` key.\n\n## Comments\n\nAnything to the left of `#` is ignored by the interpreter and is for human consumption only.\n\n```{.bash}\n# You can write full-line comments\n\npwd\t\t  # You can also write comments after commands\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}