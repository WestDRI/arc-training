{
  "hash": "f167e3a1ac90b412e3b0209fed66864f",
  "result": {
    "markdown": "---\ntitle: Introduction\nauthor: Marie-Hélène Burle\n---\n\n::: {.cell hash='introduction_cache/html/unnamed-chunk-1_01915df94715d4ac0d49dea6dcb9a0e7'}\n\n:::\n\n\n:::{.def}\n\nThis section will explain what Bash is and why it is useful to know how to use it.\n\n:::\n\n## Unix shells\n\nBash is a Unix shell. What are they?\n\nUnix shells are command line interpreters: the user enters commands as text—interactively in the command line or in scripts—and the shell passes them to the operating system.\n\n### Types of Unix shells\n\n[Bash (<em>Bourne Again SHell</em>)](https://en.wikipedia.org/wiki/Bash_(Unix_shell))—released in 1989—is part of the GNU Project and is the default Unix shell on many systems (although MacOS recently changed its default to [Zsh](https://en.wikipedia.org/wiki/Z_shell)).\n\nPrior to Bash, the default was the [Bourne shell (sh)](https://en.wikipedia.org/wiki/Bourne_shell).\n\nA new and popular shell (backward compatible with Bash) is [Zsh](https://en.wikipedia.org/wiki/Z_shell). It extends Bash's capabilities.\n\nAnother shell in the same family is the [KornShell (ksh)](https://en.wikipedia.org/wiki/KornShell).\n\nAll these shells are quite similar. The [C shell (csh)](https://en.wikipedia.org/wiki/C_shell) however was modeled on the C programming language.\n\nBash is the most common shell and the one which makes the most sense to learn as a first Unix shell. It is also the one used by default on the Alliance clusters.\n\n## Why use a shell?\n\nWhile automating GUI operations is really difficult, it is easy to rerun a script (a file with a number of commands). Unix shells thus allow the creation of reproducible workflows and the automation of repetitive tasks.\n\nThey are powerful to launch tools, modify files, search text, or combine commands.\n\nThey also allow to work on remote machines and HPC systems.\n\n## Running Bash\n\nSince Bash is a Unix shell, you need a Unix or Unix-like operating system. This means that people on Linux or MacOS can use Bash on their machine, but it is more problematic for Windows users. On Windows, there are various options:\n\n- Using [Windows Subsystem for Linux (WSL)](https://en.wikipedia.org/wiki/Windows_Subsystem_for_Linux)\n- Using a Bash emulator (e.g. [Git BASH](https://gitforwindows.org/)), but those only have a subset of the usual Bash utilities\n- Using a Unix-like environment for Windows (e.g. [Cygwin](https://en.wikipedia.org/wiki/Cygwin))\n- Using a Unix [Virtual machine](https://en.wikipedia.org/wiki/Virtual_machine)\n\n### How we will use Bash today\n\nToday, we will connect to a remote HPC system via SSH (secure shell). HPC systems always run Linux.\n\nThose on Linux or MacOS can alternatively use Bash directly on their machine.\n\n:::{.note}\n\nOn MacOS, the default is now [Zsh](https://en.wikipedia.org/wiki/Z_shell) (you can see that by typing `echo $SHELL` in Terminal), but Zsh is fully compatible with Bash commands, so it is totally fine to use it instead. If you really want to use Bash, simply launch it by typing in Terminal: `bash`.\n\n:::\n\n## Connecting to a remote HPC system via SSH\n\n### Usernames and password\n\nWe will give you a link to an etherpad during the workshop. Add your name next to a free username to claim it.\n\nWe will also give you the password for our training cluster. When prompted, enter it.\n\n:::{.note}\n\nNote that you will not see any character as you type the password: this is called blind typing and is a Linux safety feature. Type slowly and make sure not to make typos. It can be unsettling at first not to get any feed-back while typing.\n\n:::\n\n### Linux and MacOS users\n\nLinux users: open the terminal emulator of your choice.\\\nMacOS users: open \"Terminal\".\n\nThen type:\n\n```{.bash}\nssh userxx@bashworkshop.c3.ca\n```\n\n:::{.note}\n\nReplace `userxx` by your username (e.g. `user09`).\n\n:::\n\n### Windows users\n\nWe suggest using [the free version of MobaXterm.](https://mobaxterm.mobatek.net/download.html)\n\nMobaXterm comes with a terminal emulator and a GUI interface for SSH sessions.\n\nOpen MobaXterm, click on \"Session\", then \"SSH\", and fill in the Remote host name and your username. [Here](https://mobaxterm.mobatek.net/demo.html) is a live demo.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}