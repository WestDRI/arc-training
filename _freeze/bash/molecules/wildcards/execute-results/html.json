{
  "hash": "a07b1f76e453824d769882d3daf40241",
  "result": {
    "markdown": "---\ntitle: Wildcards\nauthor: Marie-Hélène Burle\n---\n\n::: {.cell hash='wildcards_cache/html/unnamed-chunk-1_a7e80295225003f041ffe6acc57fccb6'}\n\n:::\n\n\n:::{.def}\n\nWildcards are a convenient way to select items matching patterns.\n\n:::\n\n:::{.callout collapse=\"true\"}\n\n## ***Data for this section***\n\nFor this section, we will play with files created by [The Carpentries](https://carpentries.org/).\n\nYou can download them into a zip file called `bash.zip` with:\n\n```{.bash}\nwget http://bit.ly/bashfile -O bash.zip\n```\n\nYou can then unzip that file with:\n\n```{.bash}\nunzip bash.zip\n```\n\nFinally, you can delete the zip file:\n\n```{.bash}\nrm bash.zip\n```\n\nYou should now have a `data-shell` directory with a `molecules` subdirectory.\n\n`cd` into it:\n\n```{.bash}\ncd data-shell/molecules\n```\n\n:::\n\nLet's explore the molecules data:\n\n```{.bash}\nls\n```\n\n```\ncubane.pdb\nethane.pdb\nmethane.pdb\noctane.pdb\npentane.pdb\npropane.pdb\n```\n\n\n::: {.cell hash='wildcards_cache/html/unnamed-chunk-2_b0980d7f182cc11ebc5f0b0d9cd04daa'}\n\n```{.bash .cell-code}\nls p*        # This wildcard gets expanded to any file starting with p\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\npentane.pdb\npropane.pdb\n```\n:::\n:::\n\n::: {.cell hash='wildcards_cache/html/unnamed-chunk-3_53cbd5352bad70213deac959e75673d8'}\n\n```{.bash .cell-code}\nls *.pdb     # This wildcard gets expanded to any .pdb file\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\ncubane.pdb\nethane.pdb\nmethane.pdb\noctane.pdb\npentane.pdb\npropane.pdb\n```\n:::\n:::\n\n::: {.cell hash='wildcards_cache/html/unnamed-chunk-4_c8eacf0af798588728637ed9a5ed2056'}\n\n```{.bash .cell-code}\nwc -l *.pdb  # Prints the number of lines in each .pdb file\n```\n\n\n::: {.cell-output .cell-output-stdout}\n```\n  20 cubane.pdb\n  12 ethane.pdb\n   9 methane.pdb\n  30 octane.pdb\n  21 pentane.pdb\n  15 propane.pdb\n 107 total\n```\n:::\n:::\n\n\nWildcards are really powerful to apply a command to all the elements having a common pattern.\n\nFor instance, we can delete all the files we created earlier (`file1.sh`, `file2.sh`, etc.) with a single command:\n\n```{.bash}\nrm file*.sh\n```\n\n[Be very careful that `rm` is irreversible. Deleted files do not go to the trash: they are gone.]{.emph}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}