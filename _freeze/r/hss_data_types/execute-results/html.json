{
  "hash": "fd65e0998c4d933badb811fa99509045",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Data types and structures\nauthor: Marie-Hélène Burle\n---\n\n:::{.def}\n\nIt might be time to talk a bit more formally about the various data types and structures available in R. The goal of this course is not to get bogged down in the nitty-gritty of R syntax, so this section is kept very short.\n\n:::\n\n## Data types\n\n::: {.cell}\n\n```{.r .cell-code}\ntypeof(\"Some words\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"character\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"double\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(2.0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"double\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(2L)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"integer\"\n```\n\n\n:::\n\n```{.r .cell-code}\ntypeof(TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"logical\"\n```\n\n\n:::\n:::\n\n## Data structures\n\n| Dimension | Homogeneous   | Heterogeneous  |\n|-----------|---------------|----------------|\n| 1 d       | Atomic vector | List           |\n| 2 d       | Matrix        | Data frame     |\n| 3 d       | Array         |                |\n\n### Atomic vectors\n\n::: {.cell}\n\n```{.r .cell-code}\nc(2, 4, 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2 4 1\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(c(2, 4, 1))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n num [1:3] 2 4 1\n```\n\n\n:::\n\n```{.r .cell-code}\nc(2.2, 4.4, 1.0)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2.2 4.4 1.0\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(c(2.2, 4.4, 1.0))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n num [1:3] 2.2 4.4 1\n```\n\n\n:::\n\n```{.r .cell-code}\n1:3\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 1 2 3\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(1:3)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n int [1:3] 1 2 3\n```\n\n\n:::\n\n```{.r .cell-code}\nc(\"some\", \"random\", \"words\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"some\"   \"random\" \"words\" \n```\n\n\n:::\n\n```{.r .cell-code}\nstr(c(\"some\", \"random\", \"words\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n chr [1:3] \"some\" \"random\" \"words\"\n```\n\n\n:::\n:::\n\n### Matrices\n\n::: {.cell}\n\n```{.r .cell-code}\nm <- matrix(1:12, nrow = 3, ncol = 4)\nm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     [,1] [,2] [,3] [,4]\n[1,]    1    4    7   10\n[2,]    2    5    8   11\n[3,]    3    6    9   12\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(m)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n int [1:3, 1:4] 1 2 3 4 5 6 7 8 9 10 ...\n```\n\n\n:::\n:::\n\n### Arrays\n\n::: {.cell}\n\n```{.r .cell-code}\na <- array(as.double(1:24), c(3, 2, 4))\na\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n, , 1\n\n     [,1] [,2]\n[1,]    1    4\n[2,]    2    5\n[3,]    3    6\n\n, , 2\n\n     [,1] [,2]\n[1,]    7   10\n[2,]    8   11\n[3,]    9   12\n\n, , 3\n\n     [,1] [,2]\n[1,]   13   16\n[2,]   14   17\n[3,]   15   18\n\n, , 4\n\n     [,1] [,2]\n[1,]   19   22\n[2,]   20   23\n[3,]   21   24\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(a)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n num [1:3, 1:2, 1:4] 1 2 3 4 5 6 7 8 9 10 ...\n```\n\n\n:::\n:::\n\n### Lists\n\n::: {.cell}\n\n```{.r .cell-code}\nl <- list(2L, 3, c(2, 1), FALSE, \"string\")\nl\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] 2\n\n[[2]]\n[1] 3\n\n[[3]]\n[1] 2 1\n\n[[4]]\n[1] FALSE\n\n[[5]]\n[1] \"string\"\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(l)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 5\n $ : int 2\n $ : num 3\n $ : num [1:2] 2 1\n $ : logi FALSE\n $ : chr \"string\"\n```\n\n\n:::\n:::\n\n### Data frames\n\n::: {.cell}\n\n```{.r .cell-code}\nd <- data.frame(\n  country = c(\"Canada\", \"USA\", \"Mexico\"),\n  var = c(2.9, 3.1, 4.5)\n)\nd\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  country var\n1  Canada 2.9\n2     USA 3.1\n3  Mexico 4.5\n```\n\n\n:::\n\n```{.r .cell-code}\nstr(d)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t3 obs. of  2 variables:\n $ country: chr  \"Canada\" \"USA\" \"Mexico\"\n $ var    : num  2.9 3.1 4.5\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}