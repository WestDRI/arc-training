{
  "hash": "a5702321509af86119e1497a2d6caec9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Data exploration\nauthor: Marie-Hélène Burle\n---\n\n\n\n\n:::{.def}\n\nAn important first step of data analysis is to have a look at the data. In this section, we will explore the `us_contagious_diseases` dataset from the [dslabs package](https://cran.r-project.org/web/packages/dslabs/index.html).\n\n:::\n\n## Load the dslabs package\n\nThis package contains a number of datasets. To access any of them, we first need to load the package:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dslabs)\n```\n:::\n\n\n\n\n:::{.info}\n\n`library()` is a *function*:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(library)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"function\"\n```\n\n\n:::\n:::\n\n\n\n\nFunctions are the \"verbs\" of programming languages. They do things.\n\n`library()` is a function that loads packages into the current session so that their content becomes available.\n\n`dslabs` is the *argument* that we pass to the function `library()`: it is this particular packages that we are loading in the session here.\n\n`class()` is also a function: it tells what class an object belongs to. In `class(library)`, `library` is the argument of the function `class()`.\n\n:::\n\n## Printing data to screen\n\nTo print all the data, we would simply run `us_contagious_diseases`. There are a lot of rows however, so we only want to print a subset to the screen.\n\nTo print the first six rows, we use the function `head()`, using our data as the argument:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n      disease   state year weeks_reporting count population\n1 Hepatitis A Alabama 1966              50   321    3345787\n2 Hepatitis A Alabama 1967              49   291    3364130\n3 Hepatitis A Alabama 1968              52   314    3386068\n4 Hepatitis A Alabama 1969              49   380    3412450\n5 Hepatitis A Alabama 1970              51   413    3444165\n6 Hepatitis A Alabama 1971              51   378    3481798\n```\n\n\n:::\n:::\n\n\n\n\nIf you look at the documentation of the `head()` function (by running `?head`), you can see that it accepts another argument that allows us to set the number of rows to print.\n\nLet's print the first 15 rows: \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(us_contagious_diseases, n = 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       disease   state year weeks_reporting count population\n1  Hepatitis A Alabama 1966              50   321    3345787\n2  Hepatitis A Alabama 1967              49   291    3364130\n3  Hepatitis A Alabama 1968              52   314    3386068\n4  Hepatitis A Alabama 1969              49   380    3412450\n5  Hepatitis A Alabama 1970              51   413    3444165\n6  Hepatitis A Alabama 1971              51   378    3481798\n7  Hepatitis A Alabama 1972              45   342    3524543\n8  Hepatitis A Alabama 1973              45   467    3571209\n9  Hepatitis A Alabama 1974              45   244    3620548\n10 Hepatitis A Alabama 1975              46   286    3671246\n11 Hepatitis A Alabama 1976              50   220    3721914\n12 Hepatitis A Alabama 1977              43   206    3771085\n13 Hepatitis A Alabama 1978              41   203    3817217\n14 Hepatitis A Alabama 1979              47   257    3858703\n15 Hepatitis A Alabama 1980              37   200    3893888\n```\n\n\n:::\n:::\n\n\n\n\n:::{.info}\n\nBy default, `n = 6` which is why `head()` prints six rows unless we specify otherwise. The `L` in the documentation of the `print()` function (`n = 6L`) means that `6` is an integer. You can ignore this for now.\n\nArguments can be passed to functions as *positional arguments* (then they have to respect the position of the function definition) or as *named arguments* (in that case, you need to use the arguments names).\n\nThat means that iff we keep the arguments in the right order, we can omit the *name* of the argument (`n` here) and only write its *value* (`15`). :\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(us_contagious_diseases, 15)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       disease   state year weeks_reporting count population\n1  Hepatitis A Alabama 1966              50   321    3345787\n2  Hepatitis A Alabama 1967              49   291    3364130\n3  Hepatitis A Alabama 1968              52   314    3386068\n4  Hepatitis A Alabama 1969              49   380    3412450\n5  Hepatitis A Alabama 1970              51   413    3444165\n6  Hepatitis A Alabama 1971              51   378    3481798\n7  Hepatitis A Alabama 1972              45   342    3524543\n8  Hepatitis A Alabama 1973              45   467    3571209\n9  Hepatitis A Alabama 1974              45   244    3620548\n10 Hepatitis A Alabama 1975              46   286    3671246\n11 Hepatitis A Alabama 1976              50   220    3721914\n12 Hepatitis A Alabama 1977              43   206    3771085\n13 Hepatitis A Alabama 1978              41   203    3817217\n14 Hepatitis A Alabama 1979              47   257    3858703\n15 Hepatitis A Alabama 1980              37   200    3893888\n```\n\n\n:::\n:::\n\n\n\n\nIf the arguments are given to the function out of order however, we do need to use their names.\n\nThis won't work because R needs an integer for `n` or for the 2^nd^ argument:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(15, us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in head.default(15, us_contagious_diseases): invalid 'n' - must be numeric, possibly NA.\n```\n\n\n:::\n:::\n\n\n\n\nThis however works:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(n = 15, us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       disease   state year weeks_reporting count population\n1  Hepatitis A Alabama 1966              50   321    3345787\n2  Hepatitis A Alabama 1967              49   291    3364130\n3  Hepatitis A Alabama 1968              52   314    3386068\n4  Hepatitis A Alabama 1969              49   380    3412450\n5  Hepatitis A Alabama 1970              51   413    3444165\n6  Hepatitis A Alabama 1971              51   378    3481798\n7  Hepatitis A Alabama 1972              45   342    3524543\n8  Hepatitis A Alabama 1973              45   467    3571209\n9  Hepatitis A Alabama 1974              45   244    3620548\n10 Hepatitis A Alabama 1975              46   286    3671246\n11 Hepatitis A Alabama 1976              50   220    3721914\n12 Hepatitis A Alabama 1977              43   206    3771085\n13 Hepatitis A Alabama 1978              41   203    3817217\n14 Hepatitis A Alabama 1979              47   257    3858703\n15 Hepatitis A Alabama 1980              37   200    3893888\n```\n\n\n:::\n:::\n\n\n\n\n:::\n\nWe can also print the last 6 rows of the data:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntail(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n       disease   state year weeks_reporting count population\n16060 Smallpox Wyoming 1947              49     1     276297\n16061 Smallpox Wyoming 1948              24     1     280803\n16062 Smallpox Wyoming 1949               0     0     285544\n16063 Smallpox Wyoming 1950               1     2     290529\n16064 Smallpox Wyoming 1951               1     1     295744\n16065 Smallpox Wyoming 1952               1     1     301083\n```\n\n\n:::\n:::\n\n\n\n\n:::{.exo}\n\n:::{.yourturn}\n\nYour turn:\n\n:::\n\nHow would you print the last 10 rows of the data?\n\n:::\n\n## Structure of the data object\n\n`us_contagious_diseases` is an R object containing the dataset, but what kind of object is it?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"data.frame\"\n```\n\n\n:::\n:::\n\n\n\n\n**Our data is in a class of R object called a *data frame***.\n\nWe can get its full structure with:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t16065 obs. of  6 variables:\n $ disease        : Factor w/ 7 levels \"Hepatitis A\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ state          : Factor w/ 51 levels \"Alabama\",\"Alaska\",..: 1 1 1 1 1 1 1 1 1 1 ...\n $ year           : num  1966 1967 1968 1969 1970 ...\n $ weeks_reporting: num  50 49 52 49 51 51 45 45 45 46 ...\n $ count          : num  321 291 314 380 413 378 342 467 244 286 ...\n $ population     : num  3345787 3364130 3386068 3412450 3444165 ...\n```\n\n\n:::\n:::\n\n\n\n\nThe names of the variables can be obtained with:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"disease\"         \"state\"           \"year\"            \"weeks_reporting\"\n[5] \"count\"           \"population\"     \n```\n\n\n:::\n:::\n\n\n\n\nYou can display the data frame in a tabular fashion thanks to:\n\n```{.r}\nView(us_contagious_diseases)\n```\n\n## Dimensions of our data frame\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16065     6\n```\n\n\n:::\n\n```{.r .cell-code}\nncol(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n\n```{.r .cell-code}\nnrow(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16065\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 6\n```\n\n\n:::\n\n```{.r .cell-code}\nlength(us_contagious_diseases$disease)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 16065\n```\n\n\n:::\n:::\n\n\n\n\n## Summary statistics\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(us_contagious_diseases)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        disease            state            year      weeks_reporting\n Hepatitis A:2346   Alabama   :  315   Min.   :1928   Min.   : 0.00  \n Measles    :3825   Alaska    :  315   1st Qu.:1950   1st Qu.:31.00  \n Mumps      :1785   Arizona   :  315   Median :1975   Median :46.00  \n Pertussis  :2856   Arkansas  :  315   Mean   :1971   Mean   :37.38  \n Polio      :2091   California:  315   3rd Qu.:1990   3rd Qu.:50.00  \n Rubella    :1887   Colorado  :  315   Max.   :2011   Max.   :52.00  \n Smallpox   :1275   (Other)   :14175                                 \n     count          population      \n Min.   :     0   Min.   :   86853  \n 1st Qu.:     7   1st Qu.: 1018755  \n Median :    69   Median : 2749249  \n Mean   :  1492   Mean   : 4107584  \n 3rd Qu.:   525   3rd Qu.: 4996229  \n Max.   :132342   Max.   :37607525  \n                  NA's   :214       \n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}