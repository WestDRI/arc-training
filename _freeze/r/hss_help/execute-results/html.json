{
  "hash": "399e6cd549c7178a9c599aa6588777cd",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Help and documentation\nauthor: Marie-Hélène Burle\n---\n\n\n:::{.def}\n\nIn this section, we take our first few steps in R: we will access the R documentation, see how to set R options, and talk about a few concepts.\n\n:::\n\n## Help and documentation\n\nFor some general documentation on R, you can run:\n\n```{.r}\nhelp.start()\n```\n\nTo get help on a function (e.g. `sum`), you can run:\n\n```{.r}\nhelp(sum)\n```\n\nDepending on your settings, this will open a documentation for `sum` in a pager or in your browser.\n\n## R settings\n\nSettings are saved in a `.Rprofile` file. You can edit the file directly in any text editor or from within R.\n\nList all options:\n\n```{.r}\noptions()\n```\n\nReturn the value of a particular option:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngetOption(\"help_type\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"text\"\n```\n\n\n:::\n:::\n\n\nSet an option:\n\n```{.r}\noptions(help_type = \"html\")\n```\n\n## Assignment\n\nR can accept the equal sign (`=`) for assignments, but it is more idiomatic to use the assignment sign (`<-`) whenever you bind a name to a value and to use the equal sign everywhere else.\n\n\n::: {.cell}\n\n```{.r .cell-code}\na <- 3\n```\n:::\n\n\nOnce you have bound a name to a value, you can recall the value with that name:\n\n\n::: {.cell}\n\n```{.r .cell-code}\na  # Note that you do not need to use a print() function in R\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 3\n```\n\n\n:::\n:::\n\n\nYou can remove an object from the environment by deleting its name:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrm(a)\n```\n:::\n\n\nLet's confirm that `a` doesn't exist anymore in the environment:\n\n\n::: {.cell}\n\n```{.r .cell-code}\na\n```\n\n::: {.cell-output .cell-output-error}\n\n```\nError in eval(expr, envir, enclos): object 'a' not found\n```\n\n\n:::\n:::\n\n\nThe garbage collector will take care of deleting the object itself from memory.\n\n## Comments\n\nAnything to the left of `#` is a comment and is ignored by R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# This is an inline comment\n\na <- 3  # This is also a comment\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}