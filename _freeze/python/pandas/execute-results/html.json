{
  "hash": "2b1d6080886eeab4e6e12412616200a1",
  "result": {
    "markdown": "---\ntitle: Introduction to Pandas\nauthor: Marie-Hélène Burle\n---\n\n:::{.def}\n\n[pandas](https://pandas.pydata.org/) is a Python library built to manipulate data frames and time series.\n\n:::\n\nFor this section, we will use the Covid-19 data from the [Johns Hopkins University CSSE repository](https://github.com/CSSEGISandData/COVID-19).\n\nYou can visualize this data in [a dashboard](https://www.arcgis.com/apps/dashboards/bda7594740fd40299423467b48e9ecf6) created by the Johns Hopkins University Center for Systems Science and Engineering.\n\n<!-- I already uploaded the two files we will use onto our JupyterHub. They are at: `/project/def-sponsor00/dhsi/covid_confirmed.csv` and `/project/def-sponsor00/dhsi/covid_dead.csv`. -->\n\nFor reference, [here](https://pandas.pydata.org/docs/user_guide/index.html) is a User Guide to pandas and [here](https://pandas.pydata.org/pandas-docs/stable/reference/index.html) is the full documentation.\n\n## Setup\n\nFirst, we need to load the pandas library and read in the data:\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# Load the pandas library and create a shorter name for it\nimport pandas as pd\n\n# Read in data from a csv file\ncases = pd.read_csv('/project/def-sponsor00/dhsi/covid_confirmed.csv')\n```\n\n::: {.cell-output .cell-output-error}\n```\nFileNotFoundError: [Errno 2] No such file or directory: '/project/def-sponsor00/dhsi/covid_confirmed.csv'\n```\n:::\n:::\n\n\n## First look at the data\n\nWhat does our data look like?\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Print the data\ncases   # When not using Jupyter, you must use: print(cases)\n\n# Look at the first rows\ncases.head()\ncases.head(25)\n\n# And the last rows\ncases.tail()\n\n# Names of rows and columns\ncases.index\ncases.columns\n\n# Quick summary of the data\ncases.describe()\n\n# Data types of the various columns\ncases.dtypes\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'cases' is not defined\n```\n:::\n:::\n\n\n## Number of cases per country by decreasing order for any date\n\nLet's see what the numbers were for each country on June 12, 2021. To make it easier to read, let's also order those numbers by decreasing order:\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\n# Let's get rid of the latitude and longitude to simplify our data\nsimple = cases.drop(columns=['Lat', 'Long'])\nsimple\n\n# Some countries are split between several provinces or states (e.g. Australia)\n# Let's select only the data for Australia to show this\n# → We want all the rows for which the Country/Region column is equal to Australia\n\n# First, we want to select the Country/Region column\n# There are several ways to index in pandas. This is one option\nsimple['Country/Region']\n\n# This is another way to index a column in pandas\nsimple.loc[:, 'Country/Region']\n\n# Then we need a conditional (that variable is equal to Australia)\nsimple.loc[:, 'Country/Region'] == 'Australia'\n\n# Finally, we index, out of our entire data frame,\n# the rows for which that condition returns true\nsimple[simple.loc[:, 'Country/Region'] == 'Australia']\n\n# Let's make the sum per countries for all the dates\n# We need to group the rows by countries, then make the sum\ntotals = simple.groupby('Country/Region').sum()\ntotals\n\n# Now, we can look at the totals for any date\ntotals['6/12/21']\n\n# And with an alternative indexing method\ntotals.loc[:, '6/12/21']\n\n# And we can order them by decreasing values\ntotals.loc[:, '6/12/21'].sort_values(ascending=False)\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'cases' is not defined\n```\n:::\n:::\n\n\n## Number of cases for one country at all the dates\n\nNow, let's focus on a single country and extract the time series of confirmed cases for that country.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# Our variable totals can be used directly for this too\n# Here, we index a row instead of a column\ntotals.loc['Albania']\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'totals' is not defined\n```\n:::\n:::\n\n\n## Global totals\n\nNow, what if we want to have the world totals for each day?\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\n# Calculate the columns totals\ntotals.sum()\n```\n\n::: {.cell-output .cell-output-error}\n```\nNameError: name 'totals' is not defined\n```\n:::\n:::\n\n\n:::{.exo}\n\n:::{.yourturn}\n\nYour turn:\n\n:::\n\nTry to work together to answer the following question. \\\nHelp each other out and make it a team effort!</em>\n\nHow many people had **died** from Covid-19 in Venezuela by March 10, 2021? \\\n(according to the available data)\n\n:::\n\nSolution:\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\n# First, you need to load the proper data file\ndead = pd.read_csv('/project/def-sponsor00/dhsi/covid_dead.csv')\ndead\n\n# Then, you need to select the data for Venezuela\n# You can index in one of two methods\nvenez = dead[dead['Country/Region'] == 'Venezuela']\nvenez = dead[dead.loc[:, 'Country/Region'] == 'Venezuela']\nvenez\n\n# If you knew the index for Venezuela,\n# you could also index this way\ndead.loc[270]\n\n# Finally, you need to select for the proper date\nanswer = venez['3/10/21']\nanswer = venez.loc[:, '3/10/21']\nanswer\n```\n\n::: {.cell-output .cell-output-error}\n```\nFileNotFoundError: [Errno 2] No such file or directory: '/project/def-sponsor00/dhsi/covid_dead.csv'\n```\n:::\n:::\n\n\n",
    "supporting": [
      "pandas_files"
    ],
    "filters": [],
    "includes": {}
  }
}