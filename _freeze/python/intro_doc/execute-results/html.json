{
  "hash": "a7a94fb49b5deaddb7b385ab843c4787",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Help and documentation\nauthor: Marie-Hélène Burle\n---\n\n:::{.def}\n\n\n\n:::\n\n## Help and documentation\n\n### Module\n\nYou can get help on a module thanks to the `help` function, but only after you have loaded that module into your session:\n\n```{.python}\nimport os\nhelp(os)\n```\n\n```\nHelp on module os:\n\nNAME\n    os - OS routines for NT or Posix depending on what system we're on.\n\nMODULE REFERENCE\n    https://docs.python.org/3.10/library/os.html\n\n    The following documentation is automatically generated from the Python\n    source files.  It may be incomplete, incorrect or include features that\n    are considered implementation detail and may vary between Python\n    implementations.  When in doubt, consult the module reference at the\n    location listed above.\n\t\n...\t\n```\n\n### Functions\n\nYou can also access the internal Python documentation on a function with `help`:\n\n::: {#783aa775 .cell execution_count=2}\n``` {.python .cell-code}\nhelp(max)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHelp on built-in function max in module builtins:\n\nmax(...)\n    max(iterable, *[, default=obj, key=func]) -> value\n    max(arg1, arg2, *args, *[, key=func]) -> value\n\n    With a single iterable argument, return its biggest item. The\n    default keyword-only argument specifies an object to return if\n    the provided iterable is empty.\n    With two or more positional arguments, return the largest argument.\n\n```\n:::\n:::\n\n\n:::{.note}\n\nIn Jupyter, you can also use `?max` or `max?`.\n\n:::\n\nAlternatively, you can print the `__doc__` method of the function:\n\n::: {#541535a2 .cell execution_count=3}\n``` {.python .cell-code}\nprint(max.__doc__)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nmax(iterable, *[, default=obj, key=func]) -> value\nmax(arg1, arg2, *args, *[, key=func]) -> value\n\nWith a single iterable argument, return its biggest item. The\ndefault keyword-only argument specifies an object to return if\nthe provided iterable is empty.\nWith two or more positional arguments, return the largest argument.\n```\n:::\n:::\n\n\n### Methods of object types\n\nSome methods belong to specific objects types (e.g. lists have a method called `append`).\n\nIn those cases, `help(<method>)` won't work.\n\n:::{.example}\n\nExample:\n\n:::\n\n::: {#45152ced .cell execution_count=4}\n``` {.python .cell-code}\nhelp(append)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[3]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">help</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">append</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'append' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nWhat you need to run instead is `help(<object>.<method>)`.\n\n:::{.example}\n\nExample:\n\n:::\n\n::: {#7230e9d1 .cell execution_count=5}\n``` {.python .cell-code}\nhelp(list.append)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHelp on method_descriptor:\n\nappend(self, object, /) unbound builtins.list method\n    Append object to the end of the list.\n\n```\n:::\n:::\n\n\n",
    "supporting": [
      "intro_doc_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}