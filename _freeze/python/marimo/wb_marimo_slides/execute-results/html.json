{
  "hash": "2099fd1b9aeaf2b71c34306c8e19ddce",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: The next generation of Python notebooks\nfrontpic: ../img/logo_marimo.svg\nfrontpicwidth: 45%\nfrontpicmargintop: 40px\nfrontpicmarginbottom: 50px\nnoshadow: noshadow\nauthor: Marie-Hélène Burle\ndate: 2025-10-28\ndate-format: long\nexecute:\n  freeze: auto\n  cache: true\n  error: true\n  echo: true\nformat:\n  revealjs:\n    <!-- embed-resources: true -->\n    theme: [default, ../../revealjsgreen.scss]\n    logo: /img/favicon_sfudrac.png\n    highlight-style: vim-dark\n    code-line-numbers: false\n    template-partials:\n      - ../../title-slide.html\n    pointer:\n      color: \"#b5111b\"\n      pointerSize: 32\n    link-external-newwindow: true\n    footer: <a href=\"wb_marimo.html\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"rgb(64,81,181)\" class=\"bi bi-arrow-90deg-up\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"/></svg>&nbsp;Back to webinar page</a>\n    auto-stretch: false\nrevealjs-plugins:\n  - pointer\n---\n\n## Notes {.center}\n\n- I am making an opinionated decision to use [uv](https://docs.astral.sh/uv/) (because it is great)\n- Notebooks are great for prototyping but [not at scale](intro_hpc)\n- `marimo` is not available on the Alliance clusters at this point\n- Throughout this talk, I am using code blocks to represent notebook cells\n\n# A new notebook\n\n## What's wrong with Jupyter? {.center}\n\nJupyter notebooks are very popular but they come with\n\n- a nightmare for version control\n- an awkward JSON file format\n- [reproducibility issues](https://blog.jetbrains.com/datalore/2020/12/17/we-downloaded-10-000-000-jupyter-notebooks-from-github-this-is-what-we-learned/#consistency-of-notebooks)\n\n## DAG notebooks {.center}\n\nmarimo notebooks automatically generate an [intermediate representation (IR)](https://en.wikipedia.org/wiki/Intermediate_representation) in the form of a [directed acyclic graph (DAG)](https://en.wikipedia.org/wiki/Directed_acyclic_graph) of\n\n- *definitions* of global variables\n- *references* of global variables\n\nEach cell is parsed into an [abstract syntax tree (AST)](https://en.wikipedia.org/wiki/Abstract_syntax_tree)\n\nStatically inferred (no runtime tracing)\n\n## Saved as Python file {.center}\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\nNotebooks are saved as `.py` files \\\nEach cell stored as a function \\\nPure functions can be reused as modules\n\n:::\n\n:::{.column width=\"3%\"}\n:::\n\n:::{.column width=\"47%\"}\n:::\n\n::::\n\n. . .\n\n::::{.columns}\n\n:::{.column width=\"40%\"}\n:::\n\n:::{.column width=\"5%\"}\n\n<br>\n➔\n\n:::\n\n:::{.column width=\"55%\"}\n\nEasy version control \\\nDirectly executable as script or web app \\\nReadable in any text editor\n\n:::\n\n::::\n\n## Interactive elements {.center}\n\n`marimo.ui` creates interactive user interface (UI) elements with first-class support\n\nNotebooks are automatically updated when values are changed via interactions\n\n## Apps {.center}\n\n## The constraints {.center}\n\n[Global variables must be unique]{.emph}\n\nVariables local to a cell are created with `_`\n\n[In-place transformations are not allowed]{.emph}\n\n## Computation cost {.center}\n\nThere is a cost to updating the DAG at each change\n\nThis can be controlled by disabling/enabling:\n\n- autorun on startup\n- specific cells\n- autorun on cell change (lazy execution)\n\n# Getting started\n\n## Installation {.center}\n\nCreate a [`uv` project](https://docs.astral.sh/uv/concepts/projects/):\n\n```{.bash}\nuv init --bare\n```\n\nInstall marimo in it as a [development dependency](https://docs.astral.sh/uv/concepts/projects/dependencies/#development-dependencies):\n\n```{.bash}\nuv add --dev marimo\n```\n\n(Optional) add tools `marimo` can make use of:\n\n```{.bash}\nuv add --dev ruff basedpyright mcp\n```\n\n## Configuration {.center}\n\nVia GUI\n\n- Notebook settings\n- User settings\n\nUser settings saved in `~/.config/marimo/marimo.toml` or similar \\\nLogs found at `~/.cache/marimo/logs` or similar\n\n## Key bindings {.center}\n\nDisplayed by xxx\n\n## Package manager {.center}\n\nUser [settings]{.codelike} ➔ [Package Management]{.codelike} ➔ [Manager]{.codelike}: `uv`\n\n## AI pair programming {.center}\n\n### Code completion\n\nUse [GitHub Copilot](https://github.com/features/copilot) without account\n\n### AI assistant\n\nUse any of the classic LLMs with API key\n\n### MCP servers\n\n- `marimo` docs\n- [Context7](https://context7.com/)\n\n## Tutorials {.center}\n\n```{.bash}\nuv run marimo tutorial intro\n```\n\nFor more tutorials, replace `intro` with any of:\n\n`dataflow` \\\n`ui` \\\n`markdown` \\\n`plots` \\\n`sql` \\\n`layout` \\\n`fileformat` \\\n`markdown-format` \\\n`for-jupyter-users`\n\n## ipynb notebooks conversion {.center}\n\n```{.bash}\nmarimo convert notebook.ipynb -o notebook.py\n```\n\nIPython magics are replaced by Python functions\n\n# General Usage\n\n## Package installation {.center}\n\nUsing `uv`:\n\n```{.bash}\nuv add <package>\n```\n\n:::{.example}\n\nExample:\n\n:::\n\n```{.bash}\nuv add numpy\n```\n\nor via GUI (after it has been [set properly](package-manager))\n\n## Outputs display {.center}\n\n2 types of outputs:\n\n- console outputs\n- cell outputs\n\n## Console outputs {.center}\n\nText written to `stdout`/`stderr`\n\n➔ displayed below cells by default \\\n➔ hidden in app mode\n\n## Cell outputs {.center}\n\n➔ displayed above cells by default \\\n➔ shown in app mode\n\n:::{.example}\n\nExample:\n\n:::\n\nCompare:\n\n```{.python}\nprint(\"This is a console output.\")\n```\n\n```{.python}\n\"This is a cell output.\"\n```\n\n## Forbidden re-assignments {.center}\n\nVariables can be reassigned within cells, but not in different cells as it would break the DAG\n\nThe cell with the re-assignment will not run\n\n:::{.notenoit}\n\nEven reusing `i` in loops is a problem\n\n:::\n\n## Variables local to cells {.center}\n\nVariables prefixed with `_` are local to cells\n\n(and names can thus be reused between cells)\n\n```{.python}\n_a = 3\nprint(_a)\n```\n\n```{.python}\nprint(_a)\n```\n\n:::{.notenoit}\n\nSo `_i` can be reused between cells:\n\n```{.python}\nfor _i in range(10):\n    ...\n```\n\n:::\n\n## Mutations do not call re-runs {.center}\n\nIf you run the following in 3 distinct cells:\n\n```{.python}\nl = [1, 2, 3]\n```\n\n```{.python}\nlen(l)\n```\n\n```{.python}\nl.append(4)\n```\n\nrunning the 3^rd^ cell will not update the 2^nd^ one\n\n## += and similar won't run {.center}\n\n## Refs and defs {.center}\n\n```{.python}\nvar = 8\nprint(mo.defs(), mo.refs())\n```\n\n```{.python}\nvar + 7\nprint(mo.defs(), mo.refs())\n```\n\n## Dataflow programming {.center}\n\nExecution order ≠ cell order\n\n## No cycles permitted {.center}\n\n```{.python}\nvar1 = 4\nprint(var2)\n```\n\n```{.python}\nvar2 = 7\nprint(var1)\n```\n\n## Attribute changes don't call re-runs {.center}\n\n# Interactive user interface\n\n## Example {.center}\n\n::: {#4ec72076 .cell execution_count=2}\n``` {.python .cell-code}\nslider = mo.ui.slider(start=1, stop=10, step=1)\nslider\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[1]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">slider</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">mo</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">ui</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">slider</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">start</span><span style=\"color:rgb(255,95,135)\">=</span><span style=\"color:rgb(175,135,255)\">1</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">stop</span><span style=\"color:rgb(255,95,135)\">=</span><span style=\"color:rgb(175,135,255)\">10</span><span class=\"ansi-bright-white-fg\">,</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">step</span><span style=\"color:rgb(255,95,135)\">=</span><span style=\"color:rgb(175,135,255)\">1</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span class=\"ansi-bright-white-fg\">slider</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'mo' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n::: {#f7263330 .cell execution_count=3}\n``` {.python .cell-code}\nslider.value\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[2]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">slider</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">value</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'slider' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## UI elements are defs {.center}\n\n",
    "supporting": [
      "wb_marimo_slides_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {}
  }
}