{
  "hash": "5e707218ed9282d7b795d72de0973be5",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: The next generation of Python notebooks\nfrontpic: img/logo_marimo.svg\nfrontpicwidth: 45%\nfrontpicmargintop: 40px\nfrontpicmarginbottom: 50px\nnoshadow: noshadow\nauthor: Marie-Hélène Burle\ndate: 2025-10-28\ndate-format: long\nexecute:\n  freeze: auto\n  cache: true\n  error: true\n  echo: true\nformat:\n  revealjs:\n    <!-- embed-resources: true -->\n    theme: [default, ../revealjsgreen.scss]\n    logo: /img/favicon_sfudrac.png\n    highlight-style: vim-dark\n    code-line-numbers: false\n    template-partials:\n      - ../title-slide.html\n    pointer:\n      color: \"#b5111b\"\n      pointerSize: 32\n    link-external-newwindow: true\n    footer: <a href=\"wb_marimo.html\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"rgb(64,81,181)\" class=\"bi bi-arrow-90deg-up\" viewBox=\"0 0 16 16\"><path fill-rule=\"evenodd\" d=\"M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z\"/></svg>&nbsp;Back to webinar page</a>\n    auto-stretch: false\nrevealjs-plugins:\n  - pointer\n---\n\n## Notes {.center}\n\n- I am making an opinionated decision to use [uv](https://docs.astral.sh/uv/) for installation\n- Notebooks are great for prototyping but [not at scale](intro_hpc)\n- `marimo` is not available on the Alliance clusters at this point\n\n# A new notebook\n\n## What's wrong with Jupyter? {.center}\n\nJupyter notebooks are very popular but they come with downsides:\n\n- Version control nightmare\n- Awkward JSON file format\n- [Reproducibility issues](https://blog.jetbrains.com/datalore/2020/12/17/we-downloaded-10-000-000-jupyter-notebooks-from-github-this-is-what-we-learned/#consistency-of-notebooks)\n\n## DAG dataflow {.center}\n\nmarimo notebooks automatically generate an [intermediate representation (IR)](https://en.wikipedia.org/wiki/Intermediate_representation) in the form of a [directed acyclic graph (DAG)](https://en.wikipedia.org/wiki/Directed_acyclic_graph) of:\n\n- *definitions* (`defs`) of global variables\n- *references* (`refs`) of global variables\n\nEach cell is parsed into an [abstract syntax tree (AST)](https://en.wikipedia.org/wiki/Abstract_syntax_tree)\n\nStatically inferred (no runtime tracing)\n\n## Python files {.center}\n\n::::{.columns}\n\n:::{.column width=\"50%\"}\n\nNotebooks are saved as `.py` files \\\nEach cell is stored as a function \\\nPure functions can be reused as modules\n\n:::\n\n:::{.column width=\"3%\"}\n:::\n\n:::{.column width=\"47%\"}\n:::\n\n::::\n\n. . .\n\n::::{.columns}\n\n:::{.column width=\"40%\"}\n:::\n\n:::{.column width=\"5%\"}\n\n<br>\n➔\n\n:::\n\n:::{.column width=\"55%\"}\n\nEasy version control \\\nDirectly executable as scripts or web apps \\\nReadable in text editors\n\n:::\n\n::::\n\n## Interactive elements {.center}\n\n`marimo.ui` creates interactive user interface (UI) elements with first-class support\n\nNotebooks are automatically updated when values are changed via interactions\n\n## Cool features {.center}\n\n- Turn notebooks into apps\n- Integrated AI\n- Docstrings on hover\n\n## The constraints {.center}\n\nAll this comes at the cost of some constraints:\n\n- Global variables must be unique\n- In-place transformations are not allowed\n- Mutations and attributes are not tracked\n\n:::{.note}\n\nAll this is good practice for strict functional programming (and [JAX](https://docs.jax.dev/en/latest/index.html))!\n\n:::\n\n## Computation cost {.center}\n\nThere is a cost to updating the DAG at each change\n\nRuntime configurations and cell settings allow to control when re-runs happen\n\n# Getting started\n\n## Installation {.center}\n\nCreate a [`uv` project](https://docs.astral.sh/uv/concepts/projects/):\n\n```{.bash}\nuv init --bare\n```\n\nInstall marimo in it as a [development dependency](https://docs.astral.sh/uv/concepts/projects/dependencies/#development-dependencies):\n\n```{.bash}\nuv add --dev marimo\n```\n\n(Optional) add tools `marimo` can make use of:\n\n```{.bash}\nuv add --dev ruff basedpyright mcp\n```\n\n## Launch a notebook {.center}\n\n```{.bash}\nmarimo edit notebook.py\n```\n\n:::{.notenoit}\n\nIf you installed with [uv](https://docs.astral.sh/uv/), first activate the virtual env or run instead:\n\n```{.bash}\nuv run marimo edit notebook.py\n```\n\n:::\n\n## Configuration {.center}\n\n*Via GUI*\n\n![](img/settings.svg) [top right corner (Notebook settings)]{.small} ➔ [User settings]{.codelike}\n\n---\n\n<br><br><br><br><br>\n\n### Package manager\n\n![](img/settings.svg){fig-alt=\"noshadow\"} ➔ [User settings]{.codelike} ➔ [Packages & Data]{.codelike} ➔ [Package Management]{.codelike} ➔ [Manager]{.codelike}: `uv`\n\n---\n\n<br><br>\n\n### AI pair programming {.center}\n\n#### Code completion\n\nUse [GitHub Copilot](https://github.com/features/copilot) without account\n\n#### AI assistant\n\nUse any of the classic LLMs with API key\n\n#### MCP servers\n\n- `marimo` docs\n- [Context7](https://context7.com/)\n\n---\n\nUser settings are saved in `~/.config/marimo/marimo.toml` [(or similar in different OS)]{.small}\n\n```{.toml}\n[mcp]\npresets = [\"marimo\", \"context7\"]\n\n[mcp.mcpServers]\n\n[runtime]\nwatcher_on_save = \"lazy\"\nauto_reload = \"off\"\ndefault_sql_output = \"auto\"\nauto_instantiate = true\nstd_stream_max_bytes = 1000000\ndefault_auto_download = []\non_cell_change = \"autorun\"\noutput_max_bytes = 8000000\nreactive_tests = true\n\n[formatting]\nline_length = 79\n\n[completion]\ncopilot = \"github\"\nactivate_on_typing = true\n\n[snippets]\ncustom_paths = []\ninclude_default_snippets = true\n\n[keymap]\npreset = \"default\"\ndestructive_delete = true\n```\n\n:::{.note}\n\nLogs are found at `~/.cache/marimo/logs` [(or similar)]{.small}\n\n:::\n\n## Official website {.center}\n\nExcellent documentation:\n\n[User guides](https://docs.marimo.io/guides/)\n\n[API reference](https://docs.marimo.io/api/)\n\n## Tutorials {.center}\n\n```{.bash}\nmarimo tutorial intro\n```\n\nFor more tutorials, replace `intro` with any of:\n\n`dataflow` \\\n`ui` \\\n`markdown` \\\n`plots` \\\n`sql` \\\n`layout` \\\n`fileformat` \\\n`markdown-format` \\\n`for-jupyter-users`\n\n:::{.notenoit}\n\nIf you installed with [uv](https://docs.astral.sh/uv/), first activate the virtual env or run instead:\n\n```{.bash}\nuv run marimo tutorial intro\n```\n\n:::\n\n## Key bindings {.center}\n\nVim kbd available\n\n#### Command mode\n\n`Esc`\n\nWith vim keybindings are enabled or other issues, use `Ctrl+Esc` or `Shift+Esc` instead\n\nNavigation between cells, copy/cut/paste cells\n\n#### Edit mode\n\n`Enter` or click on a cell\n\nEdit content\n\n## Key bindings {.center}\n\nCustomizable. List displayed by `Ctrl-Shift-h`\n\n![](img/marimo_kbd.png){width=\"45%\" fig-align=\"center\"}\n\n## ipynb notebooks conversion {.center}\n\n```{.bash}\nmarimo convert notebook.ipynb -o notebook.py\n```\n\n:::{.note}\n\nIPython magics are replaced by Python functions\n\n:::\n\n:::{.notenoit}\n\nAfter a `uv` install, run (or activate the virtual env):\n\n```{.bash}\nuv run marimo convert notebook.ipynb -o notebook.py\n```\n\n:::\n\n# General Usage\n\n## Installing Python packages {.center}\n\n*Directly in the notebook* following a pop-up when trying to use uninstalled package\n\n:::{.notenoit}\n\nOf course this can also be done *via the command line:*\n\n```{.bash}\nuv add <package>\n```\n\n:::{.example}\n\nExample:\n\n:::\n\n```{.bash}\nuv add numpy\n```\n\n:::\n\n## Outputs displays {.center}\n\n::::{.columns}\n\n:::{.column width=\"49%\"}\n\n### Console outputs\n\nText written to `stdout`/`stderr`\n\n➔ displayed below cells by default \\\n➔ hidden in app mode\n\n:::{.example}\n\nExample:\n\n:::\n\n```{.python filename=\"cell\"}\nprint(\"This is a console output.\")\n```\n\n:::\n\n:::{.column width=\"2%\"}\n:::\n\n:::{.column width=\"49%\"}\n\n### Cell outputs\n\n<br>\n\n➔ displayed above cells by default \\\n➔ shown in app mode\n\n:::{.example}\n\nExample:\n\n:::\n\n```{.python filename=\"cell\"}\n\"This is a cell output.\"\n```\n\n:::\n\n::::\n\n## Forbidden re-assignments {.center}\n\nVariables re-assignments are OK within cells, but not across cells\n\nThe cells with re-assignments will not run\n\n:::{.note}\n\nReusing `i` in loops across cells won't work\n\n`+=`, `-=`, etc. won't run\n\n:::\n\n---\n\n### Solutions\n\n::::{.columns}\n\n:::{.column width=\"47%\"}\n\n#### Use cell local variables\n\nVariables prefixed with `_` are cell local\n\n(names can thus be reused between cells)\n\n```{.python filename=\"cell 0\"}\n_a = 3\nprint(_a)\n```\n\n```{.python filename=\"cell 1\"}\nprint(_a)\n```\n\n```\nname '_a' is not defined\n```\n\n:::{.notenoit}\n\n`_i` can be reused between cells:\n\n```{.python filename=\"cell\"}\nfor _i in range(10):\n    print(_i)\n```\n\n:::\n\n:::\n\n:::{.column width=\"6%\"}\n\n<br><br><br><br><br>\n\n&ensp;or\n\n:::\n\n:::{.column width=\"47%\"}\n\n#### Wrap in functions\n\nFunctions create local environments\n\nVariables created in functions don't enter the global environment\n\n➔ their names can be reused in functions in different cells\n\n```{.python filename=\"cell\"}\ndef _():\n     for i in range(10):\n         print(i)\n\n_()\n```\n\n:::\n\n::::\n\n## Mutations do not call re-runs {.center}\n\nLet's consider:\n\n```{.python filename=\"cell 0\"}\nl = [1, 2, 3]\n```\n\n```{.python filename=\"cell 1\"}\nlen(l)\n```\n\n```{.python filename=\"cell 2\"}\nl.append(4)\n```\n\nrunning the [cell 2]{.codelike} will not update [cell 1]{.codelike}\n\n---\n\n<br><br>\n\n### Solutions\n\n::::{.columns}\n\n:::{.column width=\"47%\"}\n\nMutate variables in the cells in which they are defined\n\n```{.python filename=\"cell 0\"}\nl = [1, 2, 3]\nl.append(4)\n```\n\n```{.python filename=\"cell 1\"}\nlen(l)\n```\n\n:::\n\n:::{.column width=\"6%\"}\n\n<br><br><br>\n\n&ensp;or\n\n:::\n\n:::{.column width=\"47%\"}\n\nCreate new variables\n\n```{.python filename=\"cell 0\"}\nl = [1, 2, 3]\n```\n\n```{.python filename=\"cell 1\"}\nlen(l)\n```\n\n```{.python filename=\"cell 2\"}\nl2 = l + [4]\n```\n\n```{.python filename=\"cell 3\"}\nlen(l2)\n```\n\n:::\n\n::::\n\n## Deleting cells {.center}\n\nAutomatically deletes variables defined in them (and cells with refs to them are re-run)\n\n## No cycles permitted {.center}\n\nThis would make the DAG impossible:\n\n```{.python filename=\"cell 0\"}\nvar1 = 4\nprint(var2)\n```\n\n```{.python filename=\"cell 1\"}\nvar2 = 7\nprint(var1)\n```\n\n## Attributes are not tracked {.center}\n\nAssignments to attributes aren't tracked:\n\n```{.python filename=\"cell 0\"}\nclass Object(object):\n    pass\n\nobj = Object()\nobj.somefield = \"somevalue\"\n```\n\n```{.python filename=\"cell 1\"}\nprint(obj.somefield)\n```\n\n```{.python filename=\"cell 2\"}\nobj.somefield = \"newvalue\"\n```\n\n[cell 1]{.codelike} is not re-run and updated automatically\n\n## Dataflow programming {.center}\n\nExecution order $\\neq$ cell order\n\nThe execution order is determined by the DAG\n\nThis is a totally valid notebook:\n\n```{.python filename=\"cell 0\"}\nprint(new_var)\n```\n\n```{.python filename=\"cell 1\"}\nnew_var = 8\n```\n\n## Dataflow programming {.center}\n\nThese are exactly equivalent notebooks:\n\n::::{.columns}\n\n:::{.column width=\"49%\"}\n\n```{.python filename=\"cell 0\"}\na = 3\n```\n\n```{.python filename=\"cell 1\"}\na1 = 8.9\na2 = 8.3\n```\n\n```{.python filename=\"cell 2\"}\na3 = 3.0\n```\n\n```{.python filename=\"cell 3\"}\na4 = 1.2\n```\n\n```{.python filename=\"cell 4\"}\nmy_list = [a1, a2, a3, a4]\n```\n\n:::\n\n:::{.column width=\"2%\"}\n:::\n\n:::{.column width=\"49%\"}\n\n```{.python filename=\"cell 0\"}\nmy_list = [a1, a2, a3, a4]\n```\n\n```{.python filename=\"cell 1\"}\na = 3\n```\n\n```{.python filename=\"cell 2\"}\na3 = 3.0\n```\n\n```{.python filename=\"cell 3\"}\na1 = 8.9\na2 = 8.3\n```\n\n```{.python filename=\"cell 4\"}\na4 = 1.2\n```\n\n:::\n\n::::\n\n\n## Dataflow navigation {.center}\n\nNavigating and understanding the dataflow is made easy by a number of tools:\n\n- Minimap (`Ctrl-Shift-i`)\n- Dependency explorer (left menu)\n- Reference highlighting and jumping (hover on underlined refs, `Ctrl+click` to jump to defs)\n\n## Dataflow navigation {.center}\n\n::::{.columns}\n\n:::{.column width=\"49%\"}\n\nLet's have a few cells:\n\n```{.python filename=\"cell 0\"}\na = 3\n```\n\n```{.python filename=\"cell 1\"}\na1 = 8.9\na2 = 8.3\n```\n\n```{.python filename=\"cell 2\"}\na3 = 3.0\n```\n\n```{.python filename=\"cell 3\"}\na4 = 1.2\n```\n\n```{.python filename=\"cell 4\"}\nmy_list = [a1, a2, a3, a4]\n```\n\n:::\n\n:::{.column width=\"2%\"}\n:::\n\n:::{.column width=\"49%\"}\n\n&emsp;&emsp;And the corresponding DAG:\n\n```{dot}\n//| echo: false\n//| fig-width: 350px\n\nstrict digraph {\n\nrankdir=\"LR\"\nbgcolor=\"transparent\"\nnode [fontname=\"Inconsolata, sans-serif\", shape=plaintext, shape=oval, fontcolor=gray, color=gray]\nedge [color=\"#0099cc\"]\n\n0 [label=\"cell 0\"]\n1 [label=\"cell 1\"]\n2 [label=\"cell 2\"]\n3 [label=\"cell 3\"]\n4 [label=\"cell 4\"]\n\n{rank=same; 0 1 2 3 4}\n\n0 -> 1 -> 2 -> 3 [style=invis]\n\n0\n1 -> 4\n2 -> 4\n3 -> 4\n}\n```\n\n:::\n\n::::\n\n## Managing runs {.center}\n\nRe-running heavy computations to update the notebooks can be costly\n\nThis can be controlled by disabling/enabling:\n\n- autorun on startup\n- autorun on cell change (lazy execution)\n- specific cells\n\n## Markdown {.center}\n\nYou can turn cells into markdown and select [raw strings](https://docs.python.org/3/reference/lexical_analysis.html#raw-strings) and/or [f-string](https://docs.python.org/3/tutorial/inputoutput.html#tut-f-strings)\n\n![](img/marimo_md.png){fig-align=\"right\" width=\"30%\"}\n\n:::{.right}\n\n[at the bottom right corner of every cell]{.small}\n\n:::\n\n## Markdown extensions {.center}\n\n```{.default filename=\"cell\"}\n/// details | Click for details.\n\nYou can create accordion blocks.\n///\n```\n\n```{.default filename=\"cell\"}\n/// admonition | Tips\n\nYou can create info blocks.\n///\n```\n\n```{.default filename=\"cell\"}\n/// attention | Be careful!\n\nYou can create warning blocks.\n///\n```\n\n## Plots\n\nPlotting works as you would expect\n\nJavaScript interactivity also works\n\n```{.python filename=\"cell\"}\nimport plotly.express as px\ndf = px.data.tips()\n\nfig = px.density_contour(df, x=\"total_bill\", y=\"tip\")\nfig.update_traces(contours_coloring=\"fill\", contours_showlabels = True)\nfig.show()\n```\n\n::: {#01df69c0 .cell output-location='slide' execution_count=2}\n\n::: {.cell-output .cell-output-display}\n```{=html}\n<div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n        <script charset=\"utf-8\" src=\"https://cdn.plot.ly/plotly-3.1.1.min.js\" integrity=\"sha256-HUEFyfiTnZJxCxur99FjbKYTvKSzwDaD3/x5TqHpFu4=\" crossorigin=\"anonymous\"></script>                <div id=\"b294b16a-21b2-4319-a89b-afdee5b2474e\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                window.PLOTLYENV=window.PLOTLYENV || {};                                if (document.getElementById(\"b294b16a-21b2-4319-a89b-afdee5b2474e\")) {                    Plotly.newPlot(                        \"b294b16a-21b2-4319-a89b-afdee5b2474e\",                        [{\"contours\":{\"coloring\":\"fill\",\"showlabels\":true},\"hovertemplate\":\"total_bill=%{x}\\u003cbr\\u003etip=%{y}\\u003cbr\\u003ecount=%{z}\\u003cextra\\u003e\\u003c\\u002fextra\\u003e\",\"legendgroup\":\"\",\"line\":{\"color\":\"#636efa\"},\"name\":\"\",\"showlegend\":false,\"x\":{\"dtype\":\"f8\",\"bdata\":\"PQrXo3D9MECuR+F6FK4kQMP1KFyPAjVArkfhehSuN0DXo3A9Cpc4QArXo3A9SjlACtejcD2KIUDhehSuR+E6QBSuR+F6FC5Aj8L1KFyPLUAK16NwPYokQOF6FK5HoUFA16NwPQrXLkCuR+F6FG4yQClcj8L1qC1AFK5H4XqUNUApXI\\u002fC9agkQArXo3A9SjBAuB6F61H4MEBmZmZmZqY0QOxRuB6F6zFACtejcD1KNEAK16NwPYovQPYoXI\\u002fCtUNAUrgehevRM0CPwvUoXM8xQD0K16NwvSpA4XoUrkdhKUAzMzMzM7M1QGZmZmZmpjNAmpmZmZkZI0CamZmZmVkyQB+F61G4Hi5AcT0K16OwNEBI4XoUrscxQI\\u002fC9ShcDzhAj8L1KFxPMECuR+F6FO4wQHE9CtejsDJAhetRuB5FP0AK16NwPQowQPYoXI\\u002fCdTFA4XoUrkfhK0Bcj8L1KFwjQGZmZmZmZj5ACtejcD1KMkB7FK5H4To2QDMzMzMzM0BAzczMzMyMPEAK16NwPQoyQBSuR+F6FClAFK5H4XqUJEBI4XoUrmdBQOF6FK5H4SNAj8L1KFyPOUA9CtejcH0zQOF6FK5HAUNAKVyPwvVoOkB7FK5H4XomQMP1KFyPIkhACtejcD1KNEAfhetRuJ4rQArXo3A9CiZACtejcD1KMkDXo3A9CpcxQBSuR+F6FDRAMzMzMzNzMECPwvUoXI8IQHsUrkfhOjRAhetRuB4FLkAK16NwPQooQFK4HoXrETFAXI\\u002fC9SjcOkBI4XoUrkc5QPYoXI\\u002fCdS1AhetRuB4FJUDsUbgehesxQDMzMzMzMztAw\\u002fUoXI\\u002fCNkAK16NwPUoxQHE9CtejcDNAKVyPwvWoMECkcD0K1yMkQNejcD0KV0BA9ihcj8L1L0AK16NwPWpBQI\\u002fC9ShcDypASOF6FK5HMkD2KFyPwrU4QClcj8L1KDVAuB6F61H4PEA9CtejcH02QAAAAAAAABdAUrgehetRMEAAAAAAAMA2QPYoXI\\u002fCFURASOF6FK5HO0CPwvUoXA8oQMP1KFyPAjVA7FG4HoXrKEAzMzMzM7MmQMP1KFyPwi5AZmZmZmYmRkDsUbgehWs2QOxRuB6F6zRAuB6F61G4LkA9CtejcH00QPYoXI\\u002fCNTlAPQrXo3A9MkAfhetRuJ4sQAAAAAAAACxAAAAAAAAAHUApXI\\u002fC9QhDQDMzMzMz8zdA9ihcj8K1OUCPwvUoXE8xQK5H4XoU7j1AzczMzMxMJUBcj8L1KNwoQBSuR+F6FDhA4XoUrkdhJ0DXo3A9CtcqQIXrUbgehSxAZmZmZmbmL0D2KFyPwvUoQM3MzMzMzD1ACtejcD0KIUAK16NwPQotQMP1KFyPwiZAUrgehevRNkAUrkfhehQzQIXrUbgeRTRA16NwPQpXJkCF61G4HoUoQMP1KFyPQjJAhetRuB4FIUApXI\\u002fC9agkQM3MzMzMTCxAAAAAAAAAMEBSuB6F61EqQLgehetReDFAZmZmZmYmQUC4HoXrUZhEQM3MzMzMDDtArkfhehRuMEAzMzMzM7MgQKRwPQrXozJAPQrXo3C9J0CPwvUoXI8jQArXo3A9Ch5ApHA9CtcjLEDD9Shcj0IqQMP1KFyPQjFAzczMzMyMOECF61G4HsUzQJqZmZmZ2T1A9ihcj8IVSEAAAAAAAAA5QEjhehSuxypAPQrXo3B9MEAAAAAAAIA1QFK4HoXrUSlA9ihcj8I1MEAfhetRuJ4rQMP1KFyPgjFAhetRuB6FOEDD9Shcj8I0QPYoXI\\u002fCtT9ArkfhehQuJUDD9Shcj0IlQEjhehSuZ0lAH4XrUbieL0AAAAAAAAAdQJqZmZmZ2T9AUrgehevRMEAzMzMzM3NAQKRwPQrX4zFA9ihcj8L1LEAzMzMzMzMjQHE9CtejUEFAMzMzMzNTQUAUrkfhelQ3QM3MzMzMrEZA7FG4HoUrN0BmZmZmZkZEQHE9CtejsDRAZmZmZmbmNED2KFyPwnU+QGZmZmZmJjJAmpmZmZkZN0DhehSuR2EvQI\\u002fC9ShczzNAcT0K16NwPED2KFyPwvUuQBSuR+F6lDBAPQrXo3A9HkCuR+F6FK4kQK5H4XoUjkVAAAAAAAAAKkCF61G4HgUrQPYoXI\\u002fCtTJAexSuR+F6KUAAAAAAAAAqQGZmZmZmZjBASOF6FK6HNEC4HoXrUXgwQNejcD0KlzpAPQrXo3BdQ0CF61G4HkU4QIXrUbgehSlAj8L1KFwPPkCkcD0K1+M5QArXo3A9KkhACtejcD2KKkDsUbgehSs8QM3MzMzMzClAZmZmZmYmPECuR+F6FC4nQPYoXI\\u002fC9R5ApHA9CtcjPkBSuB6F61EoQNejcD0K1ypAKVyPwvUoIUD2KFyPwvUvQNejcD0K1ypAhetRuB5FMECuR+F6FC4kQDMzMzMzczRAj8L1KFyPKkAfhetRuB42QMP1KFyPAjhA4XoUrkdhL0C4HoXrUTgnQArXo3A9iiVAj8L1KFwPL0CkcD0K1yMkQDMzMzMzMylACtejcD1qQEAK16NwPepBQEjhehSuBz1ArkfhehQuO0DsUbgehas2QFK4HoXr0TFASOF6FK7HMkA=\"},\"xaxis\":\"x\",\"xbingroup\":\"x\",\"y\":{\"dtype\":\"f8\",\"bdata\":\"KVyPwvUo8D+PwvUoXI\\u002f6PwAAAAAAAAxAexSuR+F6CkDhehSuR+EMQNejcD0K1xJAAAAAAAAAAED2KFyPwvUIQFyPwvUoXP8\\u002f16NwPQrXCUBcj8L1KFz7PwAAAAAAABRAH4XrUbge+T8AAAAAAAAIQClcj8L1KAhAXI\\u002fC9ShcD0C4HoXrUbj6P65H4XoUrg1AAAAAAAAADEDNzMzMzMwKQFK4HoXrURBAAAAAAAAABkDXo3A9CtcBQFK4HoXrUR5AcT0K16NwCUC4HoXrUbgCQAAAAAAAAABAAAAAAAAAAEAzMzMzMzMRQAAAAAAAAAhAMzMzMzMz9z8AAAAAAAAEQAAAAAAAAAhAmpmZmZmZA0ApXI\\u002fC9SgKQM3MzMzMzAxAAAAAAAAAAECPwvUoXI8IQHsUrkfhegJAAAAAAAAAFEDsUbgehesBQFK4HoXrUQRAexSuR+F6CEAfhetRuB71P2ZmZmZmZhZAAAAAAAAACEAAAAAAAAAUQAAAAAAAABhAZmZmZmZmAEAAAAAAAAAIQAAAAAAAAARAzczMzMzMBEDNzMzMzMwUQPYoXI\\u002fC9fg\\u002fXI\\u002fC9ShcEUAUrkfhehQMQAAAAAAAAAhAAAAAAAAA+D8pXI\\u002fC9Sj8P+xRuB6F6xpArkfhehSuCUAAAAAAAAAAQK5H4XoUrv8\\u002fFK5H4XoUDkAfhetRuB4FQDMzMzMzMwlAw\\u002fUoXI\\u002fCA0AAAAAAAADwPxSuR+F6FABAuB6F61G4AECF61G4HoX\\u002fPwAAAAAAAAhAH4XrUbgeCUAAAAAAAAAUQJqZmZmZmQFAAAAAAAAA9D+kcD0K16MIQAAAAAAAABBAAAAAAAAACECuR+F6FK4FQAAAAAAAAAhAMzMzMzMzC0BI4XoUrkf9PwAAAAAAABRAPQrXo3A9AECuR+F6FK4UQAAAAAAAAABAAAAAAAAAEEBmZmZmZmYXQAAAAAAAAAhAAAAAAAAACEAAAAAAAAAMQAAAAAAAAPA\\u002fMzMzMzMzEUAAAAAAAAAKQOxRuB6F6xJAAAAAAAAAEEAAAAAAAAD4PwAAAAAAAAhAAAAAAAAA+D8AAAAAAAAEQAAAAAAAAAhAAAAAAAAABEDXo3A9CtcLQFK4HoXrURBAPQrXo3A9+j89CtejcD0QQClcj8L1KBFAFK5H4XoUDkAAAAAAAAAQQAAAAAAAAAhAAAAAAAAA8D8AAAAAAAAQQGZmZmZmZgRAAAAAAAAAEEAAAAAAAAAMQEjhehSuRxRAAAAAAAAA+D\\u002fNzMzMzMz8P1yPwvUoXAdAexSuR+F6AkDhehSuR+H6PwAAAAAAAARAAAAAAAAAAEApXI\\u002fC9SgEQM3MzMzMzBBArkfhehSu9z8AAAAAAAAAQAAAAAAAAABAcT0K16NwAUAAAAAAAAD4P6RwPQrXowZAAAAAAAAA+D8AAAAAAAAAQAAAAAAAAApAAAAAAAAA9D8AAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAGQAAAAAAAAAxAzczMzMzMGkAAAAAAAAAUQAAAAAAAABRAZmZmZmZmAkAAAAAAAAD4P8P1KFyPwvU\\u002fFK5H4XoU+j+uR+F6FK77PwAAAAAAAABAAAAAAAAABEAAAAAAAAAAQOxRuB6F6wVAAAAAAAAAAEAAAAAAAAAAQI\\u002fC9ShcjxRAAAAAAAAAFEAAAAAAAAAOQOF6FK5H4QRAAAAAAAAAAEAAAAAAAAAMQAAAAAAAAARAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAAhA16NwPQrXC0DsUbgehesBQAAAAAAAABJAw\\u002fUoXI\\u002fC+T8AAAAAAAAAQAAAAAAAACRASOF6FK5HCUCamZmZmZkUQHE9CtejcAlAAAAAAAAAEEDhehSuR+EIQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAQQGZmZmZmZgxAcT0K16NwDUCamZmZmZkWQAAAAAAAAAxAAAAAAAAAGkAAAAAAAAAIQAAAAAAAABRAAAAAAAAADEAAAAAAAAAAQAAAAAAAAAxAAAAAAAAAEEAAAAAAAAD4P8P1KFyPwhBAexSuR+F6BEApXI\\u002fC9SgAQAAAAAAAABBACtejcD0K9z8AAAAAAAAAQAAAAAAAABRAAAAAAAAAAEAAAAAAAAAAQAAAAAAAABBAFK5H4XoUAEAAAAAAAAAAQAAAAAAAAARAAAAAAAAAEEDXo3A9CtcJQEjhehSuRwtAAAAAAAAACEA9CtejcD0AQNejcD0K1wFAAAAAAAAAAECkcD0K16MUQAAAAAAAACJAAAAAAAAABEAAAAAAAAAaQJqZmZmZmfE\\u002fAAAAAAAACEAAAAAAAAD4PwrXo3A9Cvc\\u002fuB6F61G4CECamZmZmZkBQNejcD0K1wtAuB6F61G4\\u002fj8AAAAAAAAIQEjhehSuR\\u002fk\\u002fAAAAAAAABEAAAAAAAAAAQAAAAAAAAAhAw\\u002fUoXI\\u002fCBUAK16NwPQoHQAAAAAAAAABAAAAAAAAACEAfhetRuB4LQIXrUbgehfc\\u002fAAAAAAAACEAAAAAAAAD0PwAAAAAAAPA\\u002fuB6F61G48j+uR+F6FK4SQK5H4XoUrhdAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAPw\\u002fAAAAAAAACEA=\"},\"yaxis\":\"y\",\"ybingroup\":\"y\",\"type\":\"histogram2dcontour\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermap\":[{\"type\":\"scattermap\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"},\"margin\":{\"b\":0,\"l\":0,\"r\":0,\"t\":30}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"total_bill\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"tip\"}},\"legend\":{\"tracegroupgap\":0}},                        {\"responsive\": true}                    ).then(function(){\n                            \nvar gd = document.getElementById('b294b16a-21b2-4319-a89b-afdee5b2474e');\nvar x = new MutationObserver(function (mutations, observer) {{\n        var display = window.getComputedStyle(gd).display;\n        if (!display || display === 'none') {{\n            console.log([gd, 'removed!']);\n            Plotly.purge(gd);\n            observer.disconnect();\n        }}\n}});\n\n// Listen for the removal of the full notebook cells\nvar notebookContainer = gd.closest('#notebook-container');\nif (notebookContainer) {{\n    x.observe(notebookContainer, {childList: true});\n}}\n\n// Listen for the clearing of the current output cell\nvar outputEl = gd.closest('.output');\nif (outputEl) {{\n    x.observe(outputEl, {childList: true});\n}}\n\n                        })                };            </script>        </div>\n```\n:::\n:::\n\n\n## Apps {.center}\n\nYou can run a notebook as an app with:\n\n```{.bash}\nmarimo run notebook.py\n```\n\n## AI {.center}\n\n### Completion\n\nProvided out of the box with [GitHub Copilot](https://github.com/copilot/). Tab to complete\n\n### Generate cells with AI\n\nBox at the bottom of notebook\n\n### Cells refactoring\n\nIn the menu of each cell\n\n## AI {.center}\n\n### Chat\n\nButton on the left menu opens a chat panel\n\n### Going crazy\n\n`marimo new` asks an LLM to generate a full notebook from scratch:\n\n:::{.example}\n\nExample:\n\n:::\n\n```{.bash}\nmarimo new \"Create a cool-looking 3D plot with matplotlib.\"\n```\n\n# Interactive UI\n\n## The marimo module {.center}\n\nEvery notebook loads the `marimo` module automatically\n\nInteractive elements make use of the module, so it is convenient to create an alias:\n\n```{.python filename=\"cell 0\"}\nimport marimo as mo\n```\n\n## Create an interactive element {.center}\n\nYou create an element with one of the `mo.ui` methods\n\nCall it at the end of the cell to display it:\n\n```{.python filename=\"cell 1\"}\nslider = mo.ui.slider(start=1, stop=10, step=1)\nslider\n```\n\n:::{.note}\n\nUI elements are `defs`\n\n:::\n\nYou can embed it in a markdown output and format it with an [f-string](https://docs.python.org/3/tutorial/inputoutput.html#tut-f-strings):\n\n```{.python filename=\"cell 1\"}\nslider = mo.ui.slider(start=1, stop=10, step=1)\nmo.md(f\"Pick a value: {slider}\")\n```\n\n## Access the value {.center}\n\nYou then need to access its value in another cell:\n\n```{.python filename=\"cell 2\"}\nslider.value\n```\n\nWhich you can also embed in some markdown:\n\n```{.python filename=\"cell 2\"}\nmo.md(f\"You picked the value: {slider.value}\")\n```\n\n## Example {.center}\n\nCreate a date selector element:\n\n```{.python filename=\"cell 0\"}\ndate = mo.ui.date()\nmo.md(f\"Select a date: {date}\")\n```\n\nPrint the selected date:\n\n```{.python filename=\"cell 1\"}\nmo.md(f\"Your selected date is: {date.value}\")\n```\n\n## Progress bars {.center}\n\nSimilar to [tqdm](https://github.com/tqdm/tqdm):\n\n```{.python filename=\"cell\"}\nimport time\n\nfor i in mo.status.progress_bar(range(50)):\n    print(i)\n    time.sleep(0.1)\n```\n\n# Under the hood\n\n## Python files for notebooks {.center}\n\nNotebooks get written in Python as:\n\n```{.python filename=\"notebook.py\"}\nimport marimo\n\n__generated_with = \"<some version>\"\napp = marimo.App()\n\n\"<your cells go here>\"\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n## Notebook settings {.center}\n\nAdded as:\n\n```{.python filename=\"notebook.py\"}\nimport marimo\n\n__generated_with = \"<some version>\"\napp = marimo.App(width=\"medium\", css_file=\"custom.css\", auto_download=[\"html\"])\n\n\"<your cells go here>\"\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n## What are cells really? {.center}\n\nCells are functions wrapped by an `@app.cell` decorator\n\nThis makes them easy to turn into apps\n\nWhen you create an empty cell, your `.py` file (let's call it `notebook.py`) sees the following added:\n\n```{.python filename=\"notebook.py\"}\n@app.cell\ndef _():\n    return\n```\n\n## What are cells really? {.center}\n\nNow, add in the cell:\n\n```{.python filename=\"cell 0\"}\nx = 8\ny = 9\n```\n\nand you get in your `.py` file:\n\n```{.python filename=\"notebook.py\"}\n@app.cell\ndef _():\n    x = 8\n    y = 9\n    return\n```\n\n## What are cells really? {.center}\n\nHide the code and the script turns into:\n\n```{.python filename=\"notebook.py\"}\n@app.cell(hide_code=True)\ndef _():\n    x = 8\n    y = 9\n    return\n```\n\n## References {.center}\n\nCell dependencies are passed as arguments to the function:\n\n::::{.columns}\n\n:::{.column width=\"49%\"}\n\nNotebook cells:\n\n```{.python filename=\"cell 1\"}\nprint(x)\n```\n<br><br>\n```{.python filename=\"cell 2\"}\nprint(x, y)\n```\n\n:::\n\n:::{.column width=\"2%\"}\n:::\n\n:::{.column width=\"49%\"}\n\nCorresponding Python file:\n\n```{.python filename=\"notebook.py\"}\n@app.cell\ndef _(x):\n    print(x)\n    return\n```\n\n```{.python filename=\"notebook.py\"}\n@app.cell\ndef _(x, y):\n    print(x, y)\n    return\n```\n\n:::\n\n::::\n\n## Print refs and defs {.center}\n\n`mo.defs` and `mo.refs` output the defs and refs of a cell:\n\n```{.python filename=\"cell 0\"}\nvar = 8\nprint(f\"The defs are: {mo.defs()} and the refs are: {mo.refs()}\")\n```\n\n```{.python filename=\"cell 1\"}\nvar + 7\nprint(f\"The defs are: {mo.defs()} and the refs are: {mo.refs()}\")\n```\n\n## How is md turned into Python? {.center}\n\nMarkdown text is wrapped in `mo.md` functions:\n\n```{.python filename=\"notebook.py\"}\n@app.cell\ndef _(mo):\n    mo.md(\n        r\"\"\"\n    ## Heading\n\n    Some markdown with some *italic* formatting.\n    \"\"\"\n    )\n    return\n```\n\n",
    "supporting": [
      "wb_marimo_slides_files"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdn.jsdelivr.net/npm/requirejs@2.3.6/require.min.js\" integrity=\"sha384-c9c+LnTbwQ3aujuU7ULEPVvgLs+Fn6fJUvIGTsuu1ZcCf11fiEubah0ttpca4ntM sha384-6V1/AdqZRWk1KAlWbKBlGhN7VG4iE/yAZcO6NZPMF8od0vukrvr0tg4qY6NSrItx\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js\" integrity=\"sha384-ZvpUoO/+PpLXR1lu4jmpXWu80pZlYUAfxl5NsBMWOEPSjUn/6Z/hRTt8+pR6L4N2\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n<script type=\"text/javascript\">\nwindow.PlotlyConfig = {MathJaxConfig: 'local'};\nif (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}\n</script>\n<script type=\"module\">import \"https://cdn.plot.ly/plotly-3.1.1.min\"</script>\n\n"
      ]
    }
  }
}