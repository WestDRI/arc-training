{
  "hash": "96aa043f4b3527c0666c7a543020813c",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Lazy evaluation\nauthor: Marie-Hélène Burle\n---\n\n:::{.def}\n\nWhen it comes to high-performance computing, one of the strengths of Polars is that it supports [lazy evaluation](https://en.wikipedia.org/wiki/Lazy_evaluation). Lazy evaluation instantly returns a future that can be used down the code without waiting for the result of the computation to get calculated. It also allows the query optimizer to combine operations, very much the way compiled languages work.\n\nIf you want to speedup your code, **use lazy execution whenever possible.**\n\n:::\n\nTry to use the lazy API from the start, when reading a file.\n\nIn previous examples, we used `read_csv` to read our data. This returns a Polars DataFrame. Instead, you can use `scan_csv` to create a LazyFrame:\n\n::: {#553c22b1 .cell execution_count=2}\n``` {.python .cell-code}\nimport polars as pl\n\nurl = \"https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv\"\n\ndf = pl.read_csv(url)\ndf_lazy = pl.scan_csv(url)\n\nprint(type(df))\nprint(type(df_lazy))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n<class 'polars.dataframe.frame.DataFrame'>\n<class 'polars.lazyframe.frame.LazyFrame'>\n```\n:::\n:::\n\n\n:::{.note}\n\nThere are scan functions [for all the numerous IO methods Polars offers](https://docs.pola.rs/user-guide/io/).\n\n:::\n\nIf you already have a DataFrame, you can create a LazyFrame from it with the `lazy` method:\n\n::: {#c6e5805b .cell execution_count=3}\n``` {.python .cell-code}\ndf_lazy = df.lazy()\n```\n:::\n\n\nWhen you run queries on a LazyFrame, instead of evaluating them, Polars creates a graph and runs [many optimizations](https://docs.pola.rs/user-guide/lazy/optimizations/) on it.\n\nTo evaluate the code and get the result, you use the `collect` method.\n\nWe will see this in action in the next section.\n\n",
    "supporting": [
      "polars_lazy_files"
    ],
    "filters": [],
    "includes": {}
  }
}