{
  "hash": "cf37c8550b1221f912f740f8f1d6c585",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Libraries, packages, and modules\nauthor: Marie-Hélène Burle\n---\n\n:::{.def}\n\n\n\n:::\n\n## The standard library\n\nPython comes with a [standard library](https://docs.python.org/3/library/index.html#library-index). As soon as you launch the program, you can access part of the standard library such as the [built-in functions](https://docs.python.org/3/library/functions.html) and [built-in constants](https://docs.python.org/3/library/constants.html):\n\n:::{.example}\n\nExample:\n\n:::\n\n::: {#bb93573f .cell execution_count=1}\n``` {.python .cell-code}\ntype(3)    # type is a built-in function\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\nint\n```\n:::\n:::\n\n\nMost of the standard library however is held in [several thematic modules](https://docs.python.org/3/py-modindex.html). Each module contains additional functions, constants, and facilities. Before you can use them, you need to load them into your session.\n\n### Example: the [os](https://docs.python.org/3/library/os.html#module-os) module\n\nThe [os](https://docs.python.org/3/library/os.html#module-os) module contains the function `getcwd` returning the path of the current working directory as a string.\n\nThis function cannot be used directly:\n\n::: {#38b914a0 .cell execution_count=2}\n``` {.python .cell-code}\ngetcwd()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[2]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">getcwd</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'getcwd' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nIn order to access it, you have several options:\n\n- Load the module, then access the function as a method of the module:\n\n::: {#7de71bd1 .cell execution_count=3}\n``` {.python .cell-code}\nimport os\nos.getcwd()\n```\n\n::: {.cell-output .cell-output-display execution_count=3}\n```\n'/home/marie/parvus/prog/mint/python'\n```\n:::\n:::\n\n\n:::{.note}\n\nYou can create an alias for the module:\n\n::: {#1369d814 .cell execution_count=4}\n``` {.python .cell-code}\nimport os as o\no.getcwd()\n```\n\n::: {.cell-output .cell-output-display execution_count=4}\n```\n'/home/marie/parvus/prog/mint/python'\n```\n:::\n:::\n\n\nWhile it is a little silly for a module with such a short name, it is very convenient with modules of longer names.\n\n:::\n\n- Import the function directly:\n\n::: {#120d1b1c .cell execution_count=5}\n``` {.python .cell-code}\nfrom os import getcwd\ngetcwd()\n```\n\n::: {.cell-output .cell-output-display execution_count=5}\n```\n'/home/marie/parvus/prog/mint/python'\n```\n:::\n:::\n\n\n",
    "supporting": [
      "intro_lib_files"
    ],
    "filters": [],
    "includes": {}
  }
}