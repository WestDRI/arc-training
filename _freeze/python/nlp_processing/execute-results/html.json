{
  "hash": "5dea6fffbd4b1c91757bc6bcb082b673",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Text processing\nauthor: Marie-Hélène Burle\n---\n\n:::{.def}\n\nIn this section, we will use the [TextBlob package](https://textblob.readthedocs.io/en/stable/index.html) for part of speech tagging and basic tokenization.\n\n:::\n\n:::{.callout-note collapse=\"true\"}\n\n## Necessary code from previous sessions\n\nHere is the necessary code from the previous session, stripped to the minimum:\n\n::: {#5dc05d0c .cell execution_count=2}\n``` {.python .cell-code}\n# Load packages\nimport requests\nimport pymupdf\n\n# Download the data\nurl = \"https://funnyengwish.wordpress.com/wp-content/uploads/2017/05/pratchett_terry_wyrd_sisters_-_royallib_ru.pdf\"\nresponse = requests.get(url)\n\n# Extract data from pdf\ndata = response.content\ndoc = pymupdf.Document(stream=data)\n\n# Create text from first pdf page\npage1 = doc[0].get_text()\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[1]</span><span class=\"ansi-green-fg\">, line 3</span>\n<span class=\"ansi-bright-green-fg\">      1</span> <span style=\"color:rgb(138,138,138)\"># Load packages</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span style=\"color:rgb(255,95,135)\">import</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">requests</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">3</span> <span style=\"color:rgb(255,95,135)\">import</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">pymupdf</span>\n<span class=\"ansi-bright-green-fg\">      5</span> <span style=\"color:rgb(138,138,138)\"># Download the data</span>\n<span class=\"ansi-bright-green-fg\">      6</span> <span class=\"ansi-bright-white-fg\">url</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">https://funnyengwish.wordpress.com/wp-content/uploads/2017/05/pratchett_terry_wyrd_sisters_-_royallib_ru.pdf</span><span style=\"color:rgb(215,215,135)\">\"</span>\n\n<span class=\"ansi-bright-red-fg\">ModuleNotFoundError</span>: No module named 'pymupdf'</pre>\n```\n:::\n\n:::\n:::\n\n\n:::\n\n## TextBlob\n\n[TextBlob](https://textblob.readthedocs.io/en/stable/index.html) is the NLP package that we will use in this course for tagging, tokenization, normalization, and sentiment analysis.\n\nWe first need to load it in our session:\n\n::: {#cbb41d5b .cell execution_count=3}\n``` {.python .cell-code}\nfrom textblob import TextBlob\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">ModuleNotFoundError</span>                       Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[2]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span style=\"color:rgb(255,95,135)\">from</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">textblob</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">import</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">TextBlob</span>\n\n<span class=\"ansi-bright-red-fg\">ModuleNotFoundError</span>: No module named 'textblob'</pre>\n```\n:::\n\n:::\n:::\n\n\nBefore we can use TextBlob on our text, we need to convert the `page1` string into a `TextBlob` object:\n\n::: {#f5006b7c .cell execution_count=4}\n``` {.python .cell-code}\ntext = TextBlob(page1)\ntype(text)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[3]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">text</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">=</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">TextBlob</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">page1</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span class=\"ansi-bright-white-fg\">type</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">text</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'TextBlob' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Part of speech tagging\n\n[Part of speech tagging](https://en.wikipedia.org/wiki/Part-of-speech_tagging) attributes [parts of speech (POS)](https://en.wikipedia.org/wiki/Part_of_speech) tags to each word of a text.\n\nYou can do this simply by using the `tags` property on a TextBlob object: `text.tags`. Because there are a lot of words in the first pdf page, this would create a very long output.\n\nThe result is a list:\n\n::: {#135cfa42 .cell execution_count=5}\n``` {.python .cell-code}\ntype(text.tags)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[4]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">type</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">tags</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nAnd each element of the list is a tuple:\n\n::: {#49becefa .cell execution_count=6}\n``` {.python .cell-code}\ntype(text.tags[0])\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[5]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">type</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">tags</span><span class=\"ansi-bright-white-fg\">[</span><span style=\"color:rgb(175,135,255)\">0</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nWe don't have to print the full list. Let's only print the first 20 tuples:\n\n::: {#9aeeec4c .cell execution_count=7}\n``` {.python .cell-code}\ntext.tags[:20]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[6]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">tags</span><span class=\"ansi-bright-white-fg\">[</span><span class=\"ansi-bright-white-fg\">:</span><span style=\"color:rgb(175,135,255)\">20</span><span class=\"ansi-bright-white-fg\">]</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n:::{.callout-note collapse=\"true\"}\n\n## [Tagset from the University of Pennsylvania](https://www.ling.upenn.edu/courses/Fall_2003/ling001/penn_treebank_pos.html) as reference\n\n| Tag | Description|\n|---|---|\n| CC | Coordinating conjunction |\n| CD | Cardinal number |\n| DT | Determiner |\n| EX | Existential there |\n| FW | Foreign word |\n| IN | Preposition or subordinating conjunction |\n| JJ | Adjective |\n| JJR | Adjective, comparative |\n| JJS | Adjective, superlative |\n| LS | List item marker |\n| MD | Modal |\n| NN | Noun, singular or mass |\n| NNS | Noun, plural |\n| NNP | Proper noun, singular |\n| NNPS | Proper noun, plural |\n| PDT | Predeterminer |\n| POS | Possessive ending |\n| PRP | Personal pronoun |\n| PRP$ | Possessive pronoun |\n| RB | Adverb |\n| RBR | Adverb, comparative |\n| RBS | Adverb, superlative |\n| RP | Particle |\n| SYM | Symbol |\n| TO | to |\n| UH | Interjection |\n| VB | Verb, base form |\n| VBD | Verb, past tense |\n| VBG | Verb, gerund or present participle |\n| VBN | Verb, past participle |\n| VBP | Verb, non-3rd person singular present |\n| VBZ | Verb, 3rd person singular present |\n| WDT | Wh-determiner |\n| WP | Wh-pronoun |\n| WP$ | Possessive wh-pronoun |\n| WRB | Wh-adverb |\n\n:::\n\n## Noun phrases extraction\n\n[Noun phrases](https://en.wikipedia.org/wiki/Noun_phrase) can be extracted with the `noun_phrases` property:\n\n::: {#9d1c3964 .cell execution_count=8}\n``` {.python .cell-code}\nprint(text.noun_phrases)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[7]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">noun_phrases</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nThe output is a `WordList` object:\n\n::: {#95bee53c .cell execution_count=9}\n``` {.python .cell-code}\ntype(text.noun_phrases)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[8]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">type</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">noun_phrases</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n## Tokenization\n\n### Words\n\nTextBlob allows to extract words easily with the `words` attribute:\n\n::: {#fb59afc5 .cell execution_count=10}\n``` {.python .cell-code}\nprint(text.words)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[9]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">words</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n:::{.exo}\n\n:::{.yourturn}\n\nYour turn:\n\n:::\n\nHow many words are there in the first pdf page of Wyrd Sisters?\n\n:::\n\n### Sentences\n\nExtracting sentences is just as easy with the `sentences` attribute.\n\nLet's extract the first 10 sentences:\n\n::: {#94c60ea9 .cell execution_count=11}\n``` {.python .cell-code}\ntext.sentences[:10]\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[10]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">sentences</span><span class=\"ansi-bright-white-fg\">[</span><span class=\"ansi-bright-white-fg\">:</span><span style=\"color:rgb(175,135,255)\">10</span><span class=\"ansi-bright-white-fg\">]</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\nThe output is however quite ugly. We could make this a lot more readable by printing each sentence separated by a blank line:\n\n::: {#823f7734 .cell execution_count=12}\n``` {.python .cell-code}\nfor s in text.sentences[:10]:\n    print(s)\n    print(\"\\n\")\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[11]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span style=\"color:rgb(95,215,255)\">for</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">s</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">in</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">sentences</span><span class=\"ansi-bright-white-fg\">[</span><span class=\"ansi-bright-white-fg\">:</span><span style=\"color:rgb(175,135,255)\">10</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">s</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">      3</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(175,135,255)\">\\n</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n:::{.note}\n\nIn Python strings (as in many other languages), `\"\\n\"` represents a new line.\n\n:::\n\nOr you could add lines of hyphens between the sentences:\n\n::: {#cb037fe9 .cell execution_count=13}\n``` {.python .cell-code}\nfor s in text.sentences[:10]:\n    print(s)\n    print(\"-\" * 100)\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[12]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span style=\"color:rgb(95,215,255)\">for</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg\">s</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">in</span><span class=\"ansi-bright-white-fg\"> </span><span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">sentences</span><span class=\"ansi-bright-white-fg\">[</span><span class=\"ansi-bright-white-fg\">:</span><span style=\"color:rgb(175,135,255)\">10</span><span class=\"ansi-bright-white-fg\">]</span><span class=\"ansi-bright-white-fg\">:</span>\n<span class=\"ansi-bright-green-fg\">      2</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span class=\"ansi-bright-white-fg\">s</span><span class=\"ansi-bright-white-fg\">)</span>\n<span class=\"ansi-bright-green-fg\">      3</span> <span class=\"ansi-bright-white-fg\">    </span><span class=\"ansi-bright-white-fg\">print</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">-</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(255,95,135)\">*</span><span class=\"ansi-bright-white-fg\"> </span><span style=\"color:rgb(175,135,255)\">100</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n:::{.exo}\n\n:::{.yourturn}\n\nYour turn:\n\n:::\n\n- What is the type of `text.sentences`? \\\n- Could you print just the 5^th^ sentence? \\\n- Just the last sentence?\n\n:::\n\n## Word counts\n\nWe already saw that we can extract words with the `words` attribute. Now, we can add the `count` method to get the frequency of specific words.\n\n::: {#c7b8c5d9 .cell execution_count=14}\n``` {.python .cell-code}\ntext.words.count(\"gods\")\n```\n\n::: {.cell-output .cell-output-error}\n\n::: {.ansi-escaped-output}\n```{=html}\n<pre><span class=\"ansi-bright-red-fg\">---------------------------------------------------------------------------</span>\n<span class=\"ansi-bright-red-fg\">NameError</span>                                 Traceback (most recent call last)\n<span class=\"ansi-bright-cyan-fg\">Cell</span><span class=\"ansi-bright-cyan-fg\"> </span><span class=\"ansi-green-fg\">In[13]</span><span class=\"ansi-green-fg\">, line 1</span>\n<span class=\"ansi-bright-green-fg\">----&gt; </span><span class=\"ansi-bright-green-fg\">1</span> <span class=\"ansi-bright-white-fg ansi-yellow-bg\">text</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">words</span><span style=\"color:rgb(255,95,135)\">.</span><span class=\"ansi-bright-white-fg\">count</span><span class=\"ansi-bright-white-fg\">(</span><span style=\"color:rgb(215,215,135)\">\"</span><span style=\"color:rgb(215,215,135)\">gods</span><span style=\"color:rgb(215,215,135)\">\"</span><span class=\"ansi-bright-white-fg\">)</span>\n\n<span class=\"ansi-bright-red-fg\">NameError</span>: name 'text' is not defined</pre>\n```\n:::\n\n:::\n:::\n\n\n",
    "supporting": [
      "nlp_processing_files"
    ],
    "filters": [],
    "includes": {}
  }
}