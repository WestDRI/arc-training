---
title: Understanding Emacs modes
frontpic: img/logo_emacs.png
frontpicwidth: 30%
noshadow: noshadow
author: Marie-Hélène Burle
date: 2024-09-17
date-format: long
execute:
  error: true
  echo: true
format:
  revealjs:
    # embed-resources: true
    theme: [default, ../revealjs.scss]
    logo: /img/logo_sfudrac.png
    highlight-style: ayu
    code-line-numbers: false
    template-partials:
      - ../title-slide.html
    pointer:
      color: "#b5111b"
      pointerSize: 32
    link-external-newwindow: true
    footer: <a href="wb_emacs_modes.html"><svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="rgb(153, 153, 153)" class="bi bi-arrow-90deg-up" viewBox="0 0 16 16"><path fill-rule="evenodd" d="M4.854 1.146a.5.5 0 0 0-.708 0l-4 4a.5.5 0 1 0 .708.708L4 2.707V12.5A2.5 2.5 0 0 0 6.5 15h8a.5.5 0 0 0 0-1h-8A1.5 1.5 0 0 1 5 12.5V2.707l3.146 3.147a.5.5 0 1 0 .708-.708l-4-4z"/></svg>&nbsp;Back to webinar page</a>
    auto-stretch: false
revealjs-plugins:
  - pointer
---

## Why use Emacs? {.center}

. . .

::::{.columns}

:::{.column width="30%"}

<br>
<span style="font-size: 2rem;">To brag.</span>

:::

:::{.column width="5%"}
:::

:::{.column width="65%"}

![](img/emacs2.jpg){fig-alt="noshadow" width="80%"}

:::

::::

## Why use Emacs? {.center}

::::{.columns}

:::{.column width="30%"}

<br>
<span style="font-size: 2rem;">To brag. Obviously.</span>

:::

:::{.column width="5%"}
:::

:::{.column width="65%"}

![](img/emacs2.jpg){fig-alt="noshadow" width="80%"}

:::

::::

## Why use Emacs? {.center}

<br>
<span style="font-size: 2rem;">But there are other reasons:

- Free and open source
- Endlessly customizable
- Amazing diff
- Macros
- Text searching
- IDE
- Lossless undo/redo
- Fun!
- ...

## Now ... getting started can be daunting {.center}

![](img/intuitive.jpg){width="62%" fig-align="center"}

## ... and it doesn't necessarily get easier {.center}

![](img/learning_curve.jpg){fig-align="center"}

. . .

<center>But it's all worth it!</center>

# A few Emacs concepts

## Emacs Lisp {.center}

[Emacs Lisp](https://en.wikipedia.org/wiki/Emacs_Lisp) is a dialect of the [Lisp programming language](https://en.wikipedia.org/wiki/Lisp_(programming_language)) developed especially to write the editing functionality of the Emacs text editor (the rest of Emacs and its interpreter are written in C).

Emacs is endlessly customizable to anyone with a basic knowledge of Emacs Lisp. In particular,  [variables](https://www.gnu.org/software/emacs/manual/html_node/elisp/Variables.html) and [functions](https://www.gnu.org/software/emacs/manual/html_node/elisp/Functions.html) setting the behaviour and appearance of the text editor can be created or modified

## Graphical display {.center}

Emacs runs into one or multiple *frame(s)*

A frame contains one or more *window(s)*

Each window contains:

- a buffer (area where the text to edit is displayed)
- the *echo area* (at the bottom—this is where outputs are displayed)
- the *mode line* (area with information, amongst other things, on the modes enabled in the buffer

## Graphical display {.center}

![](img/display01.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display02.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display03.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display04.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display05.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display06.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display07.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display08.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display09.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Graphical display {.center}

![](img/display10.png){width="80%" fig-alt="noshadow" fig-align="center"}

## Buffers {.center}

Emacs *buffers* are Lisp objects holding text that can be viewed and edited (e.g. content of a file, representation of the content of a directory, programming or scripting shell, graph, image, pdf)

Buffers are displayed in windows

## Keybindings (kbd) {.center}

![From [Ecol LG #134](http://linuxgazette.net/134/ecol.html) by [Javier Malonda](https://linuxgazette.net/authors/malonda.html)](img/kbd.png){fig-align="center"}

## Kbd notations {.center}

`C-h` means pressing the `Control` key and the `H` key together

`M-x` means pressing the `Alt` (Windows) or `Option` (MacOS) key and the `X` key together

`C-h m` means pressing the `Control` key and the `H` key together, *then* pressing the `M` key

`C-c C-x m` means pressing `Ctl + C`, *then* `Ctl + X`, *then* `M`

`C-x C-c M-w C-m M-v M-t M-u` means that you probably should choose another kbd

## Command execution {.center}

A useful way to execute a command interactively, when it is not bound to a kbd is to type `M-x`, which turns the bottom of the frame from the *echo area* to the *minibuffer* (a place in which to type inputs, followed by the command name

# Emacs modes

## Major mode {.center}

## Minor modes {.center}

## List of active modes {.center}

Default:

C-h m or M-x `describe-mode`

The major mode can also be determined with C-h v (`describe variable`) `major-mode`

A list of minor modes can be viewed with C-h v (`describe variable`) `minor-mode-list`

With [consult](https://github.com/minad/consult): `consult-minor-mode-menu`

## Changing major mode {.center}

## Turning minor modes on/off {.center}

## Customizing modes {.center}

## Polymode {.center}

# Intro course

