---
title: Packages
author: Marie-Hélène Burle
---

:::{.def}

Emacs is a huge and endlessly customizable toolkit out of the box. In addition, countless external packages have been (and continue to be) developed to add yet more functionality. This section will cover the basics of package installation and customization.

:::

## .emacs.d

Installed packages as well as all other files that Emacs creates (except for the init file which lives in `~/`) get stored in a directory called `.emacs.d` located in your home directory.

## Package manager

There are multiple ways to manage external Emacs packages. [package.el](https://github.com/emacs-mirror/emacs/blob/master/lisp/emacs-lisp/package.el) is the built-in package manager. Several packages provide alternative package management systems. My favourite by far is [straight](https://github.com/radian-software/straight.el). It allows to install packages from anywhere ([MELPA](https://melpa.org/#/), [ELPA](https://elpa.gnu.org/), [Emacsmirror](https://emacsmirror.net/), local server, GitLab, GitHub...). Packages are cloned as Git repos instead of tarballs, making it easy to revert to an old version, edit, etc. Packages are also compiled natively for better efficiency.

To install straight, you need to put the following in your init file:

```{.lisp}
;; Install straight
(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 6))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
    (url-retrieve-synchronously
     "https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el"
     'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))
```

## Package loading and configuration

[Use-package](https://github.com/jwiegley/use-package) is a modern package that allows lazy loading of packages for a speedy startup and a neat way to configure Emacs package by package.

Due to the huge popularity of this package, starting with Emacs 29, use-package ships with Emacs and doesn't need to be installed. Prior to Emacs 29, it can be installed (using straight) with:

```{.lisp}
;; Install use-package (unnecessary for Emacs >= 29)
(straight-use-package 'use-package)
```

## Installing packages

When you install a new package, the best thing to do is to read the README carefully and start with minimal configuration. A growing number of packages will give you configuration instructions using use-package.

With usage, you can add more configurations, either in your use-package declaration or using the [easy customization interface](intro_customize.qmd#easy-customization-interface).

:::{.example}

Example: I previously mentioned the package [consult](https://github.com/minad/consult). Here is a minimal installation of this package using straight and use-package:

:::

```{.lisp}
(use-package consult
	:straight t)
```

If you look at the [configuration](https://github.com/minad/consult?tab=readme-ov-file#configuration) section, you can find a lot of information on how to customize it.
