---
title: Plotting
author: Marie-Hélène Burle
---



It can be convenient to plot directly in the REPL (for instance when using SSH).

```{julia}
using UnicodePlots
histogram(randn(1000), nbins=40)
```

Most of the time however, you will want to make nicer looking graphs. There are many options to plot in Julia.

[Plots](https://github.com/JuliaPlots/Plots.jl) is a convenient Julia package which allows to use the same code with several graphing backends such as the [GR framework](https://gr-framework.org/) (great for speed), [Plotly.js](https://plotly.com/javascript/) (allows interaction with your graphs in a browser), or [PyPlot](https://matplotlib.org/api/pyplot_api.html). The default backend is the [GR framework](https://gr-framework.org/).

[StatsPlots](https://github.com/JuliaPlots/StatsPlots.jl) is an enhanced version with added stats functionality.

:::{.example}

Example:

:::

```{julia}
# First run takes time as the package needs to compile
using StatsPlots
StatsPlots.histogram(randn(1000), bins=40)
```

:::{.note}

Here, we need to explicitly run `StatsPlots.histogram` rather than `histogram` to prevent a conflict with the function of the same name from the package UnicodePlots.

:::
